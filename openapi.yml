openapi: 3.0.2
info:
  title: Cribl Terraform Provider
  description: |
    The Cribl Terraform provider offers a streamlined, repeatable approach for configuring end-to-end infrastructure as code (IaC) and managing resources consistently across Cribl Organizations and Workspaces.

    This Preview feature is still being developed. We do not recommend using it in a production environment, because the feature might not be fully tested or optimized for performance, and related documentation could be incomplete.

    Complementary API reference documentation is available at https://docs.cribl.io/api-reference/. Product documentation is available at https://docs.cribl.io.
  version: 4.12.2-4b17c8d4
  contact:
    name: Support
    email: support@cribl.io
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    clientOauth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://login.cribl.cloud/oauth/token
          scopes: {}
  schemas:
    Pack:
      x-speakeasy-entity: Pack
      type: object
      properties:
        displayName:
          type: string
          example: string
        id:
          type: string
          example: string
        description:
          type: string
          example: string
        version:
          type: string
          example: string
        source:
          type: string
          x-speakeasy-xor-with:
          - filename
          example: string
        disabled:
          type: boolean
          example: true
      required:
      - id
      example:
        displayName: string
        id: string
        description: string
        version: string
        source: string
        disabled: true
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: string
      example:
        message: string
    BannerMessage:
      type: object
      additionalProperties: false
      required:
      - type
      - message
      - theme
      - enabled
      properties:
        id:
          type: string
          title: Banner ID
          example: string
        enabled:
          type: boolean
          title: Enable banner
          description: Show a banner on top of all pages
          example: true
        type:
          enum:
          - custom
          - system
          type: string
          title: Banner type
          example: custom
        created:
          type: number
          title: Time
          description: Time created
          example: 123.45
        theme:
          type: string
          title: Background color
          pattern: ^((#?[0-9a-fA-F]{6})|(orange)|(yellow)|(green)|(blue)|(purple)|(magenta)|(red)){1}$
          example: string
        invertFontColor:
          type: boolean
          title: Invert font color
          example: true
        message:
          type: string
          title: Banner message
          maxLength: 100
          description: Enter a message to display to all your Organization's users, across all Cribl products. Limited to one line and 100 characters; will be truncated as needed.
          example: string
        link:
          type: string
          title: Link URL
          description: Optionally, provide a URL to append to the message
          pattern: ^https?://
          example: string
        linkDisplay:
          type: string
          title: Link display
          maxLength: 100
          description: Optionally, display your link with a short text label instead of the raw URL (100-character limit)
          example: string
        customThemes:
          type: array
          items:
            type: string
            example: string
          example:
          - string
      example:
        id: string
        enabled: true
        type: custom
        created: 123.45
        theme: string
        invertFontColor: true
        message: string
        link: string
        linkDisplay: string
        customThemes:
        - string
    Certificate:
      type: object
      required:
      - id
      - cert
      - privKey
      properties:
        id:
          type: string
          title: Name
          pattern: ^[a-zA-Z0-9_-]+$
          example: string
        description:
          type: string
          title: Description
          example: string
        cert:
          type: string
          title: Certificate
          description: Drag/drop or upload host certificate in PEM/Base64 format, or paste its contents here
          example: string
        privKey:
          type: string
          title: Private key
          example: string
        passphrase:
          type: string
          title: Passphrase
          example: string
        ca:
          type: string
          title: CA certificate
          description: Optionally, drag/drop or upload all CA certificates in PEM/Base64 format. Or, paste certificate contents here. Certificates can be used for client and/or server authentication.
          example: string
        inUse:
          type: array
          title: Referenced
          description: List of configurations that reference this certificate
          items:
            type: string
            example: string
          example:
          - string
      example:
        id: string
        description: string
        cert: string
        privKey: string
        passphrase: string
        ca: string
        inUse:
        - string
    FeaturesEntry:
      type: object
      properties:
        disabled:
          type: boolean
          example: true
        id:
          type: string
          example: string
      required:
      - disabled
      - id
      example:
        disabled: true
        id: string
    SavedJobCollection:
      required:
      - collector
      - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
          example: string
        description:
          type: string
          title: Description
          example: string
        type:
          type: string
          title: Job type
          enum:
          - collection
          - executor
          - scheduledSearch
          example: collection
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
          example: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
          minItems: 0
          default: &id001 []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
            example: string
          example: *id001
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
          default: false
          example: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "*/5 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be running at any time
              default: 1
              minimum: 1
              example: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
              default: true
              example: true
            resumeMissed:
              example: string
            run:
              type: object
              title: Run settings
              required:
              - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 1
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                  - error
                  - warn
                  - info
                  - debug
                  - silly
                  default: info
                  example: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                  default: list
                  example: list
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  example: relative
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 123.45
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 123.45
                timestampTimezone:
                  example: string
                timeWarning:
                  type: object
                  properties: {}
                  example: {}
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events being collected
                  default: "true"
                  example: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: >-
                    Limits the bundle size for small tasks. For example,
                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 1MB
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: >-
                    Limits the bundle size for files above the lower task
                    bundle size. For example, if your upper bundle size is
                    10MB,
                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 10MB
              example:
                rescheduleDroppedTasks: true
                maxTaskReschedule: 1
                logLevel: info
                jobTimeout: "0"
                mode: list
                timeRangeType: relative
                earliest: 123.45
                latest: 123.45
                timestampTimezone: string
                timeWarning: {}
                expression: "true"
                minTaskSize: 1MB
                maxTaskSize: 10MB
          example:
            enabled: true
            cronSchedule: "*/5 * * * *"
            maxConcurrentRuns: 1
            skippable: true
            resumeMissed: string
            run:
              rescheduleDroppedTasks: true
              maxTaskReschedule: 1
              logLevel: info
              jobTimeout: "0"
              mode: list
              timeRangeType: relative
              earliest: 123.45
              latest: 123.45
              timestampTimezone: string
              timeWarning: {}
              expression: "true"
              minTaskSize: 1MB
              maxTaskSize: 10MB
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id002 []
          items:
            type: string
            example: string
          example: *id002
        workerAffinity:
          type: boolean
          title: Worker affinity
          description: If enabled, tasks are created and run by the same Worker Node
          default: false
          example: false
        collector:
          type: object
          required:
          - type
          - conf
          properties:
            type:
              type: string
              title: Collector type
              description: The type of collector to run
              example: string
            conf:
              type: object
              title: Collector-specific settings
              properties: {}
              example: {}
            destructive:
              type: boolean
              title: Destructive
              description: Delete any files collected (where applicable)
              default: false
              example: false
            encoding:
              type: string
              title: Encoding
              description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
              example: string
          example:
            type: string
            conf: {}
            destructive: false
            encoding: string
        input:
          type: object
          properties:
            type:
              type: string
              enum:
              - collection
              default: collection
              example: collection
            breakerRulesets:
              type: array
              title: Event Breaker rulesets
              description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
              items:
                type: string
                example: string
              example:
              - string
            staleChannelFlushMs:
              type: number
              title: Event Breaker buffer timeout (ms)
              description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
              default: 10000
              minimum: 10
              maximum: 43200000
              example: 10000
            sendToRoutes:
              type: boolean
              title: Send to Routes
              description: Send events to normal routing and event processing. Disable to select a specific Pipeline/Destination combination.
              default: true
              example: true
            preprocess:
              type: object
              required:
              - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                command:
                  type: string
                  title: Command
                  description: Command to feed the data through (via stdin) and process its output (stdout)
                  example: string
                args:
                  type: array
                  title: Arguments
                  description: Arguments to be added to the custom command
                  items:
                    type: string
                    example: string
                  example:
                  - string
              example:
                disabled: true
                command: string
                args:
                - string
            throttleRatePerSec:
              type: string
              title: Throttling
              description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
              pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
              default: "0"
              example: "0"
            metadata:
              type: array
              title: Fields
              description: Fields to add to events from this input
              items:
                type: object
                required:
                - name
                - value
                properties:
                  name:
                    type: string
                    title: Field Name
                    example: string
                  value:
                    type: string
                    title: Value
                    description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                    example: string
                example:
                  name: string
                  value: string
              example:
              - name: string
                value: string
            pipeline:
              type: string
              title: Pipeline
              description: Pipeline to process results
              example: string
            output:
              type: string
              title: Destination
              description: Destination to send results to
              example: string
          example:
            type: collection
            breakerRulesets:
            - string
            staleChannelFlushMs: 10000
            sendToRoutes: true
            preprocess:
              disabled: true
              command: string
              args:
              - string
            throttleRatePerSec: "0"
            metadata:
            - name: string
              value: string
            pipeline: string
            output: string
      type: object
      example:
        id: string
        description: string
        type: collection
        ttl: 4h
        ignoreGroupJobsLimit: false
        removeFields: *id001
        resumeOnBoot: false
        environment: string
        schedule:
          enabled: true
          cronSchedule: "*/5 * * * *"
          maxConcurrentRuns: 1
          skippable: true
          resumeMissed: string
          run:
            rescheduleDroppedTasks: true
            maxTaskReschedule: 1
            logLevel: info
            jobTimeout: "0"
            mode: list
            timeRangeType: relative
            earliest: 123.45
            latest: 123.45
            timestampTimezone: string
            timeWarning: {}
            expression: "true"
            minTaskSize: 1MB
            maxTaskSize: 10MB
        streamtags: *id002
        workerAffinity: false
        collector:
          type: string
          conf: {}
          destructive: false
          encoding: string
        input:
          type: collection
          breakerRulesets:
          - string
          staleChannelFlushMs: 10000
          sendToRoutes: true
          preprocess:
            disabled: true
            command: string
            args:
            - string
          throttleRatePerSec: "0"
          metadata:
          - name: string
            value: string
          pipeline: string
          output: string
    SavedJobExecutor:
      required:
      - executor
      - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
          example: string
        description:
          type: string
          title: Description
          example: string
        type:
          type: string
          title: Job type
          enum:
          - collection
          - executor
          - scheduledSearch
          example: collection
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
          example: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
          minItems: 0
          default: &id003 []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
            example: string
          example: *id003
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
          default: false
          example: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "*/5 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be running at any time
              default: 1
              minimum: 1
              example: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
              default: true
              example: true
            resumeMissed:
              example: string
            run:
              type: object
              title: Run settings
              required:
              - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 1
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                  - error
                  - warn
                  - info
                  - debug
                  - silly
                  default: info
                  example: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                  default: list
                  example: list
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  example: relative
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 123.45
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 123.45
                timestampTimezone:
                  example: string
                timeWarning:
                  type: object
                  properties: {}
                  example: {}
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events being collected
                  default: "true"
                  example: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: >-
                    Limits the bundle size for small tasks. For example,
                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 1MB
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: >-
                    Limits the bundle size for files above the lower task
                    bundle size. For example, if your upper bundle size is
                    10MB,
                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 10MB
              example:
                rescheduleDroppedTasks: true
                maxTaskReschedule: 1
                logLevel: info
                jobTimeout: "0"
                mode: list
                timeRangeType: relative
                earliest: 123.45
                latest: 123.45
                timestampTimezone: string
                timeWarning: {}
                expression: "true"
                minTaskSize: 1MB
                maxTaskSize: 10MB
          example:
            enabled: true
            cronSchedule: "*/5 * * * *"
            maxConcurrentRuns: 1
            skippable: true
            resumeMissed: string
            run:
              rescheduleDroppedTasks: true
              maxTaskReschedule: 1
              logLevel: info
              jobTimeout: "0"
              mode: list
              timeRangeType: relative
              earliest: 123.45
              latest: 123.45
              timestampTimezone: string
              timeWarning: {}
              expression: "true"
              minTaskSize: 1MB
              maxTaskSize: 10MB
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id004 []
          items:
            type: string
            example: string
          example: *id004
        executor:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              title: Executor type
              description: The type of executor to run
              example: string
            storeTaskResults:
              type: boolean
              title: Store task results
              description: Determines whether or not to write task results to disk
              default: true
              example: true
            conf:
              type: object
              title: Executor-specific settings
              properties: {}
              example: {}
          example:
            type: string
            storeTaskResults: true
            conf: {}
      type: object
      example:
        id: string
        description: string
        type: collection
        ttl: 4h
        ignoreGroupJobsLimit: false
        removeFields: *id003
        resumeOnBoot: false
        environment: string
        schedule:
          enabled: true
          cronSchedule: "*/5 * * * *"
          maxConcurrentRuns: 1
          skippable: true
          resumeMissed: string
          run:
            rescheduleDroppedTasks: true
            maxTaskReschedule: 1
            logLevel: info
            jobTimeout: "0"
            mode: list
            timeRangeType: relative
            earliest: 123.45
            latest: 123.45
            timestampTimezone: string
            timeWarning: {}
            expression: "true"
            minTaskSize: 1MB
            maxTaskSize: 10MB
        streamtags: *id004
        executor:
          type: string
          storeTaskResults: true
          conf: {}
    SavedJobScheduledSearch:
      required:
      - savedQueryId
      - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
          example: string
        description:
          type: string
          title: Description
          example: string
        type:
          type: string
          title: Job type
          enum:
          - collection
          - executor
          - scheduledSearch
          example: collection
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
          example: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
          minItems: 0
          default: &id005 []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
            example: string
          example: *id005
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
          default: false
          example: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "*/5 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be running at any time
              default: 1
              minimum: 1
              example: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
              default: true
              example: true
            resumeMissed:
              example: string
            run:
              title: Run settings
              type: object
              required:
              - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 1
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                  - error
                  - warn
                  - info
                  - debug
                  - silly
                  default: info
                  example: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                  default: list
                  example: list
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  example: relative
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 123.45
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 123.45
                timestampTimezone:
                  example: string
                timeWarning:
                  type: object
                  properties: {}
                  example: {}
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events being collected
                  default: "true"
                  example: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: >-
                    Limits the bundle size for small tasks. For example,
                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 1MB
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: >-
                    Limits the bundle size for files above the lower task
                    bundle size. For example, if your upper bundle size is
                    10MB,
                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 10MB
              example:
                rescheduleDroppedTasks: true
                maxTaskReschedule: 1
                logLevel: info
                jobTimeout: "0"
                mode: list
                timeRangeType: relative
                earliest: 123.45
                latest: 123.45
                timestampTimezone: string
                timeWarning: {}
                expression: "true"
                minTaskSize: 1MB
                maxTaskSize: 10MB
          example:
            enabled: true
            cronSchedule: "*/5 * * * *"
            maxConcurrentRuns: 1
            skippable: true
            resumeMissed: string
            run:
              rescheduleDroppedTasks: true
              maxTaskReschedule: 1
              logLevel: info
              jobTimeout: "0"
              mode: list
              timeRangeType: relative
              earliest: 123.45
              latest: 123.45
              timestampTimezone: string
              timeWarning: {}
              expression: "true"
              minTaskSize: 1MB
              maxTaskSize: 10MB
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id006 []
          items:
            type: string
            example: string
          example: *id006
        savedQueryId:
          type: string
          title: ID of the SavedQuery
          description: Identifies which search query to run
          example: string
      type: object
      example:
        id: string
        description: string
        type: collection
        ttl: 4h
        ignoreGroupJobsLimit: false
        removeFields: *id005
        resumeOnBoot: false
        environment: string
        schedule:
          enabled: true
          cronSchedule: "*/5 * * * *"
          maxConcurrentRuns: 1
          skippable: true
          resumeMissed: string
          run:
            rescheduleDroppedTasks: true
            maxTaskReschedule: 1
            logLevel: info
            jobTimeout: "0"
            mode: list
            timeRangeType: relative
            earliest: 123.45
            latest: 123.45
            timestampTimezone: string
            timeWarning: {}
            expression: "true"
            minTaskSize: 1MB
            maxTaskSize: 10MB
        streamtags: *id006
        savedQueryId: string
    SavedJob:
      oneOf:
      - $ref: "#/components/schemas/SavedJobCollection"
      - $ref: "#/components/schemas/SavedJobExecutor"
      - $ref: "#/components/schemas/SavedJobScheduledSearch"

    
    InputCollectorBase:
      type: object
      required:
      - collector
      - type
      properties:
        # Common Job-Level Properties
        id:
          type: string
          title: Job ID
          example: string
        type:
          type: string
          enum: [collection]
          default: collection
          x-speakeasy-terraform-ignore: true
          example: collection
        ttl:
          type: string
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore group jobs limit
          default: false
          example: false
        removeFields:
          type: array
          title: Remove fields
          default: &id007 []
          items:
            type: string
            example: string
          example: *id007
        resumeOnBoot:
          type: boolean
          title: Resume on boot
          default: true
          example: true
        environment:
          type: string
          title: Environment
          example: string
        savedState:
          type: object
          title: Saved state
          description: Saved state for the collector
          default: &id008 {}
          example: *id008
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "*/5 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be running at any time
              default: 1
              minimum: 1
              example: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
              default: true
              example: true
            resumeMissed:
              type: boolean
              title: Resume missed
              description: Resume missed scheduled runs
              default: false
              example: false
            run:
              type: object
              title: Run settings
              required:
              - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 1
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum: [error, warn, info, debug, silly]
                  default: info
                  example: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                  default: list
                  enum: [list, preview, run]
                  example: list
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  enum: [relative, absolute]
                  example: relative
                earliest:
                  type: number
                  default: 0
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 0
                latest:
                  type: number
                  default: 1
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 1
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events being collected
                  default: "true"
                  example: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: "Limits the bundle size for small tasks. For example, if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task."
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 1MB
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: "Limits the bundle size for files above the lower task bundle size. For example, if your upper bundle size is 10MB, you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks."
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 10MB
                timeWarning:
                  type: object
                  title: Time warning
                  description: Time warning configuration
                  example: {}
                stateTracking:
                  type: object
                  title: State tracking
                  description: State tracking configuration
                  properties:
                    stateUpdateExpression:
                      type: string
                      title: State update expression
                      example: string
                    stateMergeExpression:
                      type: string
                      title: State merge expression
                      example: string
                    enabled:
                      type: boolean
                      title: Enabled
                      default: false
                      example: false
                  example:
                    stateUpdateExpression: string
                    stateMergeExpression: string
                    enabled: false
              example:
                rescheduleDroppedTasks: true
                maxTaskReschedule: 1
                logLevel: info
                jobTimeout: "0"
                mode: list
                timeRangeType: relative
                earliest: 0
                latest: 1
                expression: "true"
                minTaskSize: 1MB
                maxTaskSize: 10MB
                timeWarning: {}
                stateTracking:
                  stateUpdateExpression: string
                  stateMergeExpression: string
                  enabled: false
          example:
            enabled: true
            cronSchedule: "*/5 * * * *"
            maxConcurrentRuns: 1
            skippable: true
            resumeMissed: false
            run:
              rescheduleDroppedTasks: true
              maxTaskReschedule: 1
              logLevel: info
              jobTimeout: "0"
              mode: list
              timeRangeType: relative
              earliest: 0
              latest: 1
              expression: "true"
              minTaskSize: 1MB
              maxTaskSize: 10MB
              timeWarning: {}
              stateTracking:
                stateUpdateExpression: string
                stateMergeExpression: string
                enabled: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping
          default: &id009 []
          items:
            type: string
            example: string
          example: *id009
        workerAffinity:
          type: boolean
          title: Worker affinity
          description: If enabled, tasks are created and run by the same Worker Node
          default: false

        # Input Configuration
          example: false
        input:
          type: object
          properties:
            type:
              type: string
              enum: [collection]
              default: collection
              example: collection
            breakerRulesets:
              type: array
              title: Event Breaker rulesets
              description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
              items:
                type: string
                example: string
              example:
              - string
            staleChannelFlushMs:
              type: number
              title: Event Breaker buffer timeout (ms)
              description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
              default: 10000
              minimum: 10
              maximum: 43200000
              example: 10000
            sendToRoutes:
              type: boolean
              title: Send to Routes
              description: Send events to normal routing and event processing. Disable to select a specific Pipeline/Destination combination.
              default: true
              example: true
            preprocess:
              type: object
              required: [disabled]
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                command:
                  type: string
                  title: Command
                  description: Command to feed the data through (via stdin) and process its output (stdout)
                  example: string
                args:
                  type: array
                  title: Arguments
                  description: Arguments to be added to the custom command
                  items:
                    type: string
                    example: string
                  example:
                  - string
              example:
                disabled: true
                command: string
                args:
                - string
            throttleRatePerSec:
              type: string
              title: Throttling
              description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
              pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
              default: "0"
              example: "0"
            metadata:
              type: array
              title: Fields
              description: Fields to add to events from this input
              items:
                type: object
                required: [name, value]
                properties:
                  name:
                    type: string
                    title: Field Name
                    example: string
                  value:
                    type: string
                    title: Value
                    description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                    example: string
                example:
                  name: string
                  value: string
              example:
              - name: string
                value: string
            pipeline:
              type: string
              title: Pipeline
              description: Pipeline to process results
              example: string
            output:
              type: string
              title: Destination
              description: Destination to send results to

        # Common collector properties
              example: string
          example:
            type: collection
            breakerRulesets:
            - string
            staleChannelFlushMs: 10000
            sendToRoutes: true
            preprocess:
              disabled: true
              command: string
              args:
              - string
            throttleRatePerSec: "0"
            metadata:
            - name: string
              value: string
            pipeline: string
            output: string
        collector:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              enum: [splunk, s3, azureblob, cribllake, database, gcs, healthcheck, rest]
              title: Collector Type
              example: splunk
            destructive:
              type: boolean
              title: Destructive
              description: Delete any files collected (where applicable)
              default: false
              example: false
            encoding:
              type: string
              title: Encoding
              description: Character encoding to use when parsing ingested data
              default: "utf8"

    # Specific collector type implementations
              example: "utf8"
          example:
            type: splunk
            destructive: false
            encoding: "utf8"
      example:
        id: string
        type: collection
        ttl: 4h
        ignoreGroupJobsLimit: false
        removeFields: *id007
        resumeOnBoot: true
        environment: string
        savedState: *id008
        schedule:
          enabled: true
          cronSchedule: "*/5 * * * *"
          maxConcurrentRuns: 1
          skippable: true
          resumeMissed: false
          run:
            rescheduleDroppedTasks: true
            maxTaskReschedule: 1
            logLevel: info
            jobTimeout: "0"
            mode: list
            timeRangeType: relative
            earliest: 0
            latest: 1
            expression: "true"
            minTaskSize: 1MB
            maxTaskSize: 10MB
            timeWarning: {}
            stateTracking:
              stateUpdateExpression: string
              stateMergeExpression: string
              enabled: false
        streamtags: *id009
        workerAffinity: false
        input:
          type: collection
          breakerRulesets:
          - string
          staleChannelFlushMs: 10000
          sendToRoutes: true
          preprocess:
            disabled: true
            command: string
            args:
            - string
          throttleRatePerSec: "0"
          metadata:
          - name: string
            value: string
          pipeline: string
          output: string
        collector:
          type: splunk
          destructive: false
          encoding: "utf8"
    InputCollectorSplunk:
      allOf:
      - $ref: '#/components/schemas/InputCollectorBase'
      - type: object
        properties:
          collector:
            type: object
            required: [type]
            properties:
              type:
                type: string
                enum: [splunk]
                example: splunk
              conf:
                type: object
                properties:
                  searchHead:
                    type: string
                    title: Search head
                    description: Search head base URL
                    example: string
                  search:
                    type: string
                    title: Search
                    description: Splunk search query
                    example: string
                  earliest:
                    type: string
                    title: Earliest
                    description: Earliest time boundary for the search
                    example: string
                  latest:
                    type: string
                    title: Latest
                    description: Latest time boundary for the search
                    example: string
                  endpoint:
                    type: string
                    title: Search endpoint
                    description: REST API endpoint used to create a search
                    example: string
                  outputMode:
                    type: string
                    enum: [csv, json]
                    title: Output mode
                    example: csv
                  authentication:
                    type: string
                    enum: [none, basic, basicSecret, token, tokenSecret, login, loginSecret, oauth, oauthSecret, google_oauth, google_oauthSecret, hmac]
                    title: Authentication
                    example: none
                  timeout:
                    type: integer
                    minimum: 0
                    maximum: 1800
                    title: Timeout (secs)
                    example: 123
                  useRoundRobinDns:
                    type: boolean
                    title: Use round robin DNS
                    example: true
                  disableTimeFilter:
                    type: boolean
                    title: Disable time filter
                    example: true
                  rejectUnauthorized:
                    type: boolean
                    title: Reject unauthorized certificates
                    example: true
                  handleEscapedChars:
                    type: boolean
                    title: Handle escaped characters
                    example: true
                  username:
                    type: string
                    title: Username
                    example: string
                  password:
                    type: string
                    title: Password
                    example: string
                  credentialsSecret:
                    type: string
                    title: Credentials secret
                    example: string
                  token:
                    type: string
                    title: Bearer token
                    example: string
                  tokenSecret:
                    type: string
                    title: Bearer token secret

                    example: string
                example:
                  searchHead: string
                  search: string
                  earliest: string
                  latest: string
                  endpoint: string
                  outputMode: csv
                  authentication: none
                  timeout: 123
                  useRoundRobinDns: true
                  disableTimeFilter: true
                  rejectUnauthorized: true
                  handleEscapedChars: true
                  username: string
                  password: string
                  credentialsSecret: string
                  token: string
                  tokenSecret: string
            example:
              type: splunk
              conf:
                searchHead: string
                search: string
                earliest: string
                latest: string
                endpoint: string
                outputMode: csv
                authentication: none
                timeout: 123
                useRoundRobinDns: true
                disableTimeFilter: true
                rejectUnauthorized: true
                handleEscapedChars: true
                username: string
                password: string
                credentialsSecret: string
                token: string
                tokenSecret: string
        example:
          collector:
            type: splunk
            conf:
              searchHead: string
              search: string
              earliest: string
              latest: string
              endpoint: string
              outputMode: csv
              authentication: none
              timeout: 123
              useRoundRobinDns: true
              disableTimeFilter: true
              rejectUnauthorized: true
              handleEscapedChars: true
              username: string
              password: string
              credentialsSecret: string
              token: string
              tokenSecret: string
    InputCollectorRest:
      allOf:
      - $ref: '#/components/schemas/InputCollectorBase'
      - type: object
        properties:
          collector:
            type: object
            required: [type]
            properties:
              type:
                type: string
                enum: [rest]
                example: rest
              conf:
                type: object
                properties:
                    # Authentication Properties
                  authentication:
                    type: string
                    enum: [none, basic, basicSecret, token, tokenSecret, login, loginSecret, oauth, oauthSecret, google_oauth, google_oauthSecret, hmac]
                    title: Authentication
                    example: none
                  username:
                    type: string
                    title: Username
                    example: string
                  password:
                    type: string
                    title: Password
                    example: string
                  credentialsSecret:
                    type: string
                    title: Credentials secret
                    example: string
                  token:
                    type: string
                    title: Bearer token
                    example: string
                  tokenSecret:
                    type: string
                    title: Bearer token secret
                    example: string
                  loginUrl:
                    type: string
                    title: Login URL
                    description: URL for authentication login
                    example: string
                  loginBody:
                    type: string
                    title: Login body
                    description: Body content for login request
                    example: string
                  authHeaderKey:
                    type: string
                    title: Auth header key
                    description: Header key for authentication
                    example: string
                  authHeaderExpr:
                    type: string
                    title: Auth header expression
                    description: Expression for auth header value
                    example: string
                  clientSecretParamName:
                    type: string
                    title: Client secret parameter name
                    example: string
                  authRequestParams:
                    type: array
                    title: Auth request parameters
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          title: Parameter name
                          example: string
                        value:
                          type: string
                          title: Parameter value
                          example: string
                      example:
                        name: string
                        value: string
                    example:
                    - name: string
                      value: string
                  tokenRespAttribute:
                    type: string
                    title: Token response attribute
                    description: Attribute name for token in response
                    example: string
                  authRequestHeaders:
                    type: array
                    title: Auth request headers
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          title: Header name
                          example: string
                        value:
                          type: string
                          title: Header value

                    # Collection Properties
                          example: string
                      example:
                        name: string
                        value: string
                    example:
                    - name: string
                      value: string
                  collectUrl:
                    type: string
                    title: Collect URL
                    description: URL to use for the Collect operation
                    example: string
                  collectMethod:
                    type: string
                    title: Collect method
                    enum: [get, post, post_with_body, other]
                    example: get
                  collectRequestHeaders:
                    type: array
                    title: Collect request headers
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          title: Header name
                          example: string
                        value:
                          type: string
                          title: Header value
                          example: string
                      example:
                        name: string
                        value: string
                    example:
                    - name: string
                      value: string
                  collectRequestParams:
                    type: array
                    title: Collect request parameters
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          title: Parameter name
                          example: string
                        value:
                          type: string
                          title: Parameter value

                    # Request Configuration
                          example: string
                      example:
                        name: string
                        value: string
                    example:
                    - name: string
                      value: string
                  timeout:
                    type: integer
                    minimum: 0
                    maximum: 1800
                    title: Timeout (secs)
                    example: 123
                  useRoundRobinDns:
                    type: boolean
                    title: Use round robin DNS
                    example: true
                  disableTimeFilter:
                    type: boolean
                    title: Disable time filter
                    example: true
                  decodeUrl:
                    type: boolean
                    title: Decode URL
                    default: false
                    example: false
                  rejectUnauthorized:
                    type: boolean
                    title: Reject unauthorized certificates
                    example: true
                  captureHeaders:
                    type: boolean
                    title: Capture headers
                    default: false
                    example: false
                  safeHeaders:
                    type: array
                    title: Safe headers
                    items:
                      type: string

                    # Discovery Configuration
                      example: string
                    example:
                    - string
                  discovery:
                    type: object
                    title: Discovery Configuration
                    properties:
                      discoverType:
                        type: string
                        title: Discover type
                        enum: [http]
                        example: http
                      discoverMethod:
                        type: string
                        title: Discover method
                        enum: [get, post, post_with_body, other]
                        example: get
                      pagination:
                        $ref: '#/components/schemas/PaginationConfig'
                      enableDiscoverCode:
                        type: boolean
                        title: Enable discover code
                        default: false
                        example: false
                      itemList:
                        type: array
                        title: Item list
                        items:
                          type: string
                          example: string
                        example:
                        - string
                      discoverUrl:
                        type: string
                        title: Discover URL
                        example: string
                      discoverRequestHeaders:
                        type: array
                        title: Discover request headers
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              title: Header name
                              example: string
                            value:
                              type: string
                              title: Header value
                              example: string
                          example:
                            name: string
                            value: string
                        example:
                        - name: string
                          value: string
                      discoverRequestParams:
                        type: array
                        title: Discover request parameters
                        items:
                          type: object
                          example: {}
                        example:
                        - {}
                      discoverBody:
                        type: string
                        title: Discover body
                        example: string
                      formatResultCode:
                        type: string
                        title: Format result code
                        example: string
                      discoverDataField:
                        type: string
                        title: Discover data field

                    # Pagination Configuration  
                        example: string
                    example:
                      discoverType: http
                      discoverMethod: get
                      enableDiscoverCode: false
                      itemList:
                      - string
                      discoverUrl: string
                      discoverRequestHeaders:
                      - name: string
                        value: string
                      discoverRequestParams:
                      - {}
                      discoverBody: string
                      formatResultCode: string
                      discoverDataField: string
                  pagination:
                    $ref: '#/components/schemas/PaginationConfig'

                    # Retry Rules
                  retryRules:
                    type: object
                    title: Retry Rules Configuration
                    properties:
                      type:
                        type: string
                        title: Retry type
                        enum: [backoff, fixed]
                        default: backoff
                        example: backoff
                      interval:
                        type: integer
                        title: Interval (ms)
                        default: 1000
                        example: 1000
                      limit:
                        type: integer
                        title: Retry limit
                        default: 5
                        example: 5
                      multiplier:
                        type: number
                        title: Multiplier
                        default: 2
                        example: 2
                      maxIntervalMs:
                        type: integer
                        title: Max interval (ms)
                        default: 20000
                        example: 20000
                      codes:
                        type: array
                        title: HTTP status codes to retry
                        items:
                          type: integer
                          example: 123
                        default: &id010 [429, 503]
                        example: *id010
                      enableHeader:
                        type: boolean
                        title: Enable header
                        default: true
                        example: true
                      retryConnectTimeout:
                        type: boolean
                        title: Retry connect timeout
                        default: false
                        example: false
                      retryConnectReset:
                        type: boolean
                        title: Retry connect reset
                        default: false
                        example: false
                      retryHeaderName:
                        type: string
                        title: Retry header name
                        default: "retry-after"

                    # Internal Scheduling
                        example: "retry-after"
                    example:
                      type: backoff
                      interval: 1000
                      limit: 5
                      multiplier: 2
                      maxIntervalMs: 20000
                      codes: *id010
                      enableHeader: true
                      retryConnectTimeout: false
                      retryConnectReset: false
                      retryHeaderName: "retry-after"
                  __scheduling:
                    type: object
                    title: Internal scheduling
                    properties:
                      stateTracking:
                        type: object
                        title: State tracking

                        example: {}
                    example:
                      stateTracking: {}
                example:
                  authentication: none
                  username: string
                  password: string
                  credentialsSecret: string
                  token: string
                  tokenSecret: string
                  loginUrl: string
                  loginBody: string
                  authHeaderKey: string
                  authHeaderExpr: string
                  clientSecretParamName: string
                  authRequestParams:
                  - name: string
                    value: string
                  tokenRespAttribute: string
                  authRequestHeaders:
                  - name: string
                    value: string
                  collectUrl: string
                  collectMethod: get
                  collectRequestHeaders:
                  - name: string
                    value: string
                  collectRequestParams:
                  - name: string
                    value: string
                  timeout: 123
                  useRoundRobinDns: true
                  disableTimeFilter: true
                  decodeUrl: false
                  rejectUnauthorized: true
                  captureHeaders: false
                  safeHeaders:
                  - string
                  discovery:
                    discoverType: http
                    discoverMethod: get
                    enableDiscoverCode: false
                    itemList:
                    - string
                    discoverUrl: string
                    discoverRequestHeaders:
                    - name: string
                      value: string
                    discoverRequestParams:
                    - {}
                    discoverBody: string
                    formatResultCode: string
                    discoverDataField: string
                  retryRules:
                    type: backoff
                    interval: 1000
                    limit: 5
                    multiplier: 2
                    maxIntervalMs: 20000
                    codes: *id010
                    enableHeader: true
                    retryConnectTimeout: false
                    retryConnectReset: false
                    retryHeaderName: "retry-after"
                  __scheduling:
                    stateTracking: {}
            example:
              type: rest
              conf:
                authentication: none
                username: string
                password: string
                credentialsSecret: string
                token: string
                tokenSecret: string
                loginUrl: string
                loginBody: string
                authHeaderKey: string
                authHeaderExpr: string
                clientSecretParamName: string
                authRequestParams:
                - name: string
                  value: string
                tokenRespAttribute: string
                authRequestHeaders:
                - name: string
                  value: string
                collectUrl: string
                collectMethod: get
                collectRequestHeaders:
                - name: string
                  value: string
                collectRequestParams:
                - name: string
                  value: string
                timeout: 123
                useRoundRobinDns: true
                disableTimeFilter: true
                decodeUrl: false
                rejectUnauthorized: true
                captureHeaders: false
                safeHeaders:
                - string
                discovery:
                  discoverType: http
                  discoverMethod: get
                  enableDiscoverCode: false
                  itemList:
                  - string
                  discoverUrl: string
                  discoverRequestHeaders:
                  - name: string
                    value: string
                  discoverRequestParams:
                  - {}
                  discoverBody: string
                  formatResultCode: string
                  discoverDataField: string
                retryRules:
                  type: backoff
                  interval: 1000
                  limit: 5
                  multiplier: 2
                  maxIntervalMs: 20000
                  codes: *id010
                  enableHeader: true
                  retryConnectTimeout: false
                  retryConnectReset: false
                  retryHeaderName: "retry-after"
                __scheduling:
                  stateTracking: {}
        example:
          collector:
            type: rest
            conf:
              authentication: none
              username: string
              password: string
              credentialsSecret: string
              token: string
              tokenSecret: string
              loginUrl: string
              loginBody: string
              authHeaderKey: string
              authHeaderExpr: string
              clientSecretParamName: string
              authRequestParams:
              - name: string
                value: string
              tokenRespAttribute: string
              authRequestHeaders:
              - name: string
                value: string
              collectUrl: string
              collectMethod: get
              collectRequestHeaders:
              - name: string
                value: string
              collectRequestParams:
              - name: string
                value: string
              timeout: 123
              useRoundRobinDns: true
              disableTimeFilter: true
              decodeUrl: false
              rejectUnauthorized: true
              captureHeaders: false
              safeHeaders:
              - string
              discovery:
                discoverType: http
                discoverMethod: get
                enableDiscoverCode: false
                itemList:
                - string
                discoverUrl: string
                discoverRequestHeaders:
                - name: string
                  value: string
                discoverRequestParams:
                - {}
                discoverBody: string
                formatResultCode: string
                discoverDataField: string
              retryRules:
                type: backoff
                interval: 1000
                limit: 5
                multiplier: 2
                maxIntervalMs: 20000
                codes: *id010
                enableHeader: true
                retryConnectTimeout: false
                retryConnectReset: false
                retryHeaderName: "retry-after"
              __scheduling:
                stateTracking: {}
    InputCollectorS3:
      allOf:
      - $ref: '#/components/schemas/InputCollectorBase'
      - type: object
        properties:
          collector:
            type: object
            required: [type]
            properties:
              type:
                type: string
                enum: [s3]
                example: s3
              conf:
                type: object
                properties:
                  bucket:
                    type: string
                    title: S3 bucket
                    description: S3 Bucket from which to collect data
                    example: string
                  region:
                    type: string
                    title: Region
                    description: AWS region from which to retrieve data
                    example: string
                  path:
                    type: string
                    title: Path
                    description: Directory where data will be collected
                    example: string
                  awsAuthenticationMethod:
                    type: string
                    title: Authentication method
                    enum: [auto, manual, secret]
                    example: auto
                  awsApiKey:
                    type: string
                    title: Access key
                    example: string
                  awsSecretKey:
                    type: string
                    title: Secret key
                    example: string
                  awsSecret:
                    type: string
                    title: Secret key pair
                    example: string
                  recurse:
                    type: boolean
                    title: Recursive
                    example: true
                  extractors:
                    type: array
                    title: Path extractors
                    items:
                      type: object
                      example: {}
                    example:
                    - {}
                  maxBatchSize:
                    type: integer
                    title: Batch size limit
                    minimum: 1

                    example: 123
                example:
                  bucket: string
                  region: string
                  path: string
                  awsAuthenticationMethod: auto
                  awsApiKey: string
                  awsSecretKey: string
                  awsSecret: string
                  recurse: true
                  extractors:
                  - {}
                  maxBatchSize: 123
            example:
              type: s3
              conf:
                bucket: string
                region: string
                path: string
                awsAuthenticationMethod: auto
                awsApiKey: string
                awsSecretKey: string
                awsSecret: string
                recurse: true
                extractors:
                - {}
                maxBatchSize: 123
        example:
          collector:
            type: s3
            conf:
              bucket: string
              region: string
              path: string
              awsAuthenticationMethod: auto
              awsApiKey: string
              awsSecretKey: string
              awsSecret: string
              recurse: true
              extractors:
              - {}
              maxBatchSize: 123
    InputCollectorAzureBlob:
      allOf:
      - $ref: '#/components/schemas/InputCollectorBase'
      - type: object
        properties:
          collector:
            type: object
            required: [type]
            properties:
              type:
                type: string
                enum: [azureblob]
                example: azureblob
              conf:
                type: object
                properties:
                  containerName:
                    type: string
                    title: Container name
                    description: Azure container to collect from
                    example: string
                  storageAccountName:
                    type: string
                    title: Storage account name
                    example: string
                  connectionString:
                    type: string
                    title: Connection string
                    description: Azure storage account Connection String
                    example: string
                  authType:
                    type: string
                    title: Authentication method
                    enum: [manual, secret, clientSecret, clientCert]
                    example: manual
                  path:
                    type: string
                    title: Path
                    description: Directory where data will be collected
                    example: string
                  recurse:
                    type: boolean
                    title: Recursive
                    example: true
                  extractors:
                    type: array
                    title: Path extractors
                    items:
                      type: object
                      example: {}
                    example:
                    - {}
                  maxBatchSize:
                    type: integer
                    title: Batch size limit
                    minimum: 1

                    example: 123
                example:
                  containerName: string
                  storageAccountName: string
                  connectionString: string
                  authType: manual
                  path: string
                  recurse: true
                  extractors:
                  - {}
                  maxBatchSize: 123
            example:
              type: azureblob
              conf:
                containerName: string
                storageAccountName: string
                connectionString: string
                authType: manual
                path: string
                recurse: true
                extractors:
                - {}
                maxBatchSize: 123
        example:
          collector:
            type: azureblob
            conf:
              containerName: string
              storageAccountName: string
              connectionString: string
              authType: manual
              path: string
              recurse: true
              extractors:
              - {}
              maxBatchSize: 123
    InputCollectorCriblLake:
      allOf:
      - $ref: '#/components/schemas/InputCollectorBase'
      - type: object
        properties:
          collector:
            type: object
            required: [type]
            properties:
              type:
                type: string
                enum: [cribllake]
                example: cribllake
              conf:
                type: object
                properties:
                  dataset:
                    type: string
                    title: Lake dataset
                    description: Lake dataset to collect data from

                    example: string
                example:
                  dataset: string
            example:
              type: cribllake
              conf:
                dataset: string
        example:
          collector:
            type: cribllake
            conf:
              dataset: string
    InputCollectorDatabase:
      allOf:
      - $ref: '#/components/schemas/InputCollectorBase'
      - type: object
        properties:
          collector:
            type: object
            required: [type]
            properties:
              type:
                type: string
                enum: [database]
                example: database
              conf:
                type: object
                properties:
                  connectionId:
                    type: string
                    title: Connection
                    description: Select an existing Database Connection
                    example: string
                  query:
                    type: string
                    title: SQL Query
                    description: Query string for selecting data from the database
                    example: string
                  queryValidationEnabled:
                    type: boolean
                    title: Validate Query

                    example: true
                example:
                  connectionId: string
                  query: string
                  queryValidationEnabled: true
            example:
              type: database
              conf:
                connectionId: string
                query: string
                queryValidationEnabled: true
        example:
          collector:
            type: database
            conf:
              connectionId: string
              query: string
              queryValidationEnabled: true
    InputCollectorGCS:
      allOf:
      - $ref: '#/components/schemas/InputCollectorBase'
      - type: object
        properties:
          collector:
            type: object
            required: [type]
            properties:
              type:
                type: string
                enum: [gcs]
                example: gcs
              conf:
                type: object
                properties:
                  serviceAccountCredentials:
                    type: string
                    title: Service account credentials
                    example: string
                  bucket:
                    type: string
                    title: GCS bucket
                    description: GCS Bucket from which to collect data
                    example: string
                  path:
                    type: string
                    title: Path
                    description: Directory where data will be collected
                    example: string
                  authType:
                    type: string
                    title: Authentication method
                    enum: [manual, secret, clientSecret, clientCert]
                    example: manual
                  recurse:
                    type: boolean
                    title: Recursive
                    example: true
                  extractors:
                    type: array
                    title: Path extractors
                    items:
                      type: object
                      example: {}
                    example:
                    - {}
                  maxBatchSize:
                    type: integer
                    title: Batch size limit
                    minimum: 1

                    example: 123
                example:
                  serviceAccountCredentials: string
                  bucket: string
                  path: string
                  authType: manual
                  recurse: true
                  extractors:
                  - {}
                  maxBatchSize: 123
            example:
              type: gcs
              conf:
                serviceAccountCredentials: string
                bucket: string
                path: string
                authType: manual
                recurse: true
                extractors:
                - {}
                maxBatchSize: 123
        example:
          collector:
            type: gcs
            conf:
              serviceAccountCredentials: string
              bucket: string
              path: string
              authType: manual
              recurse: true
              extractors:
              - {}
              maxBatchSize: 123
    InputCollectorHealthCheck:
      allOf:
      - $ref: '#/components/schemas/InputCollectorBase'
      - type: object
        properties:
          collector:
            type: object
            required: [type]
            properties:
              type:
                type: string
                enum: [healthcheck]
                example: healthcheck
              conf:
                type: object
                properties:
                  collectUrl:
                    type: string
                    title: Collect URL
                    description: URL to use for the Collect operation
                    example: string
                  collectMethod:
                    type: string
                    title: Collect method
                    enum: [get, post, post_with_body, other]
                    example: get
                  authentication:
                    type: string
                    enum: [none, basic, basicSecret, token, tokenSecret, login, loginSecret, oauth, oauthSecret, google_oauth, google_oauthSecret, hmac]
                    title: Authentication
                    example: none
                  timeout:
                    type: integer
                    minimum: 0
                    maximum: 1800
                    title: Timeout (secs)
                    example: 123
                  rejectUnauthorized:
                    type: boolean
                    title: Reject unauthorized certificates
                    example: true
                  username:
                    type: string
                    title: Username
                    example: string
                  password:
                    type: string
                    title: Password
                    example: string
                  credentialsSecret:
                    type: string
                    title: Credentials secret

    # Supporting Schemas
                    example: string
                example:
                  collectUrl: string
                  collectMethod: get
                  authentication: none
                  timeout: 123
                  rejectUnauthorized: true
                  username: string
                  password: string
                  credentialsSecret: string
            example:
              type: healthcheck
              conf:
                collectUrl: string
                collectMethod: get
                authentication: none
                timeout: 123
                rejectUnauthorized: true
                username: string
                password: string
                credentialsSecret: string
        example:
          collector:
            type: healthcheck
            conf:
              collectUrl: string
              collectMethod: get
              authentication: none
              timeout: 123
              rejectUnauthorized: true
              username: string
              password: string
              credentialsSecret: string
    PaginationConfig:
      type: object
      title: Pagination Configuration
      properties:
        type:
          type: string
          title: Pagination type
          enum: [none, offset, cursor, page]
          default: none
          example: none
        offsetField:
          type: string
          title: Offset field
          example: string
        limitField:
          type: string
          title: Limit field
          example: string
        limit:
          type: integer
          title: Limit
          default: 100
          example: 100
        maxPages:
          type: integer
          title: Max pages
          default: 0
          example: 0
        zeroIndexed:
          type: boolean
          title: Zero indexed
          default: false
          example: false
        pageField:
          type: string
          title: Page field
          example: string
        sizeField:
          type: string
          title: Size field
          example: string
        size:
          type: integer
          title: Size
          default: 50
          example: 50
        attribute:
          type: array
          title: Attribute
          items:
            type: string
            example: string
          example:
          - string
        lastPageExpr:
          type: string
          title: Last page expression
          example: string
        offset:
          type: integer
          title: Offset
          example: 123
        totalRecordField:
          type: string
          title: Total record field

    # Main InputCollector that uses oneOf to discriminate between types
          example: string
      example:
        type: none
        offsetField: string
        limitField: string
        limit: 100
        maxPages: 0
        zeroIndexed: false
        pageField: string
        sizeField: string
        size: 50
        attribute:
        - string
        lastPageExpr: string
        offset: 123
        totalRecordField: string
    InputCollector:
      oneOf:
      - $ref: '#/components/schemas/InputCollectorSplunk'
      - $ref: '#/components/schemas/InputCollectorRest'
      - $ref: '#/components/schemas/InputCollectorS3'
      - $ref: '#/components/schemas/InputCollectorAzureBlob'
      - $ref: '#/components/schemas/InputCollectorCriblLake'
      - $ref: '#/components/schemas/InputCollectorDatabase'
      - $ref: '#/components/schemas/InputCollectorGCS'
      - $ref: '#/components/schemas/InputCollectorHealthCheck'

    KeyMetadataEntity:
      type: object
      required:
      - keyId
      - algorithm
      - kms
      - keyclass
      properties:
        keyId:
          type: string
          title: Key ID
          example: string
        description:
          type: string
          title: Description
          example: string
        algorithm:
          type: string
          title: Encryption algorithm
          default: aes-256-cbc
          enum:
          - aes-256-cbc
          - aes-256-gcm
          example: aes-256-cbc
        kms:
          type: string
          title: KMS for this key
          default: local
          enum:
          - local
          example: local
        keyclass:
          type: number
          title: Key class
          default: 0
          minimum: 0
          example: 0
        created:
          type: number
          title: Creation time
          example: 123.45
        expires:
          type: number
          title: Expiration time
          example: 123.45
        plainKey:
          type: string
          title: Plain text key
          example: string
        cipherKey:
          type: string
          title: Encrypted key
          example: string
        useIV:
          type: boolean
          title: Use initialization vector
          description: Seed encryption with a [nonce](https://en.wikipedia.org/wiki/Cryptographic_nonce) to make the key more random and unique. Must be enabled with the aes-256-gcm algorithm.
          default: false
          example: false
        ivSize:
          type: integer
          title: Initialization vector size
          enum:
          - 12
          - 13
          - 14
          - 15
          - 16
          default: 12
          description: Length of the initialization vector, in bytes
          example: 12
        group:
          type: string
          title: Group/Fleet
          description: Name of the Group/Fleet that created this key
          example: string
      example:
        keyId: string
        description: string
        algorithm: aes-256-cbc
        kms: local
        keyclass: 0
        created: 123.45
        expires: 123.45
        plainKey: string
        cipherKey: string
        useIV: false
        ivSize: 12
        group: string
    BulletinMessage:
      type: object
      additionalProperties: false
      required:
      - id
      - text
      properties:
        id:
          type: string
          title: Message ID
          example: string
        severity:
          type: string
          title: Severity
          enum:
          - info
          - warn
          - error
          - fatal
          example: info
        title:
          type: string
          title: Title
          example: string
        text:
          type: string
          title: Text
          example: string
        time:
          type: number
          title: Occurrence Time
          example: 123.45
        group:
          type: string
          title: Group
          example: string
        metadata:
          type: array
          items:
            type: object

            example: {}
          example:
          - {}
      example:
        id: string
        severity: info
        title: string
        text: string
        time: 123.45
        group: string
        metadata:
        - {}
    NotificationTarget:
      oneOf:
      - $ref: '#/components/schemas/WebhookTarget'
      - $ref: '#/components/schemas/PagerDutyTarget'
      - $ref: '#/components/schemas/SlackTarget'
      - $ref: '#/components/schemas/SnsTarget'
      - $ref: '#/components/schemas/SmtpTarget'

    Notification:
      type: object
      required:
      - id
      - condition
      properties:
        id:
          type: string
          title: "Notification ID"
          description: "Unique identifier for the notification"
          pattern: '^[a-zA-Z0-9_-]+$'
          maxLength: 512
          example: string
        disabled:
          type: boolean
          title: "Disabled"
          description: "Whether the notification is disabled"
          default: false
          example: false
        condition:
          type: string
          title: "Condition"
          description: "The condition that triggers this notification"
          example: string
        targets:
          type: array
          title: "Notification targets"
          description: "Targets to send any notifications to"
          items:
            type: string
            example: string
          default: &id011 []
          example: *id011
        targetConfigs:
          type: array
          title: "Target configuration"
          description: "Configuration for notification targets"
          items:
            $ref: '#/components/schemas/TargetConfig'
          example:
          - 
        conf:
          type: object
          title: "Condition-specific configs"
          description: "Configuration specific to the notification condition"
          properties:
            savedQueryId:
              type: string
              description: "ID of the saved query this notification is associated with"
              example: string
            message:
              type: string
              description: "Message template for the notification"
              example: string
            triggerType:
              type: string
              description: "Type of trigger (e.g., resultsCount)"
              example: string
            triggerComparator:
              type: string
              description: "Comparison operator (e.g., >, <, =)"
              example: string
            triggerCount:
              type: number
              description: "Threshold count for the trigger"
              example: 123.45
          required:
          - savedQueryId
          - message
          example:
            savedQueryId: string
            message: string
            triggerType: string
            triggerComparator: string
            triggerCount: 123.45
        metadata:
          type: array
          title: "Metadata"
          description: "Additional metadata for the notification"
          items:
            $ref: '#/components/schemas/MetadataItem'
          x-speakeasy-terraform-ignore: true
          example:
          - 
        group:
          type: string
          title: "Group"
          description: "Group identifier for the notification"
          default: "default_search"

    # Notification Target Types
          example: "default_search"
      example:
        id: string
        disabled: false
        condition: string
        targets: *id011
        targetConfigs:
        - 
        conf:
          savedQueryId: string
          message: string
          triggerType: string
          triggerComparator: string
          triggerCount: 123.45
        metadata:
        - 
        group: "default_search"
    WebhookTarget:
      type: object
      required:
      - id
      - type
      - url
      - format
      - method
      properties:
        id:
          type: string
          title: "Target ID"
          description: "Unique ID for this notification target"
          pattern: '^[a-zA-Z0-9_-]+$'
          example: string
        type:
          type: string
          enum: [webhook]
          example: webhook
        systemFields:
          type: array
          title: "System fields"
          description: "Fields to automatically add to events, such as cribl_pipe. Supports wildcards."
          default: &id012 ["cribl_host"]
          items:
            type: string
            example: string
          example: *id012
        url:
          type: string
          title: "Webhook URL"
          description: "URL to send the webhook to"
          pattern: '^https?://.+'
          example: string
        format:
          type: string
          title: "Format"
          description: "Format of the webhook payload"
          enum: [ndjson, json_array, custom]
          example: ndjson
        method:
          type: string
          title: "HTTP Method"
          description: "HTTP method to use for the webhook"
          enum: [POST, PATCH, PUT]
          example: POST
        authType:
          type: string
          title: "Authentication Type"
          description: "Authentication method for the webhook"
          enum: [none, token, basic]
          default: none
          example: none
        token:
          type: string
          title: "Token"
          description: "Authentication token"
          example: string
        username:
          type: string
          title: "Username"
          description: "Basic authentication username"
          example: string
        password:
          type: string
          title: "Password"
          description: "Basic authentication password"

          example: string
      example:
        id: string
        type: webhook
        systemFields: *id012
        url: string
        format: ndjson
        method: POST
        authType: none
        token: string
        username: string
        password: string
    PagerDutyTarget:
      type: object
      required:
      - id
      - type
      - routingKey
      properties:
        id:
          type: string
          title: "Target ID"
          description: "Unique ID for this notification target"
          pattern: '^[a-zA-Z0-9_-]+$'
          example: string
        type:
          type: string
          enum: [pager_duty]
          example: pager_duty
        systemFields:
          type: array
          title: "System fields"
          description: "Fields to automatically add to events, such as cribl_pipe. Supports wildcards."
          default: &id013 ["cribl_host"]
          items:
            type: string
            example: string
          example: *id013
        routingKey:
          type: string
          title: "Routing key"
          description: "32-character integration key for an integration on a service or global ruleset"
          example: string
        group:
          type: string
          title: "Group"
          description: "Optional, default group value"
          example: string
        class:
          type: string
          title: "Class"
          description: "Optional, default class value"
          example: string
        component:
          type: string
          title: "Component"
          description: "Optional, default component value"
          default: "logstream"
          example: "logstream"
        severity:
          type: string
          title: "Severity"
          description: "Default value for message severity. Defaults to info. The __severity value, if set, will overwrite this."
          default: "info"
          enum: [info, warning, error, critical]
          enumNames: ["Info", "Warning", "Error", "Critical"]
          example: "info"
      example:
        id: string
        type: pager_duty
        systemFields: *id013
        routingKey: string
        group: string
        class: string
        component: "logstream"
        severity: "info"

    SlackTarget:
      type: object
      required:
      - id
      - type
      - url
      properties:
        id:
          type: string
          title: "Target ID"
          description: "Unique ID for this notification target"
          pattern: '^[a-zA-Z0-9_-]+$'
          example: string
        type:
          type: string
          enum: [slack]
          example: slack
        systemFields:
          type: array
          title: "System fields"
          description: "Fields to automatically add to events, such as cribl_pipe. Supports wildcards."
          default: &id014 ["cribl_host"]
          items:
            type: string
            example: string
          example: *id014
        url:
          type: string
          title: "Webhook URL"
          description: "Slack's Incoming Webhook URL"
          pattern: '^https?://[a-zA-Z0-9-.]+'

          example: string
      example:
        id: string
        type: slack
        systemFields: *id014
        url: string
    SnsTarget:
      type: object
      required:
      - id
      - type
      - region
      properties:
        id:
          type: string
          title: "Target ID"
          description: "Unique ID for this notification target"
          pattern: '^[a-zA-Z0-9_-]+$'
          example: string
        type:
          type: string
          enum: [sns]
          example: sns
        systemFields:
          type: array
          title: "System fields"
          description: "Fields to automatically add to events, such as cribl_pipe. Supports wildcards."
          default: &id015 ["cribl_host"]
          items:
            type: string
            example: string
          example: *id015
        awsAuthenticationMethod:
          type: string
          title: "Authentication method"
          description: "AWS authentication method"
          enum: [auto, manual, secret]
          enumNames: ["AssumeRole", "AWS keys", "Secret"]
          example: auto
        assumeRoleArn:
          type: string
          title: "Assume Role ARN"
          description: "ARN of the role to assume"
          example: string
        assumeRoleExternalId:
          type: string
          title: "External ID"
          description: "External ID for role assumption"
          example: string
        awsApiKey:
          type: string
          title: "Access Key"
          description: "AWS access key"
          example: string
        awsSecretKey:
          type: string
          title: "Secret Key"
          description: "AWS secret key"
          example: string
        region:
          type: string
          title: "Region"
          description: "AWS region"
          example: string
        endpoint:
          type: string
          title: "Endpoint"
          description: "SNS endpoint URL"
          example: string
        allowlist:
          type: array
          title: "Phone number allowlist"
          description: "Wildcard list of allowed phone numbers. This is not enforced if the notification is sent to topic."
          default: &id016 []
          items:
            type: string
            example: string
          example: *id016
        destinationType:
          type: string
          title: "Destination type"
          description: "The type of destination to send notifications to"
          enum: [phoneNumber, topic]
          enumNames: ["Phone number", "Topic ARN"]
          default: "topic"
          example: "topic"
        phoneNumber:
          type: string
          title: "Default Phone Number"
          description: "The default phone number to send the notification to. This value can be overridden by the notification event __phoneNumber field."
          example: string
        topicArn:
          type: string
          title: "Default topic ARN"
          description: "The default ARN of the SNS topic to send notifications to"
          example: string
        topicType:
          type: string
          title: "Topic type"
          description: "Type of the topic selected in AWS SNS"
          default: "fifo"
          enum: [standard, fifo]
          enumNames: ["Standard", "FIFO"]
          example: "fifo"
        messageGroupId:
          type: string
          title: "Message Group ID"
          description: "Message group ID for FIFO topics"

          example: string
      example:
        id: string
        type: sns
        systemFields: *id015
        awsAuthenticationMethod: auto
        assumeRoleArn: string
        assumeRoleExternalId: string
        awsApiKey: string
        awsSecretKey: string
        region: string
        endpoint: string
        allowlist: *id016
        destinationType: "topic"
        phoneNumber: string
        topicArn: string
        topicType: "fifo"
        messageGroupId: string
    SmtpTarget:
      type: object
      required:
      - id
      - type
      - host
      - port
      - from
      properties:
        id:
          type: string
          title: "Target ID"
          description: "Unique ID for this notification target"
          pattern: '^[a-zA-Z0-9_-]+$'
          example: string
        type:
          type: string
          enum: [smtp]
          example: smtp
        systemFields:
          type: array
          title: "System fields"
          description: "Fields to automatically add to events, such as cribl_pipe. Supports wildcards."
          default: &id017 ["cribl_host"]
          items:
            type: string
            example: string
          example: *id017
        host:
          type: string
          title: "SMTP Host"
          description: "SMTP server hostname"
          example: string
        port:
          type: integer
          title: "SMTP Port"
          description: "SMTP server port"
          minimum: 1
          maximum: 65535
          example: 123
        from:
          type: string
          title: "From Address"
          description: "Email address to send from"
          format: email
          example: user@example.com
        username:
          type: string
          title: "Username"
          description: "SMTP authentication username"
          example: string
        password:
          type: string
          title: "Password"
          description: "SMTP authentication password"
          example: string
        encryptionOption:
          type: string
          title: "Encryption"
          description: "Encryption method for SMTP"
          enum: [NONE, STARTTLS, SSL]
          enumNames: ["None", "STARTTLS", "SSL"]
          default: "NONE"
          example: "NONE"
        tls:
          type: object
          title: "TLS Configuration"
          description: "TLS configuration options"
          properties:
            rejectUnauthorized:
              type: boolean
              title: "Reject Unauthorized"
              description: "Whether to reject unauthorized certificates"
              default: true
              example: true
            minVersion:
              type: string
              title: "Minimum TLS Version"
              description: "Minimum TLS version to accept"
              enum: [TLSv1, TLSv1.1, TLSv1.2, TLSv1.3]
              default: "TLSv1.2"
              example: "TLSv1.2"
            maxVersion:
              type: string
              title: "Maximum TLS Version"
              description: "Maximum TLS version to accept"
              enum: [TLSv1, TLSv1.1, TLSv1.2, TLSv1.3]
              default: "TLSv1.3"

              example: "TLSv1.3"
          example:
            rejectUnauthorized: true
            minVersion: "TLSv1.2"
            maxVersion: "TLSv1.3"
      example:
        id: string
        type: smtp
        systemFields: *id017
        host: string
        port: 123
        from: user@example.com
        username: string
        password: string
        encryptionOption: "NONE"
        tls:
          rejectUnauthorized: true
          minVersion: "TLSv1.2"
          maxVersion: "TLSv1.3"
    TargetConfig:
      type: object
      properties:
        id:
          type: string
          description: "ID of the notification target"
          example: string
        conf:
          $ref: '#/components/schemas/TargetConfigConf'
      required: ["id"]
      additionalProperties: false

      example:
        id: string
    TargetConfigConf:
      type: object
      properties:
        includeResults:
          type: boolean
          description: Whether to include search results in the notification
          default: false
          example: false
        attachmentType:
          type: string
          description: Type of attachment for the notification
          enum: ["inline", "attachment"]
          default: "inline"
          example: "inline"
      required: []
      additionalProperties: false

    # Supporting schemas
      example:
        includeResults: false
        attachmentType: "inline"
    NotificationTargetConfig:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          title: "Notification target ID"
          description: "ID of the notification target"
          pattern: '^[a-zA-Z0-9_-]+$'
          example: string
        conf:
          $ref: '#/components/schemas/SmtpTargetConfig'

      example:
        id: string
    SmtpTargetConfig:
      type: object
      title: "Notification config for SMTP target"
      properties:
        subject:
          type: string
          title: "Subject"
          description: "Email subject"
          example: string
        body:
          type: string
          title: "Message"
          description: "Email body"
          example: string
        emailRecipient:
          $ref: '#/components/schemas/EmailRecipient'

      example:
        subject: string
        body: string
    EmailRecipient:
      type: object
      required:
      - to
      properties:
        to:
          type: string
          title: "To"
          description: "Recipients' email addresses"
          format: email
          example: user@example.com
        cc:
          type: string
          title: "Cc"
          description: "Cc: Recipients' email addresses"
          format: email
          example: user@example.com
        bcc:
          type: string
          title: "Bcc"
          description: "Bcc: Recipients' email addresses"
          format: email

          example: user@example.com
      example:
        to: user@example.com
        cc: user@example.com
        bcc: user@example.com
    MetadataItem:
      type: object
      required:
      - name
      - value
      properties:
        name:
          type: string
          title: "Name"
          description: "Metadata field name"
          example: string
        value:
          type: string
          title: "Value"
          description: "Metadata field value"

          example: string
      example:
        name: string
        value: string
    PolicyRule:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        description:
          type: string
          example: string
        id:
          type: string
          example: string
        template:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        title:
          type: string
          example: string
      required:
      - id
      - template
      example:
        args:
        - string
        description: string
        id: string
        template:
        - string
        title: string
    Role:
      type: object
      properties:
        description:
          type: string
          example: string
        id:
          type: string
          example: string
        policy:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        tags:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        title:
          type: string
          example: string
      required:
      - id
      - policy
      example:
        description: string
        id: string
        policy:
        - string
        tags:
        - string
        title: string
    ScriptLibEntry:
      type: object
      additionalProperties: true
      required:
      - id
      - command
      properties:
        id:
          type: string
          title: ID
          example: string
        command:
          type: string
          title: Command
          description: Command to execute for this script
          example: string
        description:
          type: string
          title: Description
          example: string
        args:
          type: array
          items:
            type: string
            example: string
          title: Arguments
          description: Arguments to pass when executing this script
          example:
          - string
        env:
          type: object
          title: Env variables
          properties: {}
          additionalProperties:
            type: string
            example: string
          description: Extra environment variables to set when executing script
          example:
            additionalProp1: string
      example:
        id: string
        command: string
        description: string
        args:
        - string
        env:
          additionalProp1: string
        additionalProp1: string
    Team:
      type: object
      properties:
        description:
          type: string
          example: string
        id:
          type: string
          example: string
        name:
          type: string
          example: string
        roles:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        ssoGroupIds:
          type: array
          items:
            type: string
            example: string
          example:
          - string
      required:
      - description
      - id
      - name
      - roles
      example:
        description: string
        id: string
        name: string
        roles:
        - string
        ssoGroupIds:
        - string
    RbacResource:
      type: string
      enum:
      - groups
      - datasets
      - dataset-providers
      - projects
      - dashboards
      - macros
      example: groups
    ResourcePolicy:
      type: object
      properties:
        gid:
          type: string
          example: string
        id:
          type: string
          example: string
        policy:
          type: string
          example: string
        type:
          $ref: "#/components/schemas/RbacResource"
      required:
      - gid
      - policy
      - type
      example:
        gid: string
        id: string
        policy: string
    MembershipSchema:
      type: object
      properties:
        add:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        rm:
          type: array
          items:
            type: string
            example: string
          example:
          - string
      example:
        add:
        - string
        rm:
        - string
    User:
      type: object
      properties:
        currentPassword:
          type: string
          example: string
        disabled:
          type: boolean
          example: true
        email:
          type: string
          example: string
        first:
          type: string
          example: string
        id:
          type: string
          example: string
        last:
          type: string
          example: string
        password:
          type: string
          example: string
        roles:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        teams:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        username:
          type: string
          example: string
      required:
      - disabled
      - email
      - first
      - id
      - last
      - username
      example:
        currentPassword: string
        disabled: true
        email: string
        first: string
        id: string
        last: string
        password: string
        roles:
        - string
        teams:
        - string
        username: string
    UserProfile:
      type: object
      properties:
        disabled:
          type: boolean
          example: true
        email:
          type: string
          example: string
        first:
          type: string
          example: string
        id:
          type: string
          example: string
        last:
          type: string
          example: string
        password:
          type: string
          example: string
        roles:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        username:
          type: string
          example: string
      required:
      - disabled
      - email
      - first
      - id
      - last
      - username
      example:
        disabled: true
        email: string
        first: string
        id: string
        last: string
        password: string
        roles:
        - string
        username: string
    UserInfo:
      type: object
      properties:
        currentPassword:
          type: string
          example: string
        disabled:
          type: boolean
          example: true
        email:
          type: string
          example: string
        first:
          type: string
          example: string
        id:
          type: string
          example: string
        last:
          type: string
          example: string
        password:
          type: string
          example: string
        roles:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        username:
          type: string
          example: string
      required:
      - disabled
      - email
      - first
      - id
      - last
      - username
      example:
        currentPassword: string
        disabled: true
        email: string
        first: string
        id: string
        last: string
        password: string
        roles:
        - string
        username: string
    CacheConnection:
      type: object
      properties:
        acceleratedFields:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        cacheRef:
          type: string
          example: string
        createdAt:
          type: number
          example: 123.45
        migrationQueryId:
          type: string
          example: string
        retentionInDays:
          type: number
          example: 123.45
      required:
      - cacheRef
      - createdAt
      - retentionInDays
      example:
        acceleratedFields:
        - string
        cacheRef: string
        createdAt: 123.45
        migrationQueryId: string
        retentionInDays: 123.45
    DatasetMetadataRunInfo:
      type: object
      properties:
        earliestScannedTime:
          type: number
          example: 123.45
        finishedAt:
          type: number
          example: 123.45
        latestScannedTime:
          type: number
          example: 123.45
        objectCount:
          type: number
          example: 123.45
      example:
        earliestScannedTime: 123.45
        finishedAt: 123.45
        latestScannedTime: 123.45
        objectCount: 123.45
    DatasetMetadata:
      type: object
      properties:
        earliest:
          type: string
          example: string
        enableAcceleration:
          type: boolean
          example: true
        fieldList:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        latestRunInfo:
          $ref: "#/components/schemas/DatasetMetadataRunInfo"
        scanMode:
          type: string
          enum:
          - detailed
          - quick
          example: detailed
      required:
      - earliest
      - enableAcceleration
      - fieldList
      - scanMode
      example:
        earliest: string
        enableAcceleration: true
        fieldList:
        - string
        scanMode: detailed
    LakeDatasetSearchConfig:
      type: object
      properties:
        datatypes:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        metadata:
          $ref: "#/components/schemas/DatasetMetadata"
      example:
        datatypes:
        - string
    CriblLakeDataset:
      type: object
      properties:
        acceleratedFields:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        bucketName:
          type: string
          default: "lake-${workspaceName}-${organizationId}"
          example: "lake-${workspaceName}-${organizationId}"
        description:
          type: string
          example: string
        format:
          type: string
          enum:
          - json
          - ddss
          - parquet
          example: json
        id:
          type: string
          example: string
        retentionPeriodInDays:
          type: number
          example: 123.45
        searchConfig:
          $ref: "#/components/schemas/LakeDatasetSearchConfig"
      required:
      - bucketName
      - id
      example:
        acceleratedFields:
        - string
        bucketName: "lake-${workspaceName}-${organizationId}"
        description: string
        format: json
        id: string
        retentionPeriodInDays: 123.45
    DashboardCategory:
      type: object
      properties:
        description:
          type: string
          example: string
        id:
          type: string
          example: string
        isPack:
          type: boolean
          example: true
        name:
          type: string
          example: string
      required:
      - id
      - name
      example:
        description: string
        id: string
        isPack: true
        name: string
    LimitRuleDefinitions:
      example: string
    UsageGroup:
      type: object
      properties:
        coordinatorHeapMemoryLimit:
          type: number
          example: 123.45
        description:
          type: string
          example: string
        enabled:
          type: boolean
          example: true
        id:
          type: string
          example: string
        rules:
          $ref: "#/components/schemas/LimitRuleDefinitions"
        usersCount:
          type: number
          example: 123.45
      required:
      - id
      - rules
      example:
        coordinatorHeapMemoryLimit: 123.45
        description: string
        enabled: true
        id: string
        usersCount: 123.45
    DatasetOrigin:
      type: string
      enum:
      - leader_local
      - remote
      - worker_local
      example: leader_local
    OriginConfig:
      type: object
      properties:
        filterExpression:
          type: string
          example: string
        origin:
          $ref: "#/components/schemas/DatasetOrigin"
      required:
      - origin
      example:
        filterExpression: string
    DatasetProviderType:
      type: object
      properties:
        description:
          type: string
          example: string
        id:
          type: string
          enum:
          - prometheus
          - cribl_lake
          - s3
          - gcs
          - azure_blob
          - cribl_leader
          - cribl_edge
          - amazon_security_lake
          - api_http
          - api_aws
          - api_azure
          - api_gcp
          - api_google_workspace
          - api_msgraph
          - api_okta
          - api_tailscale
          - api_zoom
          - api_opensearch
          - api_elasticsearch
          - api_azure_data_explorer
          - snowflake
          - clickhouse
          - cribl_meta
          example: prometheus
        locality:
          $ref: "#/components/schemas/OriginConfig"
      required:
      - id
      example:
        description: string
        id: prometheus
    GenericDataset:
      type: object
      required:
      - id
      - provider
      - type
      properties:
        id:
          type: string
          description: Unique identifier for the dataset
          pattern: '^[a-zA-Z0-9_-]+$'
          maxLength: 512
          example: string
        description:
          type: string
          description: Description of the dataset
          example: string
        provider:
          type: string
          description: Dataset provider ID
          x-speakeasy-name-override: provider_id
          example: string
        type:
          type: string
          description: Dataset provider type, set automatically from the dataset provider
          example: string
        metadata:
          $ref: '#/components/schemas/DatasetMetadata'
      oneOf:
      - $ref: '#/components/schemas/ApiHttpDataset'
      - $ref: '#/components/schemas/ApiAwsDataset'
      - $ref: '#/components/schemas/ApiAzureDataset'
      - $ref: '#/components/schemas/ApiGcpDataset'
      - $ref: '#/components/schemas/ApiGoogleWorkspaceDataset'
      - $ref: '#/components/schemas/ApiMsGraphDataset'
      - $ref: '#/components/schemas/ApiOktaDataset'
      - $ref: '#/components/schemas/ApiTailscaleDataset'
      - $ref: '#/components/schemas/ApiZoomDataset'
      - $ref: '#/components/schemas/ApiAzureDataExplorerDataset'
      - $ref: '#/components/schemas/SnowflakeDataset'
      - $ref: '#/components/schemas/ClickHouseDataset'
      - $ref: '#/components/schemas/PrometheusDataset'
      - $ref: '#/components/schemas/ApiOpenSearchDataset'
      - $ref: '#/components/schemas/ApiElasticSearchDataset'
      - $ref: '#/components/schemas/S3Dataset'
      - $ref: '#/components/schemas/CriblLeaderDataset'
      - $ref: '#/components/schemas/MetaDataset'
      - $ref: '#/components/schemas/EdgeDataset'
      - $ref: '#/components/schemas/AzureBlobDataset'
      - $ref: '#/components/schemas/GcsDataset'
      - $ref: '#/components/schemas/AwsSecurityLakeDataset'

      example:
        id: string
        description: string
        provider: string
        type: string
    GenericProvider:
      type: object
      required:
      - id
      - type
      properties:
        id:
          type: string
          description: Unique identifier for the provider
          example: string
        type:
          type: string
          description: Type of the provider
          example: string
        description:
          type: string
          description: Description of the provider
          example: string
      oneOf:
      - $ref: '#/components/schemas/ApiHttpProvider'
      - $ref: '#/components/schemas/ApiAwsProvider'
      - $ref: '#/components/schemas/ApiAzureProvider'
      - $ref: '#/components/schemas/ApiGcpProvider'
      - $ref: '#/components/schemas/ApiGoogleWorkspaceProvider'
      - $ref: '#/components/schemas/ApiMsGraphProvider'
      - $ref: '#/components/schemas/ApiOktaProvider'
      - $ref: '#/components/schemas/ApiTailscaleProvider'
      - $ref: '#/components/schemas/ApiZoomProvider'
      - $ref: '#/components/schemas/ApiAzureDataExplorerProvider'
      - $ref: '#/components/schemas/SnowflakeProvider'
      - $ref: '#/components/schemas/ClickHouseProvider'
      - $ref: '#/components/schemas/PrometheusProvider'
      - $ref: '#/components/schemas/ApiOpenSearchProvider'
      - $ref: '#/components/schemas/ApiElasticSearchProvider'
      - $ref: '#/components/schemas/AwsSecurityLakeProvider'
      - $ref: '#/components/schemas/S3Provider'
      - $ref: '#/components/schemas/CriblLeaderProvider'
      - $ref: '#/components/schemas/MetaProvider'
      - $ref: '#/components/schemas/EdgeProvider'
      - $ref: '#/components/schemas/AzureBlobProvider'
      - $ref: '#/components/schemas/GcsProvider'
    # Base schemas
      example:
        id: string
        type: string
        description: string
    Dataset:
      type: object
      required:
      - id
      - provider
      - type
      properties:
        id:
          type: string
          description: Unique identifier for the dataset
          pattern: '^[a-zA-Z0-9_-]+$'
          maxLength: 512
          example: string
        description:
          type: string
          description: Description of the dataset
          example: string
        provider:
          type: string
          description: Dataset provider ID
          example: string
        type:
          type: string
          description: Dataset provider type, set automatically from the dataset provider
          example: string
        metadata:
          $ref: '#/components/schemas/DatasetMetadata'

      example:
        id: string
        description: string
        provider: string
        type: string
    Provider:
      type: object
      required:
      - id
      - type
      properties:
        id:
          type: string
          description: Unique identifier for the provider
          example: string
        type:
          type: string
          description: Type of the provider
          example: string
        description:
          type: string
          description: Description of the provider

          example: string
      example:
        id: string
        type: string
        description: string
    ApiHttpDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - enabledEndpoints
        properties:
          type:
            type: string
            enum: [api_http]
            example: api_http
          enabledEndpoints:
            type: array
            title: Enabled endpoints
            description: A list of the endpoints that are enabled in this dataset
            items:
              type: string
              title: Endpoint

              example: string
            example:
            - string
        example:
          type: api_http
          enabledEndpoints:
          - string
    ApiHttpProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - availableEndpoints
        properties:
          type:
            type: string
            enum: [api_http]
            example: api_http
          availableEndpoints:
            type: array
            title: Available endpoints
            description: A list of the available endpoints for this provider
            items:
              $ref: '#/components/schemas/HttpEndpoint'
            example:
            - 
          authenticationMethod:
            type: string
            title: Authentication method
            description: The authentication method for API calls
            default: none
            enum: [none, basic, login, oauth]
            enumNames: [None, Basic, Login, OAuth]
            example: none
        example:
          type: api_http
          availableEndpoints:
          - 
          authenticationMethod: none

    HttpEndpoint:
      type: object
      required:
      - name
      - url
      - method
      properties:
        name:
          type: string
          title: Name
          example: string
        dataField:
          type: string
          title: Data field
          description: Within the response JSON, name of the field or array element to pull results from
          example: string
        method:
          type: string
          title: Method
          description: Method for the endpoint
          enum: [GET, POST]
          default: GET
          example: GET
        url:
          type: string
          title: URL
          description: The URL for this endpoint
          example: string
        headers:
          type: array
          title: Headers
          description: Optional headers for the endpoint
          items:
            $ref: '#/components/schemas/HttpHeader'

          example:
          - 
      example:
        name: string
        dataField: string
        method: GET
        url: string
        headers:
        - 
    HttpHeader:
      type: object
      required:
      - name
      - value
      properties:
        name:
          type: string
          title: Name
          description: Header name
          example: string
        value:
          type: string
          title: Value
          description: Header value

    # AWS API Dataset Schemas
          example: string
      example:
        name: string
        value: string
    ApiAwsDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - enabledEndpoints
        - regions
        properties:
          type:
            type: string
            enum: [api_aws]
            example: api_aws
          enabledEndpoints:
            type: array
            minLength: 1
            title: Enabled endpoints
            description: A list of the endpoints that are enabled in this dataset
            uniqueItems: true
            items:
              type: string
              title: Endpoint
              description: AWS endpoint
              example: string
            example:
            - string
          regions:
            type: array
            minLength: 1
            title: AWS regions
            description: A list of the AWS regions to query for this endpoint
            items:
              type: string
              title: AWS region

              example: string
            example:
            - string
        example:
          type: api_aws
          enabledEndpoints:
          - string
          regions:
          - string
    ApiAwsProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - accountConfigs
        properties:
          type:
            type: string
            enum: [api_aws]
            example: api_aws
          accountConfigs:
            type: array
            minLength: 1
            title: Account configurations
            description: A list of account configurations
            items:
              $ref: '#/components/schemas/AwsAccountConfig'

            example:
            - 
        example:
          type: api_aws
          accountConfigs:
          - 
    AwsAccountConfig:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          title: Name
          description: Account name
          example: string
        assumeRoleArn:
          type: string
          title: Assume Role ARN
          description: ARN of the role to assume
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID for role assumption
          example: string
        awsApiKey:
          type: string
          title: Access Key
          description: AWS access key
          example: string
        awsSecretKey:
          type: string
          title: Secret Key
          description: AWS secret key

    # Azure API Dataset Schemas
          example: string
      example:
        name: string
        assumeRoleArn: string
        assumeRoleExternalId: string
        awsApiKey: string
        awsSecretKey: string
    ApiAzureDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - enabledEndpoints
        - subscriptionIds
        properties:
          type:
            type: string
            enum: [api_azure]
            example: api_azure
          enabledEndpoints:
            type: array
            minLength: 1
            title: Enabled endpoints
            description: A list of the endpoints that are enabled in this dataset
            uniqueItems: true
            items:
              type: string
              title: Endpoint
              description: Azure endpoint
              example: string
            example:
            - string
          subscriptionIds:
            type: array
            minLength: 1
            title: Subscription IDs
            description: A list of the subscription ids within the tenant to query with this dataset
            uniqueItems: true
            items:
              type: string
              title: Subscription ID
              description: Subscription Id within the tenant

              example: string
            example:
            - string
        example:
          type: api_azure
          enabledEndpoints:
          - string
          subscriptionIds:
          - string
    ApiAzureProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - accountConfigs
        properties:
          type:
            type: string
            enum: [api_azure]
            example: api_azure
          accountConfigs:
            type: array
            minLength: 1
            title: Account configurations
            description: A list of account configurations
            items:
              $ref: '#/components/schemas/AzureAccountConfig'

            example:
            - 
        example:
          type: api_azure
          accountConfigs:
          - 
    AzureAccountConfig:
      type: object
      required:
      - name
      - clientId
      - clientSecret
      - tenantId
      properties:
        name:
          type: string
          title: Name
          description: Account name
          example: string
        clientId:
          type: string
          title: Client ID
          description: The clientId of the service principal
          minLength: 1
          example: string
        clientSecret:
          type: string
          title: Client Secret
          description: The client secret of the service principal
          minLength: 1
          example: string
        tenantId:
          type: string
          title: Tenant ID
          description: The ID of your Azure tenant
          minLength: 1

    # GCP API Dataset Schemas
          example: string
      example:
        name: string
        clientId: string
        clientSecret: string
        tenantId: string
    ApiGcpDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - endpointConfigs
        properties:
          type:
            type: string
            enum: [api_gcp]
            example: api_gcp
          endpointConfigs:
            type: array
            minLength: 1
            title: Enabled endpoints
            description: A list of the endpoint configurations that are enabled in this dataset
            uniqueItems: true
            items:
              $ref: '#/components/schemas/GcpEndpointConfig'

            example:
            - 
        example:
          type: api_gcp
          endpointConfigs:
          - 
    GcpEndpointConfig:
      type: object
      required:
      - endpointName
      properties:
        endpointName:
          type: string
          title: Endpoint
          description: GCP endpoint
          example: string
        region:
          type: string
          title: Region
          description: GCP region (required for some endpoints)

          example: string
      example:
        endpointName: string
        region: string
    ApiGcpProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - accountConfigs
        properties:
          type:
            type: string
            enum: [api_gcp]
            example: api_gcp
          accountConfigs:
            type: array
            minLength: 1
            title: Account configurations
            description: A list of account configurations
            items:
              $ref: '#/components/schemas/GcpAccountConfig'

            example:
            - 
        example:
          type: api_gcp
          accountConfigs:
          - 
    GcpAccountConfig:
      type: object
      required:
      - name
      - serviceAccountCredentials
      properties:
        name:
          type: string
          title: Name
          description: Account name
          example: string
        serviceAccountCredentials:
          type: string
          title: Service Account Credentials
          description: JSON blob downloaded from the Google Cloud Console, containing creds for a service account

    # Google Workspace API Dataset Schemas
          example: string
      example:
        name: string
        serviceAccountCredentials: string
    ApiGoogleWorkspaceDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - enabledEndpoints
        properties:
          type:
            type: string
            enum: [api_google_workspace]
            example: api_google_workspace
          enabledEndpoints:
            type: array
            minLength: 1
            title: Enabled endpoints
            description: A list of the endpoints that are enabled in this dataset
            uniqueItems: true
            items:
              type: string
              title: Endpoint
              description: Reports API endpoint

              example: string
            example:
            - string
        example:
          type: api_google_workspace
          enabledEndpoints:
          - string
    ApiGoogleWorkspaceProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - accountConfigs
        properties:
          type:
            type: string
            enum: [api_google_workspace]
            example: api_google_workspace
          accountConfigs:
            type: array
            minLength: 1
            title: Account configurations
            description: A list of account configurations
            items:
              $ref: '#/components/schemas/GoogleWorkspaceAccountConfig'

            example:
            - 
        example:
          type: api_google_workspace
          accountConfigs:
          - 
    GoogleWorkspaceAccountConfig:
      type: object
      required:
      - name
      - subject
      - serviceAccountCredentials
      properties:
        name:
          type: string
          title: Account name
          example: string
        subject:
          type: string
          title: Impersonated account's email address
          description: Email matching Google service account of the authorized principal whose role this integration is assuming
          example: string
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of Google Cloud service account credentials (JSON keys) file
          minLength: 1

    # Microsoft Graph API Dataset Schemas
          example: string
      example:
        name: string
        subject: string
        serviceAccountCredentials: string
    ApiMsGraphDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - enabledEndpoints
        properties:
          type:
            type: string
            enum: [api_msgraph]
            example: api_msgraph
          enabledEndpoints:
            type: array
            minLength: 1
            title: Enabled endpoints
            description: A list of the endpoints that are enabled in this dataset
            uniqueItems: true
            items:
              type: string
              title: Endpoint
              description: Microsoft Graph endpoint

              example: string
            example:
            - string
        example:
          type: api_msgraph
          enabledEndpoints:
          - string
    ApiMsGraphProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - accountConfigs
        properties:
          type:
            type: string
            enum: [api_msgraph]
            example: api_msgraph
          accountConfigs:
            type: array
            minLength: 1
            title: Account configurations
            description: A list of account configurations
            items:
              $ref: '#/components/schemas/MsGraphAccountConfig'

            example:
            - 
        example:
          type: api_msgraph
          accountConfigs:
          - 
    MsGraphAccountConfig:
      type: object
      required:
      - name
      - tenantId
      - clientId
      - clientSecret
      properties:
        name:
          type: string
          title: Account Name
          description: Azure account name
          example: string
        tenantId:
          type: string
          title: Tenant ID
          example: string
        clientId:
          type: string
          title: Client ID
          example: string
        clientSecret:
          type: string
          title: Client Secret

    # Okta API Dataset Schemas
          example: string
      example:
        name: string
        tenantId: string
        clientId: string
        clientSecret: string
    ApiOktaDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - enabledEndpoints
        properties:
          type:
            type: string
            enum: [api_okta]
            example: api_okta
          enabledEndpoints:
            type: array
            minLength: 1
            title: Enabled endpoints
            description: A list of the endpoints that are enabled in this dataset
            uniqueItems: true
            items:
              type: string
              title: Endpoint
              description: Okta endpoint

              example: string
            example:
            - string
        example:
          type: api_okta
          enabledEndpoints:
          - string
    ApiOktaProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - accountConfigs
        properties:
          type:
            type: string
            enum: [api_okta]
            example: api_okta
          accountConfigs:
            type: array
            minLength: 1
            title: Account configurations
            description: A list of account configurations
            items:
              $ref: '#/components/schemas/OktaAccountConfig'

            example:
            - 
        example:
          type: api_okta
          accountConfigs:
          - 
    OktaAccountConfig:
      type: object
      required:
      - apiToken
      - name
      - domainEndpoint
      properties:
        name:
          type: string
          title: Account Name
          description: Okta account name
          example: string
        domainEndpoint:
          type: string
          title: Domain Endpoint
          description: "URL for the subdomain of your organization. Example: subdomain.okta.com"
          example: string
        apiToken:
          type: string
          title: API Token
          description: "API token for authorizing requests"

    # Tailscale API Dataset Schemas
          example: string
      example:
        name: string
        domainEndpoint: string
        apiToken: string
    ApiTailscaleDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - enabledEndpoints
        properties:
          type:
            type: string
            enum: [api_tailscale]
            example: api_tailscale
          enabledEndpoints:
            type: array
            minLength: 1
            title: Enabled endpoints
            description: A list of the endpoints that are enabled in this dataset
            uniqueItems: true
            items:
              type: string
              title: Endpoint
              description: Tailscale endpoint

              example: string
            example:
            - string
        example:
          type: api_tailscale
          enabledEndpoints:
          - string
    ApiTailscaleProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - accountConfigs
        properties:
          type:
            type: string
            enum: [api_tailscale]
            example: api_tailscale
          accountConfigs:
            type: array
            minLength: 1
            title: Account configurations
            description: A list of account configuration
            items:
              $ref: '#/components/schemas/TailscaleAccountConfig'

    # S3 Dataset Schemas
            example:
            - 
        example:
          type: api_tailscale
          accountConfigs:
          - 
    S3Dataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - bucket
        properties:
          type:
            type: string
            enum: [s3]
            example: s3
          bucket:
            type: string
            title: "Bucket"
            description: "S3 bucket name"
            minLength: 1
            example: string
          path:
            type: string
            title: "Path"
            description: "The templated path under which to look for data"
            minLength: 1
            templated: true
            example: string
          filter:
            type: string
            title: "Path Filter"
            description: "A JavaScript filter expression to be evaluated against the provided path"
            minLength: 1
            templated: true
            jsExpression: true
            default: "true"
            example: "true"
          region:
            type: string
            title: "Region"
            description: "AWS region where the bucket is located"
            example: string
          autoDetectRegion:
            type: boolean
            title: "Auto Detect Region"
            description: "Whether to automatically detect the region"
            example: true
          extraPaths:
            type: array
            title: "Extra paths"
            description: "Additional bucket paths that are included in this dataset"
            items:
              type: object
              required:
              - bucket
              properties:
                bucket:
                  type: string
                  title: "Bucket"
                  description: "S3 bucket name"
                  minLength: 1
                  example: string
                path:
                  type: string
                  title: "Path"
                  description: "The templated path under which to look for data"
                  minLength: 1
                  templated: true
                  example: string
                filter:
                  type: string
                  title: "Path Filter"
                  description: "A JavaScript filter expression to be evaluated against the provided path"
                  minLength: 1
                  templated: true
                  jsExpression: true
                  default: "true"
                  example: "true"
                region:
                  type: string
                  title: "Region"
                  description: "AWS region where the bucket is located"
                  example: string
                autoDetectRegion:
                  type: boolean
                  title: "Auto Detect Region"
                  description: "Whether to automatically detect the region"
                  example: true
              example:
                bucket: string
                path: string
                filter: "true"
                region: string
                autoDetectRegion: true
            example:
            - bucket: string
              path: string
              filter: "true"
              region: string
              autoDetectRegion: true
          storageClasses:
            type: array
            title: "Storage classes"
            description: "Storage classes to include in the search"
            items:
              type: string
              example: string
            minItems: 1
            uniqueItems: true
            example:
            - string
          skipEventTimeFilter:
            type: boolean
            title: "Skip Event Time Filter"
            description: "Whether to skip event time filtering"

            example: true
        example:
          type: s3
          bucket: string
          path: string
          filter: "true"
          region: string
          autoDetectRegion: true
          extraPaths:
          - bucket: string
            path: string
            filter: "true"
            region: string
            autoDetectRegion: true
          storageClasses:
          - string
          skipEventTimeFilter: true
    S3Provider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - signatureVersion
        properties:
          type:
            type: string
            enum: [s3]
            example: s3
          awsAuthenticationMethod:
            type: string
            title: "Authentication method"
            description: "AWS authentication method"
            enum: [auto, manual]
            enumNames: ["AssumeRole", "AWS keys"]
            example: auto
          assumeRoleArn:
            type: string
            title: "Assume Role ARN"
            description: "ARN of the role to assume"
            example: string
          assumeRoleExternalId:
            type: string
            title: "External ID"
            description: "External ID for role assumption"
            example: string
          awsApiKey:
            type: string
            title: "Access Key"
            description: "AWS access key"
            example: string
          awsSecretKey:
            type: string
            title: "Secret Key"
            description: "AWS secret key"
            example: string
          bucket:
            type: string
            title: "Bucket"
            description: "S3 bucket name"
            example: string
          region:
            type: string
            title: "Region"
            description: "AWS region"
            example: string
          endpoint:
            type: string
            title: "Endpoint"
            description: "S3 endpoint URL"
            example: string
          signatureVersion:
            type: string
            title: "Signature Version"
            description: "AWS signature version"
            enum: [v2, v4]
            example: v2
          rejectUnauthorized:
            type: boolean
            title: "Reject Unauthorized"
            description: "Whether to reject unauthorized requests"
            example: true
          reuseConnections:
            type: boolean
            title: "Reuse Connections"
            description: "Whether to reuse connections"
            example: true
          enableAssumeRole:
            type: boolean
            title: "Enable Assume Role"
            description: "Whether to enable role assumption"
            example: true
          bucketPathSuggestion:
            type: string
            title: "Bucket Path Suggestion"
            description: "Suggested bucket path"
            example: string
          sessionToken:
            type: string
            title: "Session Token"
            description: "AWS session token"
            example: string
          enableAbacTagging:
            type: boolean
            title: "Enable ABAC Tagging"
            description: "Whether to enable ABAC source-ip tagging"

    # Cribl Leader Dataset Schemas
            example: true
        example:
          type: s3
          awsAuthenticationMethod: auto
          assumeRoleArn: string
          assumeRoleExternalId: string
          awsApiKey: string
          awsSecretKey: string
          bucket: string
          region: string
          endpoint: string
          signatureVersion: v2
          rejectUnauthorized: true
          reuseConnections: true
          enableAssumeRole: true
          bucketPathSuggestion: string
          sessionToken: string
          enableAbacTagging: true
    CriblLeaderDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - path
        properties:
          type:
            type: string
            enum: [cribl_leader]
            example: cribl_leader
          path:
            type: string
            title: "Path"
            description: "The directory from which to collect data. Environment variables are supported. Supports templating."
            minLength: 1
            templated: true
            example: string
          filter:
            type: string
            title: "Path filter"
            description: "A JavaScript filter expression to be evaluated against the provided path"
            minLength: 1
            templated: true
            jsExpression: true
            default: "true"
            example: "true"
          extraPaths:
            type: array
            title: "Extra paths"
            description: "Additional paths that are included in this dataset"
            items:
              type: object
              required:
              - path
              properties:
                path:
                  type: string
                  title: "Path"
                  description: "The directory from which to collect data"
                  minLength: 1
                  templated: true
                  example: string
                filter:
                  type: string
                  title: "Path filter"
                  description: "A JavaScript filter expression to be evaluated against the provided path"
                  minLength: 1
                  templated: true
                  jsExpression: true
                  default: "true"

                  example: "true"
              example:
                path: string
                filter: "true"
            example:
            - path: string
              filter: "true"
        example:
          type: cribl_leader
          path: string
          filter: "true"
          extraPaths:
          - path: string
            filter: "true"
    CriblLeaderProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        properties:
          type:
            type: string
            enum: [cribl_leader]
            example: cribl_leader
        example:
          type: cribl_leader

    # Meta Dataset Schemas
    MetaDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - datasets
        properties:
          type:
            type: string
            enum: [cribl_meta]
            example: cribl_meta
          datasets:
            type: array
            title: "Dataset list"
            description: "IDs of the datasets that are searched by default"
            items:
              type: string
              example: string
            minLength: 1

            example:
            - string
        example:
          type: cribl_meta
          datasets:
          - string
    MetaProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        properties:
          type:
            type: string
            enum: [cribl_meta]
            example: cribl_meta
        example:
          type: cribl_meta

    # Edge Dataset Schemas
    EdgeDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - fleets
        - path
        properties:
          type:
            type: string
            enum: [cribl_edge]
            example: cribl_edge
          fleets:
            type: array
            title: "Fleets to query"
            description: "Fleets to query. '*' for all"
            items:
              type: string
              example: string
            minItems: 1
            default: &id018 []
            example: *id018
          path:
            type: string
            title: "Path"
            description: "The directory where data will be collected. Environment variables and templating are supported."
            minLength: 1
            templated: true
            example: string
          filter:
            type: string
            title: "Path Filter"
            description: "A JavaScript filter expression to be evaluated against the provided path"
            minLength: 1
            templated: true
            jsExpression: true
            default: "true"

            example: "true"
        example:
          type: cribl_edge
          fleets: *id018
          path: string
          filter: "true"
    EdgeProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        properties:
          type:
            type: string
            enum: [cribl_edge]
            example: cribl_edge
        example:
          type: cribl_edge

    # Azure Blob Dataset Schemas
    AzureBlobDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - containerName
        properties:
          type:
            type: string
            enum: [azure_blob]
            example: azure_blob
          containerName:
            type: string
            title: "Container name"
            description: "Azure Blob Storage container name"
            minLength: 1
            example: string
          path:
            type: string
            title: "Path"
            description: "The templated path under which to look for data"
            minLength: 1
            templated: true
            example: string
          filter:
            type: string
            title: "Path Filter"
            description: "A JavaScript filter expression to be evaluated against the provided path"
            minLength: 1
            templated: true
            jsExpression: true
            default: "true"
            example: "true"
          extraPaths:
            type: array
            title: "Extra paths"
            description: "Additional container paths that are included in this dataset"
            items:
              type: object
              required:
              - containerName
              properties:
                containerName:
                  type: string
                  title: "Container name"
                  description: "Azure Blob Storage container name"
                  minLength: 1
                  example: string
                path:
                  type: string
                  title: "Path"
                  description: "The templated path under which to look for data"
                  minLength: 1
                  templated: true
                  example: string
                filter:
                  type: string
                  title: "Path Filter"
                  description: "A JavaScript filter expression to be evaluated against the provided path"
                  minLength: 1
                  templated: true
                  jsExpression: true
                  default: "true"
                  example: "true"
              example:
                containerName: string
                path: string
                filter: "true"
            example:
            - containerName: string
              path: string
              filter: "true"
          storageClasses:
            type: array
            title: "Storage classes"
            description: "Storage classes to include in the search"
            items:
              type: string
              example: string
            minItems: 1
            uniqueItems: true
            example:
            - string
          skipEventTimeFilter:
            type: boolean
            title: "Skip Event Time Filter"
            description: "Whether to skip event time filtering"

            example: true
        example:
          type: azure_blob
          containerName: string
          path: string
          filter: "true"
          extraPaths:
          - containerName: string
            path: string
            filter: "true"
          storageClasses:
          - string
          skipEventTimeFilter: true
    AzureBlobProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - location
        properties:
          type:
            type: string
            enum: [azure_blob]
            example: azure_blob
          authenticationMethod:
            type: string
            title: "Authentication method"
            description: "Azure Storage authentication method"
            default: "connection_string"
            enum: [connection_string, blob_sas_url, client_secret]
            enumNames: ["Connection String", "Blob SAS URL", "Client Secret"]
            example: "connection_string"
          location:
            type: string
            title: "Location"
            description: "Primary region in which the storage account is located"
            example: string
          connectionString:
            type: string
            title: "Connection string"
            description: "Storage account connection string"
            minLength: 1
            example: string
          sasConfigs:
            type: array
            title: "SAS configurations"
            description: "A list of container-specific SAS configurations"
            items:
              type: object
              required:
              - containerName
              - blobSasUrl
              properties:
                containerName:
                  type: string
                  title: "Container name"
                  description: "Name of the Azure Blob Storage container"
                  example: string
                blobSasUrl:
                  type: string
                  title: "Blob SAS URL"
                  description: "Container-specific Blob SAS URL"
                  example: string
              example:
                containerName: string
                blobSasUrl: string
            example:
            - containerName: string
              blobSasUrl: string
          storageAccountName:
            type: string
            title: "Storage account name"
            description: "The name of your Azure storage account"
            example: string
          tenantId:
            type: string
            title: "Tenant ID"
            description: "The service principal's tenant ID"
            example: string
          clientId:
            type: string
            title: "Client ID"
            description: "The service principal's client ID"
            example: string
          clientSecret:
            type: string
            title: "Client secret"
            description: "The service principal's client secret"
            minLength: 1

    # GCS Dataset Schemas
            example: string
        example:
          type: azure_blob
          authenticationMethod: "connection_string"
          location: string
          connectionString: string
          sasConfigs:
          - containerName: string
            blobSasUrl: string
          storageAccountName: string
          tenantId: string
          clientId: string
          clientSecret: string
    GcsDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - bucket
        properties:
          type:
            type: string
            enum: [gcs]
            example: gcs
          bucket:
            type: string
            title: "Bucket path"
            description: "Google Cloud Storage bucket path. Templating is supported."
            minLength: 1
            templated: true
            example: string
          filter:
            type: string
            title: "Path filter"
            description: "A JavaScript filter expression to be evaluated against the provided path"
            minLength: 1
            templated: true
            jsExpression: true
            default: "true"
            example: "true"
          region:
            type: string
            title: "Region"
            description: "Where the bucket is located"
            example: string
          extraPaths:
            type: array
            title: "Extra paths"
            description: "Additional bucket paths that are included in this dataset"
            items:
              type: object
              required:
              - bucket
              properties:
                bucket:
                  type: string
                  title: "Bucket path"
                  description: "Google Cloud Storage bucket path"
                  minLength: 1
                  templated: true
                  example: string
                filter:
                  type: string
                  title: "Path filter"
                  description: "A JavaScript filter expression to be evaluated against the provided path"
                  minLength: 1
                  templated: true
                  jsExpression: true
                  default: "true"
                  example: "true"
                region:
                  type: string
                  title: "Region"
                  description: "Where the bucket is located"
                  example: string
              example:
                bucket: string
                filter: "true"
                region: string
            example:
            - bucket: string
              filter: "true"
              region: string
          storageClasses:
            type: array
            title: "Storage classes"
            description: "Storage classes to include in the search"
            items:
              type: string
              example: string
            minItems: 1
            uniqueItems: true
            example:
            - string
          skipEventTimeFilter:
            type: boolean
            title: "Skip Event Time Filter"
            description: "Whether to skip event time filtering"

            example: true
        example:
          type: gcs
          bucket: string
          filter: "true"
          region: string
          extraPaths:
          - bucket: string
            filter: "true"
            region: string
          storageClasses:
          - string
          skipEventTimeFilter: true
    GcsProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - serviceAccountCredentials
        properties:
          type:
            type: string
            enum: [gcs]
            example: gcs
          serviceAccountCredentials:
            type: string
            title: "Service account credentials"
            description: "Contents of Google Cloud service account credentials (JSON keys) file"
            minLength: 1
            example: string
          endpoint:
            type: string
            title: "Endpoint"
            description: "Google Cloud Storage service endpoint"

    # AWS Security Lake Dataset Schemas
            example: string
        example:
          type: gcs
          serviceAccountCredentials: string
          endpoint: string
    AwsSecurityLakeDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - selectedBuckets
        properties:
          type:
            type: string
            enum: [amazon_security_lake]
            example: amazon_security_lake
          path:
            type: string
            title: "Path"
            description: "The templated path under which to look for data, in each folder"
            minLength: 1
            templated: true
            default: "${vendor}/${sourceLocation}/${pathVersion}/region=${region}/accountId=${accountId}/eventDay=${_time:%Y%m%d}/"
            example: "${vendor}/${sourceLocation}/${pathVersion}/region=${region}/accountId=${accountId}/eventDay=${_time:%Y%m%d}/"
          filter:
            type: string
            title: "Path Filter"
            description: "A JavaScript filter expression to be evaluated against the provided path"
            minLength: 1
            templated: true
            jsExpression: true
            default: "true"
            example: "true"
          selectedBuckets:
            type: array
            minLength: 1
            title: "Selected buckets"
            description: "A list of the buckets that should be searched by this dataset"
            uniqueItems: true
            items:
              type: object
              title: "S3 bucket"
              description: "S3 bucket configuration"
              minLength: 1
              properties:
                name:
                  type: string
                  title: "Bucket name"
                  description: "S3 bucket name"
                  templated: true
                  minLength: 1
                  example: string
                region:
                  type: string
                  title: "Region"
                  description: "Region where the bucket is located"

                  example: string
              example:
                name: string
                region: string
            example:
            - name: string
              region: string
        example:
          type: amazon_security_lake
          path: "${vendor}/${sourceLocation}/${pathVersion}/region=${region}/accountId=${accountId}/eventDay=${_time:%Y%m%d}/"
          filter: "true"
          selectedBuckets:
          - name: string
            region: string
    AwsSecurityLakeProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - signatureVersion
        properties:
          type:
            type: string
            enum: [amazon_security_lake]
            example: amazon_security_lake
          awsAuthenticationMethod:
            type: string
            title: "Authentication method"
            description: "AWS authentication method"
            enum: [auto, manual]
            enumNames: ["AssumeRole", "AWS keys"]
            example: auto
          assumeRoleArn:
            type: string
            title: "Assume Role ARN"
            description: "ARN of the role to assume"
            example: string
          assumeRoleExternalId:
            type: string
            title: "External ID"
            description: "External ID for role assumption"
            example: string
          awsApiKey:
            type: string
            title: "Access Key"
            description: "AWS access key"
            example: string
          awsSecretKey:
            type: string
            title: "Secret Key"
            description: "AWS secret key"
            example: string
          bucket:
            type: string
            title: "Bucket"
            description: "S3 bucket name"
            example: string
          region:
            type: string
            title: "Region"
            description: "AWS region"
            example: string
          endpoint:
            type: string
            title: "Endpoint"
            description: "S3 endpoint URL"
            example: string
          signatureVersion:
            type: string
            title: "Signature Version"
            description: "AWS signature version"
            enum: [v2, v4]
            example: v2
          rejectUnauthorized:
            type: boolean
            title: "Reject Unauthorized"
            description: "Whether to reject unauthorized requests"
            example: true
          reuseConnections:
            type: boolean
            title: "Reuse Connections"
            description: "Whether to reuse connections"
            example: true
          enableAssumeRole:
            type: boolean
            title: "Enable Assume Role"
            description: "Whether to enable role assumption"
            example: true
          bucketPathSuggestion:
            type: string
            title: "Bucket Path Suggestion"
            description: "Suggested bucket path"
            example: string
          sessionToken:
            type: string
            title: "Session Token"
            description: "AWS session token"
            example: string
          enableAbacTagging:
            type: boolean
            title: "Enable ABAC Tagging"
            description: "Whether to enable ABAC source-ip tagging"

            example: true
        example:
          type: amazon_security_lake
          awsAuthenticationMethod: auto
          assumeRoleArn: string
          assumeRoleExternalId: string
          awsApiKey: string
          awsSecretKey: string
          bucket: string
          region: string
          endpoint: string
          signatureVersion: v2
          rejectUnauthorized: true
          reuseConnections: true
          enableAssumeRole: true
          bucketPathSuggestion: string
          sessionToken: string
          enableAbacTagging: true
    TailscaleAccountConfig:
      type: object
      required:
      - clientId
      - clientSecret
      - name
      properties:
        name:
          type: string
          title: Account Name
          description: Tailscale account name
          example: string
        clientId:
          type: string
          title: Client ID
          description: Client ID string
          example: string
        clientSecret:
          type: string
          title: Client Secret
          description: Client secret string

    # Zoom API Dataset Schemas
          example: string
      example:
        name: string
        clientId: string
        clientSecret: string
    ApiZoomDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - enabledEndpoints
        properties:
          type:
            type: string
            enum: [api_zoom]
            example: api_zoom
          enabledEndpoints:
            type: array
            minLength: 1
            title: Enabled endpoints
            description: A list of the endpoints that are enabled in this dataset
            uniqueItems: true
            items:
              type: string
              title: Endpoint
              description: Zoom endpoint

              example: string
            example:
            - string
        example:
          type: api_zoom
          enabledEndpoints:
          - string
    ApiZoomProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - accountConfigs
        properties:
          type:
            type: string
            enum: [api_zoom]
            example: api_zoom
          accountConfigs:
            type: array
            minLength: 1
            title: Account configurations
            description: A list of account configurations
            items:
              $ref: '#/components/schemas/ZoomAccountConfig'

            example:
            - 
        example:
          type: api_zoom
          accountConfigs:
          - 
    ZoomAccountConfig:
      type: object
      required:
      - accountId
      - clientId
      - clientSecret
      - name
      properties:
        name:
          type: string
          title: Account Name
          description: Zoom account name
          example: string
        accountId:
          type: string
          title: Account ID
          description: Zoom account ID
          example: string
        clientId:
          type: string
          title: Client ID
          description: Client ID string
          example: string
        clientSecret:
          type: string
          title: Client Secret
          description: Client secret string

    # Azure Data Explorer Dataset Schemas
          example: string
      example:
        name: string
        accountId: string
        clientId: string
        clientSecret: string
    ApiAzureDataExplorerDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - cluster
        - location
        - database
        - table
        - timestampFieldContents
        properties:
          type:
            type: string
            enum: [api_azure_data_explorer]
            example: api_azure_data_explorer
          cluster:
            type: string
            title: Cluster
            description: Azure Data Explorer cluster name
            minLength: 1
            example: string
          location:
            type: string
            title: Location
            description: Location (region) of the Azure Data Explorer cluster
            minLength: 1
            example: string
          database:
            type: string
            title: Database
            description: Azure Data Explorer database name
            minLength: 1
            example: string
          table:
            type: string
            title: Table or Query
            description: "Name of the table to query. May be a simple name (Example: logs) or a Kusto query"
            minLength: 1
            example: string
          timestampField:
            type: string
            title: Timestamp field
            description: Optional name of the field holding the timestamp of the event
            minLength: 1
            example: string
          timestampFieldContents:
            type: string
            title: Timestamp field contents
            description: Type of the data stored in the timestamp field
            minLength: 1
            default: kusto_datetime

            example: kusto_datetime
        example:
          type: api_azure_data_explorer
          cluster: string
          location: string
          database: string
          table: string
          timestampField: string
          timestampFieldContents: kusto_datetime
    ApiAzureDataExplorerProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - tenantId
        - clientId
        - clientSecret
        properties:
          type:
            type: string
            enum: [api_azure_data_explorer]
            example: api_azure_data_explorer
          tenantId:
            type: string
            title: Tenant ID
            description: The Tenant ID of the authorized application
            minLength: 1
            example: string
          clientId:
            type: string
            title: Client ID
            description: The Client ID (also known as Secret ID) of the authorized application
            minLength: 1
            example: string
          clientSecret:
            type: string
            title: Client Secret
            description: The Client Secret of the authorized application
            minLength: 1

    # Snowflake Dataset Schemas
            example: string
        example:
          type: api_azure_data_explorer
          tenantId: string
          clientId: string
          clientSecret: string
    SnowflakeDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - table
        properties:
          type:
            type: string
            enum: [snowflake]
            example: snowflake
          warehouse:
            type: string
            title: Warehouse name
            description: If not set, uses DEFAULT_WAREHOUSE
            minLength: 1
            example: string
          database:
            type: string
            title: Database name
            minLength: 1
            example: string
          schema:
            type: string
            title: Schema name
            description: The schema in the database that contains the table(s) to query
            minLength: 1
            example: string
          table:
            type: string
            title: Table name, view, or query
            description: "May be a simple name (Example: logs) or a SQL query (Example: select * from logs)"
            minLength: 1
            example: string
          timestampField:
            type: string
            title: Timestamp field
            description: Optional name of the column holding the timestamp of the event to query
            minLength: 1
            example: string
          role:
            type: string
            title: Role
            description: Optional Snowflake role to use when executing the statement
            minLength: 1

            example: string
        example:
          type: snowflake
          warehouse: string
          database: string
          schema: string
          table: string
          timestampField: string
          role: string
    SnowflakeProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - accountIdentifier
        - username
        - privKey
        properties:
          type:
            type: string
            enum: [snowflake]
            example: snowflake
          accountIdentifier:
            type: string
            title: Account identifier
            description: The Snowflake account identifier, in the format <orgname>-<account_name>
            minLength: 1
            example: string
          username:
            type: string
            title: Username
            description: The Snowflake user for key pair authentication
            minLength: 1
            example: string
          privKey:
            type: string
            title: Private Key
            description: The private key string out of the key file, from the pair of keys generated for authentication
            minLength: 1
            example: string
          passphrase:
            type: string
            title: Key Password
            description: The key password for the private key
            example: string
          maxConcurrency:
            type: integer
            title: Max Concurrency
            description: Total number of concurrent executors for processing Snowflake partitions
            example: 123
          endpoint:
            type: string
            title: Endpoint
            description: Optional endpoint to override default REST API endpoint

    # ClickHouse Dataset Schemas
            example: string
        example:
          type: snowflake
          accountIdentifier: string
          username: string
          privKey: string
          passphrase: string
          maxConcurrency: 123
          endpoint: string
    ClickHouseDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - table
        properties:
          type:
            type: string
            enum: [clickhouse]
            example: clickhouse
          database:
            type: string
            title: Database name
            minLength: 1
            example: string
          table:
            type: string
            title: Table name, view, or query
            description: "May be a simple name (Example: logs) or a SQL query (Example: select * from logs). Results will be limited to 100K for tables without sorting keys and queries."
            minLength: 1
            example: string
          timestampField:
            type: string
            title: Timestamp field
            description: Optional name of the column holding the timestamp of the event to query
            minLength: 1

            example: string
        example:
          type: clickhouse
          database: string
          table: string
          timestampField: string
    ClickHouseProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - username
        - endpoint
        properties:
          type:
            type: string
            enum: [clickhouse]
            example: clickhouse
          username:
            type: string
            title: Username
            description: The ClickHouse username for authentication
            minLength: 1
            example: string
          password:
            type: string
            title: Password
            description: The ClickHouse user password for authentication
            minLength: 1
            example: string
          endpoint:
            type: string
            title: Endpoint
            description: URL to ClickHouse server with HTTP interface enabled. Ideally should be HTTPS over port 8443.
            minLength: 1

    # Prometheus Dataset Schemas
            example: string
        example:
          type: clickhouse
          username: string
          password: string
          endpoint: string
    PrometheusDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - desiredNumDataPoints
        - stepMode
        properties:
          type:
            type: string
            enum: [prometheus]
            example: prometheus
          desiredNumDataPoints:
            type: number
            title: Number of data points
            description: Number of data points you want in each result set. Defaults to 250. Can be overridden on the query with a "step" predicate.
            minimum: 1
            maximum: 11000
            default: 250
            example: 250
          stepMode:
            type: string
            title: Step mode
            description: How to calculate the "step," or time range increment per data point, for the Prometheus query request
            default: exact
            enum: [exact, nearest_unit]
            enumNames: [Exact number of data points, Snap to nearest unit]
            example: exact
          metricNamePattern:
            type: string
            title: Metric name pattern
            description: Optional regular expression used to filter metric names. When defined, only metrics whose name matches this pattern will be searched.

            example: string
        example:
          type: prometheus
          desiredNumDataPoints: 250
          stepMode: exact
          metricNamePattern: string
    PrometheusProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - endpoint
        - authType
        - maxConcurrency
        properties:
          type:
            type: string
            enum: [prometheus]
            example: prometheus
          endpoint:
            type: string
            title: Endpoint
            description: "Prometheus API endpoint URL. Example: https://prometheus.goats.biz"
            pattern: '^https?://.+'
            example: string
          authType:
            type: string
            title: Authentication Type
            enum: [none, basic, token]
            default: none
            example: none
          username:
            type: string
            title: Username
            description: Basic auth username
            example: string
          password:
            type: string
            title: Password
            description: Basic auth password
            example: string
          token:
            type: string
            title: Bearer Token
            description: Bearer token
            example: string
          maxConcurrency:
            type: number
            title: Concurrency limit
            description: Maximum number of concurrent API requests
            default: 3

    # OpenSearch Dataset Schemas
            example: 3
        example:
          type: prometheus
          endpoint: string
          authType: none
          username: string
          password: string
          token: string
          maxConcurrency: 3
    ApiOpenSearchDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - index
        - timestampField
        properties:
          type:
            type: string
            enum: [api_opensearch]
            example: api_opensearch
          index:
            type: string
            title: Index
            description: Name of the OpenSearch index to search
            minLength: 1
            example: string
          timestampField:
            type: string
            title: Timestamp field
            description: Name of the field holding the timestamp of the event
            minLength: 1
            default: '@timestamp'

            example: '@timestamp'
        example:
          type: api_opensearch
          index: string
          timestampField: '@timestamp'
    ApiOpenSearchProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - username
        - password
        - endpoint
        properties:
          type:
            type: string
            enum: [api_opensearch]
            example: api_opensearch
          username:
            type: string
            title: Username
            description: OpenSearch username for authentication
            minLength: 1
            example: string
          password:
            type: string
            title: Password
            description: OpenSearch password for authentication
            minLength: 1
            example: string
          endpoint:
            type: string
            title: Endpoint
            description: "OpenSearch API endpoint URL. Example: https://opensearch.mycompany.com"
            minLength: 1

    # ElasticSearch Dataset Schemas
            example: string
        example:
          type: api_opensearch
          username: string
          password: string
          endpoint: string
    ApiElasticSearchDataset:
      allOf:
      - $ref: '#/components/schemas/Dataset'
      - type: object
        required:
        - index
        - timestampField
        properties:
          type:
            type: string
            enum: [api_elasticsearch]
            example: api_elasticsearch
          index:
            type: string
            title: Index
            description: Name of the Elasticsearch index to search
            minLength: 1
            example: string
          timestampField:
            type: string
            title: Timestamp field
            description: Name of the field holding the timestamp of the event
            minLength: 1

            example: string
        example:
          type: api_elasticsearch
          index: string
          timestampField: string
    ApiElasticSearchProvider:
      allOf:
      - $ref: '#/components/schemas/Provider'
      - type: object
        required:
        - username
        - password
        - endpoint
        properties:
          type:
            type: string
            enum: [api_elasticsearch]
            example: api_elasticsearch
          username:
            type: string
            title: Username
            description: Elasticsearch username for authentication
            minLength: 1
            example: string
          password:
            type: string
            title: Password
            description: Elasticsearch password for authentication
            minLength: 1
            example: string
          endpoint:
            type: string
            title: Endpoint
            description: Elasticsearch API endpoint URL
            minLength: 1

    # Amazon Security Lake Provider Schema
            example: string
        example:
          type: api_elasticsearch
          username: string
          password: string
          endpoint: string
    Lakehouse:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the lakehouse
          example: string
        description:
          type: string
          description: Description of the lakehouse
          example: string
        status:
          type: string
          description: Status of the lakehouse
          example: string
        tierSize:
          type: string
          description: Size of the lakehouse tier
          default: "small"
          enum:
          - small
          - medium
          - large
          - xlarge
          - 2xlarge
          - 3xlarge
          - 6xlarge
          example: "small"
      required:
      - id
      - tierSize

      example:
        id: string
        description: string
        status: string
        tierSize: "small"
    UserAccessControlList:
      type: object
      properties:
        perms:
          type: array
          items:
            $ref: "#/components/schemas/ResourcePolicy"
          example:
          - 
        user:
          type: string
          example: string
      required:
      - perms
      - user
      example:
        perms:
        - 
        user: string
    AccessControl:
      type: object
      example: {}
    AccessControlSchema:
      type: object
      properties:
        add:
          $ref: "#/components/schemas/AccessControl"
        rm:
          $ref: "#/components/schemas/AccessControl"
      example: {}
    AppscopeTransport:
      type: object
      properties:
        buffer:
          type: string
          enum:
          - line
          - full
          example: line
        host:
          type: string
          example: string
        path:
          type: string
          example: string
        port:
          type: number
          example: 123.45
        tls:
          type: object
          properties:
            cacertpath:
              type: string
              example: string
            enable:
              type: boolean
              example: true
            validateserver:
              type: boolean
              example: true
          example:
            cacertpath: string
            enable: true
            validateserver: true
        type:
          type: string
          example: string
      example:
        buffer: line
        host: string
        path: string
        port: 123.45
        tls:
          cacertpath: string
          enable: true
          validateserver: true
        type: string
    AppscopeConfig:
      type: object
      properties:
        cribl:
          type: object
          properties:
            authtoken:
              type: string
              example: string
            enable:
              type: boolean
              example: true
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            useScopeSourceTransport:
              type: boolean
              example: true
          example:
            authtoken: string
            enable: true
            useScopeSourceTransport: true
        event:
          type: object
          properties:
            enable:
              type: boolean
              example: true
            format:
              type: object
              properties:
                enhancefs:
                  type: boolean
                  example: true
                maxeventpersec:
                  type: number
                  example: 123.45
              required:
              - enhancefs
              - maxeventpersec
              example:
                enhancefs: true
                maxeventpersec: 123.45
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            type:
              type: string
              enum:
              - ndjson
              example: ndjson
            watch:
              type: array
              items:
                type: object
                properties:
                  allowbinary:
                    type: boolean
                    example: true
                  enabled:
                    type: boolean
                    example: true
                  field:
                    type: string
                    example: string
                  headers:
                    type: array
                    items:
                      type: string
                      example: string
                    example:
                    - string
                  name:
                    type: string
                    example: string
                  type:
                    type: string
                    example: string
                  value:
                    type: string
                    example: string
                required:
                - type
                example:
                  allowbinary: true
                  enabled: true
                  field: string
                  headers:
                  - string
                  name: string
                  type: string
                  value: string
              example:
              - allowbinary: true
                enabled: true
                field: string
                headers:
                - string
                name: string
                type: string
                value: string
          required:
          - enable
          - format
          - transport
          - type
          - watch
          example:
            enable: true
            format:
              enhancefs: true
              maxeventpersec: 123.45
            type: ndjson
            watch:
            - allowbinary: true
              enabled: true
              field: string
              headers:
              - string
              name: string
              type: string
              value: string
        libscope:
          type: object
          properties:
            commanddir:
              type: string
              example: string
            configevent:
              type: boolean
              example: true
            log:
              type: object
              properties:
                level:
                  type: string
                  enum:
                  - error
                  - debug
                  - info
                  - warning
                  - none
                  example: error
                transport:
                  $ref: "#/components/schemas/AppscopeTransport"
              example:
                level: error
            summaryperiod:
              type: number
              example: 123.45
          example:
            commanddir: string
            configevent: true
            log:
              level: error
            summaryperiod: 123.45
        metric:
          type: object
          properties:
            enable:
              type: boolean
              example: true
            format:
              type: object
              properties:
                statsdmaxlen:
                  type: number
                  example: 123.45
                statsdprefix:
                  type: string
                  example: string
                type:
                  type: string
                  example: string
                verbosity:
                  type: number
                  example: 123.45
              example:
                statsdmaxlen: 123.45
                statsdprefix: string
                type: string
                verbosity: 123.45
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            watch:
              type: array
              items:
                type: object
                example: {}
              example:
              - {}
          required:
          - enable
          - format
          - transport
          - watch
          example:
            enable: true
            format:
              statsdmaxlen: 123.45
              statsdprefix: string
              type: string
              verbosity: 123.45
            watch:
            - {}
        payload:
          type: object
          properties:
            dir:
              type: string
              example: string
            enable:
              type: boolean
              example: true
          required:
          - dir
          - enable
          example:
            dir: string
            enable: true
        protocol:
          type: array
          items:
            type: object
            properties:
              binary:
                type: boolean
                example: true
              detect:
                type: boolean
                example: true
              len:
                type: number
                example: 123.45
              name:
                type: string
                example: string
              payload:
                type: boolean
                example: true
              regex:
                type: string
                example: string
            required:
            - binary
            - detect
            - len
            - name
            - payload
            - regex
            example:
              binary: true
              detect: true
              len: 123.45
              name: string
              payload: true
              regex: string
          example:
          - binary: true
            detect: true
            len: 123.45
            name: string
            payload: true
            regex: string
        tags:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
                example: string
              value:
                type: string
                example: string
            required:
            - key
            - value
            example:
              key: string
              value: string
          example:
          - key: string
            value: string
      example:
        cribl:
          authtoken: string
          enable: true
          useScopeSourceTransport: true
        event:
          enable: true
          format:
            enhancefs: true
            maxeventpersec: 123.45
          type: ndjson
          watch:
          - allowbinary: true
            enabled: true
            field: string
            headers:
            - string
            name: string
            type: string
            value: string
        libscope:
          commanddir: string
          configevent: true
          log:
            level: error
          summaryperiod: 123.45
        metric:
          enable: true
          format:
            statsdmaxlen: 123.45
            statsdprefix: string
            type: string
            verbosity: 123.45
          watch:
          - {}
        payload:
          dir: string
          enable: true
        protocol:
        - binary: true
          detect: true
          len: 123.45
          name: string
          payload: true
          regex: string
        tags:
        - key: string
          value: string
    AppscopeCustom:
      type: object
      properties:
        ancestor:
          type: string
          example: string
        arg:
          type: string
          example: string
        config:
          $ref: "#/components/schemas/AppscopeConfig"
        env:
          type: string
          example: string
        hostname:
          type: string
          example: string
        procname:
          type: string
          example: string
        username:
          type: string
          example: string
      required:
      - config
      example:
        ancestor: string
        arg: string
        env: string
        hostname: string
        procname: string
        username: string
    AppscopeConfigWithCustom:
      type: object
      properties:
        cribl:
          type: object
          properties:
            authtoken:
              type: string
              example: string
            enable:
              type: boolean
              example: true
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            useScopeSourceTransport:
              type: boolean
              example: true
          example:
            authtoken: string
            enable: true
            useScopeSourceTransport: true
        custom:
          type: array
          items:
            $ref: "#/components/schemas/AppscopeCustom"
          example:
          - 
        event:
          type: object
          properties:
            enable:
              type: boolean
              example: true
            format:
              type: object
              properties:
                enhancefs:
                  type: boolean
                  example: true
                maxeventpersec:
                  type: number
                  example: 123.45
              required:
              - enhancefs
              - maxeventpersec
              example:
                enhancefs: true
                maxeventpersec: 123.45
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            type:
              type: string
              enum:
              - ndjson
              example: ndjson
            watch:
              type: array
              items:
                type: object
                properties:
                  allowbinary:
                    type: boolean
                    example: true
                  enabled:
                    type: boolean
                    example: true
                  field:
                    type: string
                    example: string
                  headers:
                    type: array
                    items:
                      type: string
                      example: string
                    example:
                    - string
                  name:
                    type: string
                    example: string
                  type:
                    type: string
                    example: string
                  value:
                    type: string
                    example: string
                required:
                - type
                example:
                  allowbinary: true
                  enabled: true
                  field: string
                  headers:
                  - string
                  name: string
                  type: string
                  value: string
              example:
              - allowbinary: true
                enabled: true
                field: string
                headers:
                - string
                name: string
                type: string
                value: string
          required:
          - enable
          - format
          - transport
          - type
          - watch
          example:
            enable: true
            format:
              enhancefs: true
              maxeventpersec: 123.45
            type: ndjson
            watch:
            - allowbinary: true
              enabled: true
              field: string
              headers:
              - string
              name: string
              type: string
              value: string
        libscope:
          type: object
          properties:
            commanddir:
              type: string
              example: string
            configevent:
              type: boolean
              example: true
            log:
              type: object
              properties:
                level:
                  type: string
                  enum:
                  - error
                  - debug
                  - info
                  - warning
                  - none
                  example: error
                transport:
                  $ref: "#/components/schemas/AppscopeTransport"
              example:
                level: error
            summaryperiod:
              type: number
              example: 123.45
          example:
            commanddir: string
            configevent: true
            log:
              level: error
            summaryperiod: 123.45
        metric:
          type: object
          properties:
            enable:
              type: boolean
              example: true
            format:
              type: object
              properties:
                statsdmaxlen:
                  type: number
                  example: 123.45
                statsdprefix:
                  type: string
                  example: string
                type:
                  type: string
                  example: string
                verbosity:
                  type: number
                  example: 123.45
              example:
                statsdmaxlen: 123.45
                statsdprefix: string
                type: string
                verbosity: 123.45
            transport:
              $ref: "#/components/schemas/AppscopeTransport"
            watch:
              type: array
              items:
                type: object
                example: {}
              example:
              - {}
          required:
          - enable
          - format
          - transport
          - watch
          example:
            enable: true
            format:
              statsdmaxlen: 123.45
              statsdprefix: string
              type: string
              verbosity: 123.45
            watch:
            - {}
        payload:
          type: object
          properties:
            dir:
              type: string
              example: string
            enable:
              type: boolean
              example: true
          required:
          - dir
          - enable
          example:
            dir: string
            enable: true
        protocol:
          type: array
          items:
            type: object
            properties:
              binary:
                type: boolean
                example: true
              detect:
                type: boolean
                example: true
              len:
                type: number
                example: 123.45
              name:
                type: string
                example: string
              payload:
                type: boolean
                example: true
              regex:
                type: string
                example: string
            required:
            - binary
            - detect
            - len
            - name
            - payload
            - regex
            example:
              binary: true
              detect: true
              len: 123.45
              name: string
              payload: true
              regex: string
          example:
          - binary: true
            detect: true
            len: 123.45
            name: string
            payload: true
            regex: string
        tags:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
                example: string
              value:
                type: string
                example: string
            required:
            - key
            - value
            example:
              key: string
              value: string
          example:
          - key: string
            value: string
      example:
        cribl:
          authtoken: string
          enable: true
          useScopeSourceTransport: true
        custom:
        - 
        event:
          enable: true
          format:
            enhancefs: true
            maxeventpersec: 123.45
          type: ndjson
          watch:
          - allowbinary: true
            enabled: true
            field: string
            headers:
            - string
            name: string
            type: string
            value: string
        libscope:
          commanddir: string
          configevent: true
          log:
            level: error
          summaryperiod: 123.45
        metric:
          enable: true
          format:
            statsdmaxlen: 123.45
            statsdprefix: string
            type: string
            verbosity: 123.45
          watch:
          - {}
        payload:
          dir: string
          enable: true
        protocol:
        - binary: true
          detect: true
          len: 123.45
          name: string
          payload: true
          regex: string
        tags:
        - key: string
          value: string
    CriblLib:
      type: string
      enum:
      - cribl
      - cribl-custom
      - custom
      example: cribl
    AppscopeLibEntry:
      type: object
      properties:
        config:
          $ref: "#/components/schemas/AppscopeConfigWithCustom"
        description:
          type: string
          example: string
        id:
          type: string
          example: string
        lib:
          $ref: "#/components/schemas/CriblLib"
        tags:
          type: string
          example: string
      required:
      - config
      - description
      - id
      - lib
      example:
        description: string
        id: string
        tags: string
    GrokFile:
      type: object
      properties:
        content:
          type: string
          example: string
        id:
          type: string
          example: string
        size:
          type: number
          example: 123.45
        tags:
          type: string
          example: string
      required:
      - content
      - id
      - size
      example:
        content: string
        id: string
        size: 123.45
        tags: string
    LookupFile:
      type: object
      required:
      - id
      properties:
        id:
          title: Filename
          type: string
          pattern: ^\w[\w -]+(?:\.csv|\.gz|\.csv\.gz|\.mmdb)?$
          example: string
        description:
          type: string
          title: Description
          example: string
        tags:
          type: string
          title: Tags
          description: One or more tags related to this lookup. Optional.
          example: string
        version:
          type: string
          description: Unique string generated for each modification of this lookup
          readOnly: true
          example: string
        content:
          type: string
          description: File content.
          example: string
        mode:
          type: string
          title: Mode
          default: memory
          enum:
          - memory
          - disk
          example: memory
        pendingTask:
          type: object
          readOnly: true
          properties:
            id:
              type: string
              description: Task ID (generated).
              readOnly: true
              example: string
            type:
              type: string
              description: Task type
              enum:
              - IMPORT
              - INDEX
              readOnly: true
              example: IMPORT
            error:
              type: string
              description: Error message if task has failed
              readOnly: true
              example: string
          example:
            id: string
            type: IMPORT
            error: string
      example:
        id: string
        description: string
        tags: string
        version: string
        content: string
        mode: memory
        pendingTask:
          id: string
          type: IMPORT
          error: string
    LookupFileInfoResponse:
      type: object
      properties:
        filename:
          type: string
          example: string
        rows:
          type: number
          example: 123.45
        size:
          type: number
          example: 123.45
      required:
      - filename
      - rows
      - size
      example:
        filename: string
        rows: 123.45
        size: 123.45
    ParserLibEntry:
      type: object
      additionalProperties: false
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: ID
          example: string
        lib:
          type: string
          title: Library
          example: string
        description:
          type: string
          title: Description
          example: string
        tags:
          type: string
          title: Tags
          description: Optionally, add tags that you can use for filtering
          example: string
        type:
          title: Type
          description: Parser or formatter type to use
          type: string
          enum:
          - csv
          - elff
          - clf
          - kvp
          - json
          - delim
          - regex
          - grok
          default: csv
          example: csv
      example:
        id: string
        lib: string
        description: string
        tags: string
        type: csv
    ProtobufEncodingConfig:
      type: object
      properties:
        eventModel:
          type: string
          example: string
        id:
          type: string
          example: string
        name:
          type: string
          example: string
        wrapping:
          type: object
          properties:
            wrapperField:
              type: string
              example: string
            wrapperFieldType:
              type: string
              enum:
              - single
              - array
              example: single
            wrapperModel:
              type: string
              example: string
          required:
          - wrapperField
          - wrapperFieldType
          - wrapperModel
          example:
            wrapperField: string
            wrapperFieldType: single
            wrapperModel: string
      required:
      - eventModel
      - id
      - name
      example:
        eventModel: string
        id: string
        name: string
        wrapping:
          wrapperField: string
          wrapperFieldType: single
          wrapperModel: string
    ProtobufBytesConversion:
      type: string
      enum:
      - buffer
      - array
      - string
      example: buffer
    ProtobufEnumConversion:
      type: string
      enum:
      - string
      - number
      example: string
    ProtobufLongConversion:
      type: string
      enum:
      - number
      - string
      - object
      example: number
    ProtobufLibraryConversionConfig:
      type: object
      properties:
        arrays:
          type: boolean
          example: true
        bytes:
          $ref: "#/components/schemas/ProtobufBytesConversion"
        defaults:
          type: boolean
          example: true
        enums:
          $ref: "#/components/schemas/ProtobufEnumConversion"
        json:
          type: boolean
          example: true
        longs:
          $ref: "#/components/schemas/ProtobufLongConversion"
        objects:
          type: boolean
          example: true
        oneofs:
          type: boolean
          example: true
      example:
        arrays: true
        defaults: true
        json: true
        objects: true
        oneofs: true
    ProtobufLibraryConfig:
      type: object
      properties:
        availableEncodings:
          type: array
          items:
            $ref: "#/components/schemas/ProtobufEncodingConfig"
          example:
          - 
        conversion:
          $ref: "#/components/schemas/ProtobufLibraryConversionConfig"
        dependsOn:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        description:
          type: string
          example: string
        id:
          type: string
          example: string
        name:
          type: string
          example: string
        tags:
          type: string
          example: string
      required:
      - dependsOn
      - description
      - id
      - name
      example:
        availableEncodings:
        - 
        dependsOn:
        - string
        description: string
        id: string
        name: string
        tags: string
    RegexLibEntry:
      type: object
      additionalProperties: false
      required:
      - id
      - regex
      properties:
        id:
          type: string
          title: ID
          example: test_id
        lib:
          type: string
          title: Library
          example: custom
        description:
          type: string
          title: Description
          example: "A sample regex"
        regex:
          type: string
          title: Regex pattern
          example: "/\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b/"
        sampleData:
          type: string
          title: Sample data
          description: Optionally, paste in sample data to match against this regex
          maxLength: 4096
          example: "192.168.1.1, 10.0.0.1, 172.16.0.1"
        tags:
          type: string
          title: Tags
          example: "test"
      example:
        id: string
        lib: string
        description: string
        regex: string
        sampleData: string
        tags: string
    DataSample:
      type: object
      additionalProperties: true
      required:
      - id
      - sampleName
      properties:
        id:
          type: string
          title: ID
          example: string
        sampleName:
          type: string
          title: File name
          example: string
        pipelineId:
          type: string
          title: Associate with Pipeline
          description: Select a pipeline to associate with sample with. Select GLOBAL if not sure. Deprecated.
          example: string
        description:
          type: string
          title: Description
          description: Brief description of this sample file. Optional.
          example: string
        ttl:
          type: number
          title: Expiration (hours)
          description: Time to live (TTL) for the sample; reset after each use. Leave empty to never expire.
          example: 123.45
        tags:
          type: string
          title: Tags
          description: One or more tags related to this sample file. Optional.
          example: string
      example:
        id: string
        sampleName: string
        pipelineId: string
        description: string
        ttl: 123.45
        tags: string
        additionalProp1: string
    SampleContent:
      type: array
      items:
        type: object
        additionalProperties: true
        example:
          additionalProp1: string
      example:
      - additionalProp1: string
    DashboardLayout:
      type: object
      properties:
        h:
          type: number
          example: 123.45
        w:
          type: number
          example: 123.45
        x:
          type: number
          example: 123.45
        y:
          type: number
          example: 123.45
      required:
      - h
      - w
      - x
      - y
      example:
        h: 123.45
        w: 123.45
        x: 123.45
        y: 123.45
    SavesSearchRunMode:
      type: string
      enum:
      - newSearch
      - lastRun
      example: newSearch
    SearchQuery:
      oneOf:
      - type: object
        properties:
          query:
            type: string
            example: string
          queryId:
            type: string
            example: string
          runMode:
            $ref: "#/components/schemas/SavesSearchRunMode"
          type:
            type: string
            enum:
            - saved
            example: saved
        required:
        - queryId
        - type
        example:
          query: string
          queryId: string
          type: saved
      - type: object
        properties:
          earliest:
            oneOf:
            - type: string
              nullable: true
              example: string
            - type: number
              nullable: true
              example: 123.45
            example: string
          latest:
            oneOf:
            - type: string
              nullable: true
              example: string
            - type: number
              nullable: true
              example: 123.45
            example: string
          parentSearchId:
            type: string
            example: string
          query:
            oneOf:
            - type: string
              nullable: true
              example: string
            example: string
          sampleRate:
            type: number
            example: 123.45
          timezone:
            type: string
            example: string
          type:
            type: string
            enum:
            - inline
            example: inline
        required:
        - earliest
        - latest
        - query
        - type
        example:
          earliest: string
          latest: string
          parentSearchId: string
          query: string
          sampleRate: 123.45
          timezone: string
          type: inline
      - type: object
        properties:
          type:
            type: string
            enum:
            - values
            example: values
          values:
            type: array
            items:
              type: string
              example: string
            example:
            - string
        required:
        - type
        - values
        example:
          type: values
          values:
          - string
      example:
        query: string
        queryId: string
        type: saved
    DashboardElementType:
      type: string
      enum:
      - chart.line
      - chart.column
      - chart.horizontalBar
      - chart.area
      - chart.scatter
      - chart.pie
      - chart.funnel
      - chart.gauge
      - chart.map
      - list.events
      - list.table
      - counter.single
      - input.timerange
      - input.dropdown
      - input.text
      - input.number
      example: chart.line
    DashboardElementVariant:
      type: string
      enum:
      - visualization
      - input
      - markdown
      example: visualization
    SavedQuerySchedule:
      type: object
      properties:
        cronSchedule:
          type: string
          example: string
        enabled:
          type: boolean
          example: true
        keepLastN:
          type: number
          example: 123.45
        notifications:
          type: object
          properties:
            disabled:
              type: boolean
              example: true
            items:
              type: array
              x-speakeasy-terraform-ignore: true
              items:
                $ref: "#/components/schemas/Notification"
              example:
              - 
          required:
          - disabled
          example:
            disabled: true
            items:
            - 
        resumeMissed:
          type: boolean
          x-speakeasy-terraform-ignore: true
          example: true
        resumeOnBoot:
          type: boolean
          x-speakeasy-terraform-ignore: true
          example: true
        tz:
          type: string
          example: string
      required:
      - cronSchedule
      - enabled
      - keepLastN
      - notifications
      - tz
      example:
        cronSchedule: string
        enabled: true
        keepLastN: 123.45
        notifications:
          disabled: true
          items:
          - 
        resumeMissed: true
        resumeOnBoot: true
        tz: string
    SearchDashboard:
      type: object
      properties:
        cacheTTLSeconds:
          type: number
          example: 123.45
        category:
          type: string
          example: string
        created:
          type: number
          example: 123.45
        createdBy:
          type: string
          example: string
        description:
          type: string
          example: string
        displayCreatedBy:
          type: string
          example: string
        displayModifiedBy:
          type: string
          example: string
        elements:
          type: array
          items:
            oneOf:
            - type: object
              properties:
                description:
                  type: string
                  example: string
                empty:
                  type: boolean
                  example: true
                hidePanel:
                  type: boolean
                  example: true
                horizontalChart:
                  type: boolean
                  example: true
                id:
                  type: string
                  example: string
                index:
                  type: number
                  example: 123.45
                inputId:
                  type: string
                  example: string
                layout:
                  $ref: "#/components/schemas/DashboardLayout"
                search:
                  $ref: "#/components/schemas/SearchQuery"
                title:
                  type: string
                  example: string
                type:
                  $ref: "#/components/schemas/DashboardElementType"
                value:
                  type: object
                  additionalProperties: true
                  example:
                    additionalProp1: string
                variant:
                  $ref: "#/components/schemas/DashboardElementVariant"
              required:
              - id
              - layout
              - search
              - type
              example:
                description: string
                empty: true
                hidePanel: true
                horizontalChart: true
                id: string
                index: 123.45
                inputId: string
                title: string
                value:
                  additionalProp1: string
            - type: object
              properties:
                description:
                  type: string
                  example: string
                empty:
                  type: boolean
                  example: true
                hidePanel:
                  type: boolean
                  example: true
                id:
                  type: string
                  example: string
                index:
                  type: number
                  example: 123.45
                layout:
                  $ref: "#/components/schemas/DashboardLayout"
                title:
                  type: string
                  example: string
                type:
                  type: string
                  enum:
                  - markdown.default
                  example: markdown.default
                value:
                  type: string
                  example: string
                variant:
                  type: string
                  enum:
                  - markdown
                  example: markdown
              required:
              - id
              - layout
              - type
              - variant
              example:
                description: string
                empty: true
                hidePanel: true
                id: string
                index: 123.45
                title: string
                type: markdown.default
                value: string
                variant: markdown
            example:
              description: string
              empty: true
              hidePanel: true
              horizontalChart: true
              id: string
              index: 123.45
              inputId: string
              title: string
              value:
                additionalProp1: string
          example:
          - description: string
            empty: true
            hidePanel: true
            horizontalChart: true
            id: string
            index: 123.45
            inputId: string
            title: string
            value:
              additionalProp1: string
        id:
          type: string
          example: string
        modified:
          type: number
          example: 123.45
        modifiedBy:
          type: string
          example: string
        name:
          type: string
          example: string
        packId:
          type: string
          example: string
        refreshRate:
          type: number
          example: 123.45
        resolvedDatasetIds:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        schedule:
          $ref: "#/components/schemas/SavedQuerySchedule"
      required:
      - created
      - createdBy
      - elements
      - id
      - modified
      - name
      example:
        cacheTTLSeconds: 123.45
        category: string
        created: 123.45
        createdBy: string
        description: string
        displayCreatedBy: string
        displayModifiedBy: string
        elements:
        - description: string
          empty: true
          hidePanel: true
          horizontalChart: true
          id: string
          index: 123.45
          inputId: string
          title: string
          value:
            additionalProp1: string
        id: string
        modified: 123.45
        modifiedBy: string
        name: string
        packId: string
        refreshRate: 123.45
        resolvedDatasetIds:
        - string
    SearchMacro:
      type: object
      properties:
        created:
          type: number
          example: 123.45
        createdBy:
          type: string
          example: string
        description:
          type: string
          example: string
        id:
          type: string
          example: string
        modified:
          type: number
          example: 123.45
        replacement:
          type: string
          example: string
        tags:
          type: string
          example: string
      required:
      - id
      - replacement
      example:
        created: 123.45
        createdBy: string
        description: string
        id: string
        modified: 123.45
        replacement: string
        tags: string
    ChartData:
      type: array
      items:
        type: object
        example: {}
      example:
      - {}
    ChartType:
      type: string
      enum:
      - area
      - column
      - events
      - funnel
      - gauge
      - horizontalBar
      - line
      - map
      - pie
      - scatter
      - single
      - table
      example: area
    ChartSeries:
      type: object
      properties:
        color:
          type: string
          example: string
        data:
          $ref: "#/components/schemas/ChartData"
        map:
          type: string
          example: string
        name:
          type: string
          example: string
        type:
          $ref: "#/components/schemas/ChartType"
        yAxisField:
          type: string
          example: string
      required:
      - name
      example:
        color: string
        map: string
        name: string
        yAxisField: string
    ChartConfig:
      type: object
      properties:
        applyThreshold:
          type: boolean
          example: true
        axis:
          type: object
          properties:
            xAxis:
              type: string
              example: string
            yAxis:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            yAxisExcluded:
              type: array
              items:
                type: string
                example: string
              example:
              - string
          example:
            xAxis: string
            yAxis:
            - string
            yAxisExcluded:
            - string
        color:
          type: string
          example: string
        colorPalette:
          type: number
          example: 123.45
        colorPaletteReversed:
          type: boolean
          example: true
        colorThresholds:
          type: object
          properties:
            thresholds:
              type: array
              items:
                type: object
                properties:
                  color:
                    type: string
                    example: string
                  threshold:
                    type: number
                    example: 123.45
                required:
                - color
                - threshold
                example:
                  color: string
                  threshold: 123.45
              example:
              - color: string
                threshold: 123.45
          required:
          - thresholds
          example:
            thresholds:
            - color: string
              threshold: 123.45
        customData:
          type: object
          properties:
            connectNulls:
              type: string
              example: string
            dataFields:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            isPointColor:
              type: boolean
              example: true
            limitToTopN:
              type: number
              example: 123.45
            lines:
              type: boolean
              example: true
            nameField:
              type: string
              example: string
            pointColorPalette:
              type: number
              example: 123.45
            pointColorPaletteReversed:
              type: boolean
              example: true
            pointScale:
              oneOf:
              - type: string
                example: string
              - type: number
                example: 123.45
              example: string
            pointScaleDataField:
              type: string
              example: string
            seriesCount:
              type: number
              example: 123.45
            splitBy:
              type: string
              example: string
            stack:
              type: boolean
              example: true
            summarizeOthers:
              type: boolean
              example: true
            trellis:
              type: boolean
              example: true
          example:
            connectNulls: string
            dataFields:
            - string
            isPointColor: true
            limitToTopN: 123.45
            lines: true
            nameField: string
            pointColorPalette: 123.45
            pointColorPaletteReversed: true
            pointScale: string
            pointScaleDataField: string
            seriesCount: 123.45
            splitBy: string
            stack: true
            summarizeOthers: true
            trellis: true
        decimals:
          type: number
          example: 123.45
        label:
          type: string
          example: string
        legend:
          type: object
          properties:
            position:
              type: string
              example: string
            truncate:
              type: boolean
              example: true
          example:
            position: string
            truncate: true
        mapDetails:
          type: object
          properties:
            latitudeField:
              type: string
              example: string
            longitudeField:
              type: string
              example: string
            mapSourceID:
              type: string
              example: string
            mapType:
              type: string
              example: string
            nameField:
              type: string
              example: string
            pointScale:
              oneOf:
              - type: string
                example: string
              - type: number
                example: 123.45
              example: string
            valueField:
              type: string
              example: string
          example:
            latitudeField: string
            longitudeField: string
            mapSourceID: string
            mapType: string
            nameField: string
            pointScale: string
            valueField: string
        onClickAction:
          type: object
          properties:
            search:
              type: string
              example: string
            selectedDashboardId:
              type: string
              example: string
            selectedInputId:
              type: string
              example: string
            selectedLinkId:
              type: string
              example: string
            selectedTimerangeInputId:
              type: string
              example: string
            type:
              type: string
              example: string
          example:
            search: string
            selectedDashboardId: string
            selectedInputId: string
            selectedLinkId: string
            selectedTimerangeInputId: string
            type: string
        prefix:
          type: string
          example: string
        separator:
          type: boolean
          example: true
        series:
          type: array
          items:
            $ref: "#/components/schemas/ChartSeries"
          example:
          - 
        shouldApplyUserChartSettings:
          type: boolean
          example: true
        style:
          type: boolean
          example: true
        suffix:
          type: string
          example: string
        type:
          type: string
          example: string
        xAxis:
          type: object
          properties:
            dataField:
              type: string
              example: string
            inverse:
              type: boolean
              example: true
            labelInterval:
              type: string
              example: string
            labelOrientation:
              type: number
              example: 123.45
            name:
              type: string
              example: string
            offset:
              type: number
              example: 123.45
            position:
              type: string
              example: string
            type:
              type: string
              example: string
          example:
            dataField: string
            inverse: true
            labelInterval: string
            labelOrientation: 123.45
            name: string
            offset: 123.45
            position: string
            type: string
        yAxis:
          type: object
          properties:
            dataField:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            interval:
              type: number
              example: 123.45
            max:
              type: number
              example: 123.45
            min:
              type: number
              example: 123.45
            position:
              type: string
              example: string
            scale:
              type: string
              example: string
            splitLine:
              type: boolean
              example: true
            type:
              type: string
              example: string
          example:
            dataField:
            - string
            interval: 123.45
            max: 123.45
            min: 123.45
            position: string
            scale: string
            splitLine: true
            type: string
      required:
      - colorPalette
      - type
      example:
        applyThreshold: true
        axis:
          xAxis: string
          yAxis:
          - string
          yAxisExcluded:
          - string
        color: string
        colorPalette: 123.45
        colorPaletteReversed: true
        colorThresholds:
          thresholds:
          - color: string
            threshold: 123.45
        customData:
          connectNulls: string
          dataFields:
          - string
          isPointColor: true
          limitToTopN: 123.45
          lines: true
          nameField: string
          pointColorPalette: 123.45
          pointColorPaletteReversed: true
          pointScale: string
          pointScaleDataField: string
          seriesCount: 123.45
          splitBy: string
          stack: true
          summarizeOthers: true
          trellis: true
        decimals: 123.45
        label: string
        legend:
          position: string
          truncate: true
        mapDetails:
          latitudeField: string
          longitudeField: string
          mapSourceID: string
          mapType: string
          nameField: string
          pointScale: string
          valueField: string
        onClickAction:
          search: string
          selectedDashboardId: string
          selectedInputId: string
          selectedLinkId: string
          selectedTimerangeInputId: string
          type: string
        prefix: string
        separator: true
        series:
        - 
        shouldApplyUserChartSettings: true
        style: true
        suffix: string
        type: string
        xAxis:
          dataField: string
          inverse: true
          labelInterval: string
          labelOrientation: 123.45
          name: string
          offset: 123.45
          position: string
          type: string
        yAxis:
          dataField:
          - string
          interval: 123.45
          max: 123.45
          min: 123.45
          position: string
          scale: string
          splitLine: true
          type: string
    object:
      type: string
      example: string
    SavedQuery:
      type: object
      properties:
        name:
          type: string
          description: Name of the saved query
          example: "test_saved"
        isPrivate:
          type: boolean
          description: Whether the saved query is private
          example: true
        query:
          type: string
          description: The search query string
          example: "dataset=\"cribl_edge_appscope_metrics\" | limit 1000"
        earliest:
          type: string
          description: Earliest time for the search range
          example: "-1h"
        latest:
          type: string
          description: Latest time for the search range
          example: "now"
        description:
          type: string
          description: Description of the saved query
          example: "test saved query"
        schedule:
          $ref: '#/components/schemas/SavedQuerySchedule'
        user:
          type: string
          description: User ID who created the saved query
          example: "google-oauth2|115928590796700585084"
          x-speakeasy-terraform-ignore: true
        displayUsername:
          type: string
          description: Display name of the user
          example: "First Last"
          x-speakeasy-terraform-ignore: true
        id:
          type: string
          description: Unique identifier for the saved query
          example: "test_saved"
      required:
      - id
      - name
      - query
      example:
        name: string
        isPrivate: true
        query: string
        earliest: string
        latest: string
        description: string
        user: string
        displayUsername: string
        id: string
    CPUTimeMetric:
      type: object
      properties:
        billableCPUSeconds:
          type: number
          example: 123.45
        totalCPUSeconds:
          type: number
          example: 123.45
        totalExecCPUSeconds:
          type: number
          example: 123.45
      required:
      - totalCPUSeconds
      - totalExecCPUSeconds
      example:
        billableCPUSeconds: 123.45
        totalCPUSeconds: 123.45
        totalExecCPUSeconds: 123.45
    EventBreakerRuleset:
      type: object
      additionalProperties: false
      required:
      - id
      properties:
        id:
          type: string
          title: ID
          pattern: ^[a-zA-Z0-9\-_ ]+$
          example: string
        lib:
          type: string
          title: Library
          enum:
          - custom
          - cribl-custom
          default: custom
          example: custom
        description:
          type: string
          title: Description
          example: string
        tags:
          type: string
          title: Tags
          example: string
        minRawLength:
          type: number
          title: Min raw length
          description: The  minimum number of characters in _raw to determine which rule to use
          default: 256
          minimum: 50
          maximum: 100000
          example: 256
        rules:
          type: array
          title: Rules
          description: A list of rules that will be applied, in order, to the input data stream
          items:
            type: object
            required:
            - name
            - type
            - condition
            - timestampAnchorRegex
            - timestamp
            properties:
              name:
                type: string
                title: Name
                example: string
              condition:
                type: string
                title: Filter condition
                description: JavaScript expression applied to the beginning of a file or object, to determine whether the rule applies to all contained events.
                default: "true"
                example: "true"
              type:
                type: string
                title: Event Breaker type
                enum:
                - regex
                - json
                - json_array
                - header
                - timestamp
                - csv
                - aws_cloudtrail
                - aws_vpcflow
                default: regex
                example: regex
              timestampAnchorRegex:
                type: string
                title: Timestamp anchor
                description: The regex to match before attempting timestamp extraction. Use $ (end-of-string anchor) to prevent extraction.
                default: /^/
                example: /^/
              eventBreakerRegex:
                type: string
                title: Event breaker regex
                description: The regex to match before attempting event breaker extraction. Use $ (end-of-string anchor) to prevent extraction.
                default: /[\\n\\r]+(?!\\s)/
                example: /[\\n\\r]+(?!\\s)/
              timestamp:
                type: object
                required:
                - type
                title: Timestamp format
                description: Auto, manual format (strptime), or current time
                properties:
                  type:
                    type: string
                    title: Timestamp type
                    default: auto
                    enum:
                    - auto
                    - format
                    - current
                    example: auto
                  length:
                    type: number
                    title: Length
                    minimum: 2
                    default: 150
                    example: 150
                  format:
                    type: string
                    title: Format
                    example: string
                example:
                  type: auto
                  length: 150
                  format: string
              timestampTimezone:
                type: string
                title: Default timezone
                description: Timezone to assign to timestamps without timezone info
                default: local
                example: local
              timestampEarliest:
                title: Earliest timestamp allowed
                description: "The earliest timestamp value allowed relative to now. Example: -42years. Parsed values prior to this date will be set to current time."
                type: string
                default: -420weeks
                example: -420weeks
              timestampLatest:
                title: Future timestamp allowed
                description: "The latest timestamp value allowed relative to now. Example: +42days. Parsed values after this date will be set to current time."
                type: string
                default: +1week
                example: +1week
              maxEventBytes:
                type: number
                title: Max event bytes
                description: The maximum number of bytes in an event before it is flushed to the pipelines
                default: 51200
                minimum: 1
                maximum: 134217728
                example: 51200
              fields:
                title: Fields
                description: Key-value pairs to be added to each event
                type: array
                items:
                  type: object
                  required:
                  - value
                  properties:
                    name:
                      type: string
                      title: Name
                      example: string
                    value:
                      type: string
                      title: Value expression
                      description: The JavaScript expression used to compute the field's value (can be constant)
                      example: string
                  example:
                    name: string
                    value: string
                example:
                - name: string
                  value: string
              disabled:
                title: Disabled
                type: boolean
                default: false
                description: Disable this breaker rule (enabled by default)
                example: false
              parserEnabled:
                title: Parser
                type: boolean
                default: false
                example: false
              shouldUseDataRaw:
                title: Data _raw
                type: boolean
                default: false
                description: Enable to set an internal field on events indicating that the field in the data called _raw should be used. This can be useful for post processors that want to use that field for event._raw, instead of replacing it with the actual raw event.
                example: false
            example:
              name: string
              condition: "true"
              type: regex
              timestampAnchorRegex: /^/
              eventBreakerRegex: /[\\n\\r]+(?!\\s)/
              timestamp:
                type: auto
                length: 150
                format: string
              timestampTimezone: local
              timestampEarliest: -420weeks
              timestampLatest: +1week
              maxEventBytes: 51200
              fields:
              - name: string
                value: string
              disabled: false
              parserEnabled: false
              shouldUseDataRaw: false
          example:
          - name: string
            condition: "true"
            type: regex
            timestampAnchorRegex: /^/
            eventBreakerRegex: /[\\n\\r]+(?!\\s)/
            timestamp:
              type: auto
              length: 150
              format: string
            timestampTimezone: local
            timestampEarliest: -420weeks
            timestampLatest: +1week
            maxEventBytes: 51200
            fields:
            - name: string
              value: string
            disabled: false
            parserEnabled: false
            shouldUseDataRaw: false
      example:
        id: string
        lib: custom
        description: string
        tags: string
        minRawLength: 256
        rules:
        - name: string
          condition: "true"
          type: regex
          timestampAnchorRegex: /^/
          eventBreakerRegex: /[\\n\\r]+(?!\\s)/
          timestamp:
            type: auto
            length: 150
            format: string
          timestampTimezone: local
          timestampEarliest: -420weeks
          timestampLatest: +1week
          maxEventBytes: 51200
          fields:
          - name: string
            value: string
          disabled: false
          parserEnabled: false
          shouldUseDataRaw: false
    DatatypeOverrides:
      type: object
      properties:
        breakerRulesets:
          type: array
          items:
            $ref: "#/components/schemas/EventBreakerRuleset"
          example:
          - 
        disableBreakers:
          type: boolean
          example: true
      required:
      - disableBreakers
      example:
        breakerRulesets:
        - 
        disableBreakers: true
    SearchJobErrorStateConfig:
      type: object
      properties:
        coordinated:
          type: boolean
          example: true
        errorMessages:
          type: array
          items:
            type: string
            example: string
          example:
          - string
      required:
      - coordinated
      - errorMessages
      example:
        coordinated: true
        errorMessages:
        - string
    SearchJobMetadata:
      type: object
      properties: {}
      example: {}
    SearchParameterValue:
      oneOf:
      - type: string
        example: string
      - type: number
        example: 123.45
      - type: boolean
        example: true
      example: string
    SearchParameterType:
      type: string
      enum:
      - string
      - number
      - boolean
      example: string
    SearchParameter:
      type: object
      properties:
        defaultValue:
          $ref: "#/components/schemas/SearchParameterValue"
        name:
          type: string
          example: string
        type:
          $ref: "#/components/schemas/SearchParameterType"
      required:
      - name
      - type
      example:
        name: string
    SearchParameters:
      example: string
    CacheStatusByDatasetId:
      example: string
    StageId:
      type: string
      example: string
    StageDependencyType:
      type: string
      enum:
      - stage
      - stage-scalar
      example: stage
    StageDependency:
      type: object
      properties:
        dependentFields:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        id:
          $ref: "#/components/schemas/StageId"
        type:
          $ref: "#/components/schemas/StageDependencyType"
      required:
      - id
      - type
      example:
        dependentFields:
        - string
    JobExecutionWarning:
      type: object
      properties:
        text:
          type: string
          example: string
        type:
          type: string
          example: string
      required:
      - type
      example:
        text: string
        type: string
    SearchTerm:
      type: object
      properties:
        isCaseSensitive:
          type: boolean
          example: true
        term:
          type: string
          example: string
      required:
      - isCaseSensitive
      - term
      example:
        isCaseSensitive: true
        term: string
    SortByField:
      type: object
      properties:
        direction:
          type: string
          enum:
          - ascending
          - descending
          example: ascending
        fieldName:
          type: string
          example: string
        nullPosition:
          type: string
          enum:
          - nullsFirst
          - nullsLast
          example: nullsFirst
      required:
      - direction
      - fieldName
      - nullPosition
      example:
        direction: ascending
        fieldName: string
        nullPosition: nullsFirst
    SearchConfig:
      type: object
      properties:
        canComputeMetadataDistributively:
          type: boolean
          example: true
        datasets:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        hasSendOperator:
          type: boolean
          example: true
        orderedFieldNames:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        referencedFieldNames:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        searchTerms:
          type: array
          items:
            $ref: "#/components/schemas/SearchTerm"
          example:
          - 
        sortFields:
          type: array
          items:
            $ref: "#/components/schemas/SortByField"
          example:
          - 
        useFormattedVisualization:
          type: boolean
          example: true
      required:
      - datasets
      - hasSendOperator
      - orderedFieldNames
      - searchTerms
      - useFormattedVisualization
      example:
        canComputeMetadataDistributively: true
        datasets:
        - string
        hasSendOperator: true
        orderedFieldNames:
        - string
        referencedFieldNames:
        - string
        searchTerms:
        - 
        sortFields:
        - 
        useFormattedVisualization: true
    SearchJobStageConfig:
      type: object
      properties:
        cacheStatusByDatasetId:
          $ref: "#/components/schemas/CacheStatusByDatasetId"
        dependencies:
          type: array
          items:
            $ref: "#/components/schemas/StageDependency"
          example:
          - 
        earliest:
          oneOf:
          - type: string
            example: string
          - type: number
            example: 123.45
          example: string
        executionWarnings:
          type: array
          items:
            $ref: "#/components/schemas/JobExecutionWarning"
          example:
          - 
        filter:
          type: string
          example: string
        id:
          type: string
          example: string
        latest:
          oneOf:
          - type: string
            example: string
          - type: number
            example: 123.45
          example: string
        resolvedDatasetIds:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        searchConfig:
          $ref: "#/components/schemas/SearchConfig"
        status:
          type: string
          enum:
          - new
          - failed
          - running
          - completed
          - canceled
          - queued
          example: new
        subQueryText:
          type: string
          example: string
      required:
      - dependencies
      - filter
      - id
      - resolvedDatasetIds
      - searchConfig
      - status
      - subQueryText
      example:
        dependencies:
        - 
        earliest: string
        executionWarnings:
        - 
        filter: string
        id: string
        latest: string
        resolvedDatasetIds:
        - string
        status: new
        subQueryText: string
    ColumnSetting:
      example: string
    ColumnFilterSettings:
      type: object
      properties:
        contains:
          $ref: "#/components/schemas/ColumnSetting"
      required:
      - contains
      example: {}
    ColumnFormatSettings:
      type: object
      properties:
        palette:
          $ref: "#/components/schemas/ColumnSetting"
        precision:
          $ref: "#/components/schemas/ColumnSetting"
        prefix:
          $ref: "#/components/schemas/ColumnSetting"
        suffix:
          $ref: "#/components/schemas/ColumnSetting"
      required:
      - palette
      - precision
      - prefix
      - suffix
      example: {}
    ColumnOrderSettings:
      type: object
      properties:
        order:
          $ref: "#/components/schemas/ColumnSetting"
      required:
      - order
      example: {}
    ColumnSortSettings:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/ColumnSetting"
      required:
      - sort
      example: {}
    TableViewSettings:
      type: object
      properties:
        columnFilterSettings:
          $ref: "#/components/schemas/ColumnFilterSettings"
        columnFormatSettings:
          $ref: "#/components/schemas/ColumnFormatSettings"
        columnOrderSettings:
          $ref: "#/components/schemas/ColumnOrderSettings"
        columnSortSettings:
          $ref: "#/components/schemas/ColumnSortSettings"
        eventDetailsPanel:
          type: boolean
          example: true
        eventTableFields:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        rowNumberColumnWidth:
          type: number
          example: 123.45
        showColumnTotals:
          type: boolean
          example: true
        showColumnTotalsPinned:
          type: boolean
          example: true
        showRowNumbers:
          type: boolean
          example: true
        showRowTotals:
          type: boolean
          example: true
        showRowTotalsPinned:
          type: boolean
          example: true
        wrapCells:
          type: boolean
          example: true
      required:
      - showColumnTotals
      - showColumnTotalsPinned
      - showRowNumbers
      - showRowTotals
      - showRowTotalsPinned
      - wrapCells
      example:
        eventDetailsPanel: true
        eventTableFields:
        - string
        rowNumberColumnWidth: 123.45
        showColumnTotals: true
        showColumnTotalsPinned: true
        showRowNumbers: true
        showRowTotals: true
        showRowTotalsPinned: true
        wrapCells: true
    SearchAuditMetrics:
      type: object
      properties:
        bytesIn:
          type: number
          example: 123.45
        bytesOut:
          type: number
          example: 123.45
        eventsIn:
          type: number
          example: 123.45
        eventsOut:
          type: number
          example: 123.45
        objects:
          type: object
          properties:
            discovered:
              type: number
              example: 123.45
            scanned:
              type: number
              example: 123.45
            skipped:
              type: number
              example: 123.45
          required:
          - discovered
          - scanned
          - skipped
          example:
            discovered: 123.45
            scanned: 123.45
            skipped: 123.45
        time:
          type: object
          properties:
            queuedSec:
              type: number
              example: 123.45
            runningSec:
              type: number
              example: 123.45
            taskCompletionTotalSec:
              type: number
              example: 123.45
            taskReceivingTotalSec:
              type: number
              example: 123.45
          required:
          - queuedSec
          - runningSec
          - taskCompletionTotalSec
          - taskReceivingTotalSec
          example:
            queuedSec: 123.45
            runningSec: 123.45
            taskCompletionTotalSec: 123.45
            taskReceivingTotalSec: 123.45
      required:
      - bytesIn
      - bytesOut
      - eventsIn
      - eventsOut
      - objects
      - time
      example:
        bytesIn: 123.45
        bytesOut: 123.45
        eventsIn: 123.45
        eventsOut: 123.45
        objects:
          discovered: 123.45
          scanned: 123.45
          skipped: 123.45
        time:
          queuedSec: 123.45
          runningSec: 123.45
          taskCompletionTotalSec: 123.45
          taskReceivingTotalSec: 123.45
    SearchJob:
      type: object
      properties:
        accelerated:
          type: boolean
          example: true
        aliasOfOriginalJobId:
          type: string
          example: string
        compatibilityChecks:
          type: object
          properties:
            datatypes:
              type: boolean
              example: true
            stageIds:
              type: array
              items:
                type: string
                example: string
              example:
              - string
          example:
            datatypes: true
            stageIds:
            - string
        completionInfo:
          type: string
          example: string
        context:
          type: string
          example: string
        correlationId:
          type: string
          example: string
        cpuMetrics:
          $ref: "#/components/schemas/CPUTimeMetric"
        datatypeOverrides:
          $ref: "#/components/schemas/DatatypeOverrides"
        disableNotifications:
          type: boolean
          example: true
        displayUsername:
          type: string
          example: string
        earliest:
          oneOf:
          - type: string
            example: string
          - type: number
            example: 123.45
          example: string
        earliestEpoch:
          type: number
          example: 123.45
        errorStateConfig:
          $ref: "#/components/schemas/SearchJobErrorStateConfig"
        group:
          type: string
          example: string
        id:
          type: string
          example: string
        isPrivate:
          type: boolean
          example: true
        latest:
          oneOf:
          - type: string
            example: string
          - type: number
            example: 123.45
          example: string
        latestEpoch:
          type: number
          example: 123.45
        metadata:
          $ref: "#/components/schemas/SearchJobMetadata"
        numEventsAfter:
          type: number
          example: 123.45
        numEventsBefore:
          type: number
          example: 123.45
        query:
          type: string
          example: string
        queryWithMacrosResolved:
          type: string
          example: string
        sampleRate:
          type: number
          example: 123.45
        savedQueryName:
          type: string
          example: string
        searchParameterDeclarations:
          type: array
          items:
            $ref: "#/components/schemas/SearchParameter"
          example:
          - 
        searchParameterValues:
          $ref: "#/components/schemas/SearchParameters"
        stages:
          type: array
          items:
            $ref: "#/components/schemas/SearchJobStageConfig"
          example:
          - 
        status:
          type: string
          enum:
          - new
          - failed
          - running
          - completed
          - canceled
          - queued
          example: new
        tableConfig:
          $ref: "#/components/schemas/TableViewSettings"
        targetEventTime:
          type: number
          example: 123.45
        timeCompleted:
          type: number
          example: 123.45
        timeCreated:
          type: number
          example: 123.45
        timeStarted:
          type: number
          example: 123.45
        timeToFirstByte:
          type: number
          example: 123.45
        totalBytesScanned:
          type: number
          example: 123.45
        totalEventCount:
          type: number
          example: 123.45
        type:
          type: string
          enum:
          - command
          - standard
          - datatypePreview
          - scheduled
          - dashboard
          example: command
        usageGroupId:
          type: string
          example: string
        usageMetrics:
          $ref: "#/components/schemas/SearchAuditMetrics"
        user:
          type: string
          example: string
      required:
      - displayUsername
      - group
      - id
      - query
      - status
      - timeCreated
      - timeStarted
      - user
      example:
        accelerated: true
        aliasOfOriginalJobId: string
        compatibilityChecks:
          datatypes: true
          stageIds:
          - string
        completionInfo: string
        context: string
        correlationId: string
        disableNotifications: true
        displayUsername: string
        earliest: string
        earliestEpoch: 123.45
        group: string
        id: string
        isPrivate: true
        latest: string
        latestEpoch: 123.45
        numEventsAfter: 123.45
        numEventsBefore: 123.45
        query: string
        queryWithMacrosResolved: string
        sampleRate: 123.45
        savedQueryName: string
        searchParameterDeclarations:
        - 
        stages:
        - 
        status: new
        targetEventTime: 123.45
        timeCompleted: 123.45
        timeCreated: 123.45
        timeStarted: 123.45
        timeToFirstByte: 123.45
        totalBytesScanned: 123.45
        totalEventCount: 123.45
        type: command
        usageGroupId: string
        user: string
    DatabaseConnectionType:
      type: string
      enum:
      - mysql
      - oracle
      - postgres
      - sqlserver
      example: mysql
    DatabaseConnectionConfig:
      type: object
      properties:
        authType:
          type: string
          example: string
        configObj:
          type: string
          example: string
        connectionString:
          type: string
          example: string
        connectionTimeout:
          type: number
          example: 123.45
        databaseType:
          $ref: "#/components/schemas/DatabaseConnectionType"
        description:
          type: string
          example: string
        id:
          type: string
          example: string
        password:
          type: string
          example: string
        requestTimeout:
          type: number
          example: 123.45
        tags:
          type: string
          example: string
        user:
          type: string
          example: string
      required:
      - authType
      - databaseType
      - description
      - id
      example:
        authType: string
        configObj: string
        connectionString: string
        connectionTimeout: 123.45
        description: string
        id: string
        password: string
        requestTimeout: 123.45
        tags: string
        user: string
    DatabaseConnectionTestResult:
      type: object
      properties:
        errorMsg:
          type: string
          example: string
        success:
          type: boolean
          example: true
      required:
      - success
      example:
        errorMsg: string
        success: true
    DatabaseConnectionTest:
      type: object
      properties:
        authType:
          type: string
          example: string
        configObj:
          type: string
          example: string
        connectionString:
          type: string
          example: string
        connectionTimeout:
          type: number
          example: 123.45
        databaseType:
          type: string
          example: string
        password:
          type: string
          example: string
        textSecret:
          type: string
          example: string
        user:
          type: string
          example: string
      required:
      - authType
      - databaseType
      example:
        authType: string
        configObj: string
        connectionString: string
        connectionTimeout: 123.45
        databaseType: string
        password: string
        textSecret: string
        user: string
    GlobalVar:
      type: object
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Name
          pattern: ^[a-zA-Z0-9_-]+$
          description: Global variable name.
          example: "test_var"
        lib:
          type: string
          title: Library
          example: "custom"
        description:
          type: string
          title: Description
          description: Brief description of this variable. Optional.
          example: "This is a test var."
        type:
          type: string
          title: Type
          enum:
          - string
          - number
          - encryptedString
          - boolean
          - array
          - object
          - expression
          - any
          default: any
          description: Type of variable
          example: number
        value:
          type: string
          title: Value
          description: Value of variable
          example: 100
        tags:
          type: string
          title: Tags
          description: One or more tags related to this variable. Optional.
          example: "test"
      example:
        id: string
        lib: string
        description: string
        type: any
        value: string
        tags: string
    HmacFunction:
      type: object
      properties:
        description:
          type: string
          example: string
        headerExpression:
          type: string
          example: string
        headerName:
          type: string
          example: string
        id:
          type: string
          example: string
        lib:
          $ref: "#/components/schemas/CriblLib"
        stringBuilders:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        stringDelim:
          type: string
          example: string
      required:
      - headerExpression
      - headerName
      - id
      - lib
      - stringBuilders
      example:
        description: string
        headerExpression: string
        headerName: string
        id: string
        stringBuilders:
        - string
        stringDelim: string
    InputCollection:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - collection
          default: collection
          example: collection
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process results
          example: string
        sendToRoutes:
          type: boolean
          default: true
          title: Send to Routes
          description: Send events to normal routing and event processing. Disable to select a specific Pipeline/Destination combination.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id019 []
          items:
            type: string
            example: string
          example: *id019
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        preprocess:
          type: object
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
              example: string
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
                example: string
              example:
              - string
          example:
            disabled: true
            command: string
            args:
            - string
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: "0"
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        output:
          type: string
          title: Destination
          description: Destination to send results to
          example: string
      type: object
      example:
        id: string
        type: collection
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id019
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        preprocess:
          disabled: true
          command: string
          args:
          - string
        throttleRatePerSec: "0"
        metadata:
        - name: string
          value: string
        output: string
    InputKafka:
      required:
      - brokers
      - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - kafka
          example: kafka
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id020 []
          items:
            type: string
            example: string
          example: *id020
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify the hostname and port (such as mykafkabroker:9092) or just the hostname (in which case @{product} will assign port 9092).
          minItems: 1
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Kafka Source to a single topic only."
          minItems: 1
          default: &id021 []
          items:
            type: string
            minLength: 1
            example: string
          example: *id021
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          example: Cribl
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave enabled if you want the Source, upon first subscribing to a topic, to read starting with the earliest available message
          example: true
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
              example: http://localhost:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
              example: 1
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
              - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
                  example: string
              example:
                disabled: true
                credentialsSecret: string
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: >-
                    Reject certificates that are not authorized by a CA in the
                    CA certificate path, or by another 
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                  example: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                  example: string
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                  example: string
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                  example: string
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                  example: string
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                  example: string
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                  example: string
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
                  - TLSv1.3
                  example: TLSv1
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
                  - TLSv1.3
                  example: TLSv1
              example:
                disabled: true
                rejectUnauthorized: true
                servername: string
                certificateName: string
                caPath: string
                privKeyPath: string
                certPath: string
                passphrase: string
                minVersion: TLSv1
                maxVersion: TLSv1
          example:
            disabled: true
            schemaRegistryURL: http://localhost:8081
            connectionTimeout: 30000
            requestTimeout: 30000
            maxRetries: 1
            auth:
              disabled: true
              credentialsSecret: string
            tls:
              disabled: true
              rejectUnauthorized: true
              servername: string
              certificateName: string
              caPath: string
              privKeyPath: string
              certPath: string
              passphrase: string
              minVersion: TLSv1
              maxVersion: TLSv1
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 5
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 30000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 300
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
          example: 2
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 10000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            mechanism:
              type: string
              default: plain
              enum:
              - plain
              - scram-sha-256
              - scram-sha-512
              - kerberos
              title: SASL mechanism
              example: plain
          example:
            disabled: true
            mechanism: plain
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: >2-

                  Timeout used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires, 
                  the broker will remove the client from the group and initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details.
          default: 30000
          minimum: 1000
          maximum: 3600000
          example: 30000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: >2-

                  Maximum allowed time for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: >2-

                  Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
          default: 3000
          minimum: 1000
          maximum: 3600000
          example: 3000
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1000
          maximum: 3600000
          example: 123.45
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1
          maximum: 10000
          example: 123.45
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
          example: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
          example: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a socket
          minimum: 0
          maximum: 100
          default: 0
          example: 0
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: kafka
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id020
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        brokers:
        - string
        topics: *id021
        groupId: Cribl
        fromBeginning: true
        kafkaSchemaRegistry:
          disabled: true
          schemaRegistryURL: http://localhost:8081
          connectionTimeout: 30000
          requestTimeout: 30000
          maxRetries: 1
          auth:
            disabled: true
            credentialsSecret: string
          tls:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        connectionTimeout: 10000
        requestTimeout: 60000
        maxRetries: 5
        maxBackOff: 30000
        initialBackoff: 300
        backoffRate: 2
        authenticationTimeout: 10000
        reauthenticationThreshold: 10000
        sasl:
          disabled: true
          mechanism: plain
        tls:
          disabled: true
          rejectUnauthorized: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        sessionTimeout: 30000
        rebalanceTimeout: 60000
        heartbeatInterval: 3000
        autoCommitInterval: 123.45
        autoCommitThreshold: 123.45
        maxBytesPerPartition: 1048576
        maxBytes: 10485760
        maxSocketErrors: 0
        metadata:
        - name: string
          value: string
        description: string
    InputMsk:
      required:
      - brokers
      - topics
      - region
      - awsAuthenticationMethod
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - msk
          example: msk
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id022 []
          items:
            type: string
            example: string
          example: *id022
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify the hostname and port (such as mykafkabroker:9092) or just the hostname (in which case @{product} will assign port 9092).
          minItems: 1
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Kafka Source to a single topic only."
          minItems: 1
          default: &id023 []
          items:
            type: string
            minLength: 1
            example: string
          example: *id023
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          example: Cribl
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave enabled if you want the Source, upon first subscribing to a topic, to read starting with the earliest available message
          example: true
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: >2-

                  Timeout used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires, 
                  the broker will remove the client from the group and initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details.
          default: 30000
          minimum: 1000
          maximum: 3600000
          example: 30000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: >2-

                  Maximum allowed time for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: >2-

                  Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
          default: 3000
          minimum: 1000
          maximum: 3600000
          example: 3000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
              example: http://localhost:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
              example: 1
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
              - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
                  example: string
              example:
                disabled: true
                credentialsSecret: string
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: >-
                    Reject certificates that are not authorized by a CA in the
                    CA certificate path, or by another 
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                  example: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                  example: string
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                  example: string
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                  example: string
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                  example: string
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                  example: string
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                  example: string
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
                  - TLSv1.3
                  example: TLSv1
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
                  - TLSv1.3
                  example: TLSv1
              example:
                disabled: true
                rejectUnauthorized: true
                servername: string
                certificateName: string
                caPath: string
                privKeyPath: string
                certPath: string
                passphrase: string
                minVersion: TLSv1
                maxVersion: TLSv1
          example:
            disabled: true
            schemaRegistryURL: http://localhost:8081
            connectionTimeout: 30000
            requestTimeout: 30000
            maxRetries: 1
            auth:
              disabled: true
              credentialsSecret: string
            tls:
              disabled: true
              rejectUnauthorized: true
              servername: string
              certificateName: string
              caPath: string
              privKeyPath: string
              certPath: string
              passphrase: string
              minVersion: TLSv1
              maxVersion: TLSv1
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 5
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 30000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 300
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
          example: 2
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 10000
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: Region where the MSK cluster is located
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: MSK cluster service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to MSK cluster-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MSK cluster requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for MSK
          description: Use Assume Role credentials to access MSK
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: false
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1000
          maximum: 3600000
          example: 123.45
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1
          maximum: 10000
          example: 123.45
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
          example: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
          example: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a socket
          minimum: 0
          maximum: 100
          default: 0
          example: 0
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
      type: object
      example:
        id: string
        type: msk
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id022
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        brokers:
        - string
        topics: *id023
        groupId: Cribl
        fromBeginning: true
        sessionTimeout: 30000
        rebalanceTimeout: 60000
        heartbeatInterval: 3000
        metadata:
        - name: string
          value: string
        kafkaSchemaRegistry:
          disabled: true
          schemaRegistryURL: http://localhost:8081
          connectionTimeout: 30000
          requestTimeout: 30000
          maxRetries: 1
          auth:
            disabled: true
            credentialsSecret: string
          tls:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        connectionTimeout: 10000
        requestTimeout: 60000
        maxRetries: 5
        maxBackOff: 30000
        initialBackoff: 300
        backoffRate: 2
        authenticationTimeout: 10000
        reauthenticationThreshold: 10000
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        tls:
          disabled: false
          rejectUnauthorized: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        autoCommitInterval: 123.45
        autoCommitThreshold: 123.45
        maxBytesPerPartition: 1048576
        maxBytes: 10485760
        maxSocketErrors: 0
        description: string
        awsApiKey: string
        awsSecret: string
    InputHttp:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - http
          example: http
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id024 []
          items:
            type: string
            example: string
          example: *id024
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
            example: string
          example:
          - string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 5
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        criblAPI:
          type: string
          title: Cribl HTTP event API
          description: Absolute path on which to listen for the Cribl HTTP API requests. Only _bulk (default /cribl/_bulk) is available. Use empty string to disable.
          default: /cribl
          pattern: ^/|^$
          example: /cribl
        elasticAPI:
          type: string
          title: Elasticsearch API endpoint (Bulk API)
          description: Absolute path on which to listen for the Elasticsearch API requests. Only _bulk (default /elastic/_bulk) is available. Use empty string to disable.
          default: /elastic
          pattern: ^/|^$
          example: /elastic
        splunkHecAPI:
          type: string
          title: Splunk HEC endpoint
          description: Absolute path on which listen for the Splunk HTTP Event Collector API requests. Use empty string to disable.
          default: /services/collector
          pattern: ^/|^$
          example: /services/collector
        splunkHecAcks:
          type: boolean
          title: Enable Splunk HEC acknowledgements
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        authTokensExt:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
            - token
            properties:
              token:
                type: string
                title: Token
                description: "Shared secret to be provided by any client (Authorization: <token>)"
                example: string
              description:
                type: string
                title: Description
                example: string
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                  - name
                  - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                      example: string
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                      example: string
                  example:
                    name: string
                    value: string
                example:
                - name: string
                  value: string
            example:
              token: string
              description: string
              metadata:
              - name: string
                value: string
          example:
          - token: string
            description: string
            metadata:
            - name: string
              value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: http
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id024
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        authTokens:
        - string
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        activityLogSampleRate: 100
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 5
        enableHealthCheck: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        criblAPI: /cribl
        elasticAPI: /elastic
        splunkHecAPI: /services/collector
        splunkHecAcks: false
        metadata:
        - name: string
          value: string
        authTokensExt:
        - token: string
          description: string
          metadata:
          - name: string
            value: string
        description: string
    InputSplunk:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - splunk
          example: splunk
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id025 []
          items:
            type: string
            example: string
          example: *id025
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a connection
          default: /.*/
          example: /.*/
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 1000
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
          example: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
          example: 30
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        authTokens:
          type: array
          title: Auth tokens
          description: Shared secrets to be provided by any Splunk forwarder. If empty, unauthorized access is permitted.
          items:
            type: object
            required:
            - token
            properties:
              token:
                type: string
                title: Token
                description: Shared secrets to be provided by any Splunk forwarder. If empty, unauthorized access is permitted.
                example: string
              description:
                type: string
                title: Description
                example: string
            example:
              token: string
              description: string
          example:
          - token: string
            description: string
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake
          enum:
          - v3
          - v4
          default: v3
          example: v3
        description:
          type: string
          title: Description
          example: string
        useFwdTimezone:
          type: boolean
          title: Use Universal Forwarder time zone
          default: true
          description: Event Breakers will determine events' time zone from UF-provided metadata, when TZ can't be inferred from the raw event
          example: true
        dropControlFields:
          type: boolean
          title: Drop control fields
          description: Drop Splunk control fields such as `crcSalt` and `_savedPort`. If disabled, control fields are stored in the internal field `__ctrlFields`.
          default: true
          example: true
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Extract and process Splunk-generated metrics as Cribl metrics
          default: false
          example: false
        compress:
          type: string
          title: Compression
          description: Controls whether to support reading compressed data from a forwarder. Select 'Automatic' to match the forwarder's configuration, or 'Disabled' to reject compressed connections.
          default: disabled
          enum:
          - disabled
          - auto
          - always
          example: disabled
      type: object
      example:
        id: string
        type: splunk
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id025
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        ipWhitelistRegex: /.*/
        maxActiveCxn: 1000
        socketIdleTimeout: 0
        socketEndingMaxWait: 30
        socketMaxLifespan: 0
        enableProxyHeader: false
        metadata:
        - name: string
          value: string
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        authTokens:
        - token: string
          description: string
        maxS2Sversion: v3
        description: string
        useFwdTimezone: true
        dropControlFields: true
        extractMetrics: false
        compress: disabled
    InputSplunkSearch:
      required:
      - searchHead
      - search
      - cronSchedule
      - endpoint
      - outputMode
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - splunk_search
          example: splunk_search
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id026 []
          items:
            type: string
            example: string
          example: *id026
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        searchHead:
          title: Search head
          type: string
          default: https://localhost:8089
          description: Search head base URL. Can be an expression. Default is https://localhost:8089.
          example: https://localhost:8089
        search:
          type: string
          title: Search
          description: "Enter Splunk search here. Examples: 'index=myAppLogs level=error channel=myApp' OR '| mstats avg(myStat) as myStat WHERE index=myStatsIndex.'"
          example: string
        earliest:
          title: Earliest
          type: string
          description: "The earliest time boundary for the search. Can be an exact or relative time. Examples: '2022-01-14T12:00:00Z' or '-16m@m'"
          default: -16m@m
          example: -16m@m
        latest:
          title: Latest
          type: string
          description: "The latest time boundary for the search. Can be an exact or relative time. Examples: '2022-01-14T12:00:00Z' or '-1m@m'"
          default: -1m@m
          example: -1m@m
        cronSchedule:
          type: string
          title: Cron schedule
          description: A cron schedule on which to run this job
          default: "*/15 * * * *"
          example: "*/15 * * * *"
        endpoint:
          type: string
          title: Search endpoint
          default: /services/search/v2/jobs/export
          description: REST API used to create a search
          example: /services/search/v2/jobs/export
        outputMode:
          type: string
          title: Output mode
          description: Format of the returned output
          enum:
          - csv
          - json
          default: json
          example: json
        endpointParams:
          title: Endpoint parameters
          type: array
          description: Optional request parameters to send to the endpoint
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                title: Parameter Name
                type: string
                example: string
              value:
                title: Value
                type: string
                description: JavaScript expression to compute the parameter's value, normally enclosed in backticks (e.g., `${earliest}`). If a constant, use single quotes (e.g., 'earliest'). Values without delimiters (e.g., earliest) are evaluated as strings.
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        endpointHeaders:
          title: Endpoint headers
          description: Optional request headers to send to the endpoint
          type: array
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Header Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute the header's value, normally enclosed in backticks (e.g., `${earliest}`). If a constant, use single quotes (e.g., 'earliest'). Values without delimiters (e.g., earliest) are evaluated as strings.
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        logLevel:
          type: string
          title: Log level
          enum:
          - error
          - warn
          - info
          - debug
          description: Collector runtime log level (verbosity)
          example: error
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout. Use 0 for no timeout.
          minimum: 0
          maximum: 2400
          default: 0
          example: 0
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned
          default: false
          example: false
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA (such as self-signed certificates)
          default: false
          example: false
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
          example: string
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
          example: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
          example: "0"
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
          example: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        retryRules:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
              - none
              - backoff
              - static
              default: backoff
              example: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
              example: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
              example: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of HTTP codes that trigger a retry. Leave empty to use the default list of 429 and 503.
              minItems: 1
              default: &id027
              - 429
              - 503
              items:
                type: number
                minLength: 1
                example: 123.45
              example: *id027
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
              example: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
              example: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
              example: false
          example:
            type: backoff
            interval: 1000
            limit: 5
            multiplier: 2
            codes: *id027
            enableHeader: true
            retryConnectTimeout: false
            retryConnectReset: false
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          default: &id028
          - Splunk Search Ruleset
          items:
            type: string
            example: string
          example: *id028
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        authType:
          type: string
          title: Authentication type
          description: Splunk Search authentication type
          enum:
          - none
          - basic
          - credentialsSecret
          - token
          - textSecret
          - oauth
          default: basic
          example: basic
        description:
          type: string
          title: Description
          example: string
        username:
          type: string
          title: Username
          example: string
        password:
          type: string
          title: Password
          example: string
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: string
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: string
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: string
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: string
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
          example: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: string
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: string
              value:
                type: string
                title: Value
                description: OAuth header value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
      type: object
      example:
        id: string
        type: splunk_search
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id026
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        searchHead: https://localhost:8089
        search: string
        earliest: -16m@m
        latest: -1m@m
        cronSchedule: "*/15 * * * *"
        endpoint: /services/search/v2/jobs/export
        outputMode: json
        endpointParams:
        - name: string
          value: string
        endpointHeaders:
        - name: string
          value: string
        logLevel: error
        requestTimeout: 0
        useRoundRobinDns: false
        rejectUnauthorized: false
        encoding: string
        keepAliveTime: 30
        jobTimeout: "0"
        maxMissedKeepAlives: 3
        ttl: 4h
        ignoreGroupJobsLimit: false
        metadata:
        - name: string
          value: string
        retryRules:
          type: backoff
          interval: 1000
          limit: 5
          multiplier: 2
          codes: *id027
          enableHeader: true
          retryConnectTimeout: false
          retryConnectReset: false
        breakerRulesets: *id028
        staleChannelFlushMs: 10000
        authType: basic
        description: string
        username: string
        password: string
        token: string
        credentialsSecret: string
        textSecret: string
        loginUrl: string
        secretParamName: string
        secret: string
        tokenAttributeName: string
        authHeaderExpr: "`Bearer ${token}`"
        tokenTimeoutSecs: 3600
        oauthParams:
        - name: string
          value: string
        oauthHeaders:
        - name: string
          value: string
    InputSplunkHec:
      required:
      - host
      - port
      - splunkHecAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - splunk_hec
          example: splunk_hec
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id029 []
          items:
            type: string
            example: string
          example: *id029
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
            - token
            properties:
              authType:
                title: Authentication method
                type: string
                enum:
                - manual
                - secret
                default: manual
                description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                example: manual
              tokenSecret:
                example: string
              token:
                example: string
              enabled:
                type: boolean
                title: Enable token
                default: true
                example: true
              description:
                type: string
                title: Description
                description: Optional token description
                example: string
              allowedIndexesAtToken:
                type: array
                title: Allowed indexes
                description: Enter the values you want to allow in the HEC event index field at the token level. Supports wildcards. To skip validation, leave blank.
                minItems: 0
                items:
                  type: string
                  minLength: 1
                  example: string
                example:
                - string
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                  - name
                  - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                      example: string
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                      example: string
                  example:
                    name: string
                    value: string
                example:
                - name: string
                  value: string
            example:
              authType: manual
              tokenSecret: string
              token: string
              enabled: true
              description: string
              allowedIndexesAtToken:
              - string
              metadata:
              - name: string
                value: string
          example:
          - authType: manual
            tokenSecret: string
            token: string
            enabled: true
            description: string
            allowedIndexesAtToken:
            - string
            metadata:
            - name: string
              value: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 5
        enableHealthCheck:
          example: string
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        splunkHecAPI:
          type: string
          title: Splunk HEC endpoint
          description: Absolute path on which to listen for the Splunk HTTP Event Collector API requests. This input supports the /event, /raw and /s2s endpoints.
          default: /services/collector
          pattern: ^/
          example: /services/collector
        metadata:
          type: array
          title: Fields
          description: Fields to add to every event. Overrides fields added at the token or request level. See [the Source documentation](https://docs.cribl.io/stream/sources-splunk-hec/#fields) for more info.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        allowedIndexes:
          type: array
          title: Allowed indexes
          description: List values allowed in HEC event index field. Leave blank to skip validation. Supports wildcards. The values here can expand index validation at the token level.
          minItems: 0
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        splunkHecAcks:
          type: boolean
          title: Splunk HEC acks
          description: Enable Splunk HEC acknowledgements
          default: false
          example: false
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        useFwdTimezone:
          type: boolean
          title: Use Universal Forwarder time zone (S2S only)
          default: true
          description: Event Breakers will determine events' time zone from UF-provided metadata, when TZ can't be inferred from the raw event
          example: true
        dropControlFields:
          type: boolean
          title: Drop control fields (S2S only)
          description: Drop Splunk control fields such as `crcSalt` and `_savedPort`. If disabled, control fields are stored in the internal field `__ctrlFields`.
          default: true
          example: true
        extractMetrics:
          type: boolean
          title: Extract metrics (S2S only)
          description: Extract and process Splunk-generated metrics as Cribl metrics
          default: false
          example: false
        accessControlAllowOrigin:
          title: CORS allowed origins
          type: array
          description: Optionally, list HTTP origins to which @{product} should send CORS (cross-origin resource sharing) Access-Control-Allow-* headers. Supports wildcards.
          minItems: 0
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        accessControlAllowHeaders:
          title: CORS allowed headers
          type: array
          description: Optionally, list HTTP headers that @{product} will send to allowed origins as "Access-Control-Allow-Headers" in a CORS preflight response. Use "*" to allow all headers.
          minItems: 0
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        emitTokenMetrics:
          type: boolean
          title: Emit per-token request metrics
          description: Emit per-token (<prefix>.http.perToken) and summary (<prefix>.http.summary) request metrics
          default: false
          example: false
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: splunk_hec
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id029
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        authTokens:
        - authType: manual
          tokenSecret: string
          token: string
          enabled: true
          description: string
          allowedIndexesAtToken:
          - string
          metadata:
          - name: string
            value: string
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        activityLogSampleRate: 100
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 5
        enableHealthCheck: string
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        splunkHecAPI: /services/collector
        metadata:
        - name: string
          value: string
        allowedIndexes:
        - string
        splunkHecAcks: false
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        useFwdTimezone: true
        dropControlFields: true
        extractMetrics: false
        accessControlAllowOrigin:
        - string
        accessControlAllowHeaders:
        - string
        emitTokenMetrics: false
        description: string
    InputAzureBlob:
      required:
      - queueName
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - azure_blob
          example: azure_blob
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id030 []
          items:
            type: string
            example: string
          example: *id030
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        queueName:
          type: string
          title: Queue
          description: "The storage account queue name blob notifications will be read from. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myQueue-${C.vars.myVar}`"
          example: string
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
          example: /.*/
        visibilityTimeout:
          type: number
          title: Visibility timeout (secs)
          description: The duration (in seconds) that the received messages are hidden from subsequent retrieve requests after being retrieved by a ReceiveMessage request.
          default: 600
          minimum: 0
          maximum: 604800
          example: 600
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
          example: 1
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages to return in a poll request. Azure storage queues never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 32."
          default: 1
          minimum: 1
          maximum: 32
          example: 1
        servicePeriodSecs:
          type: number
          title: Service period (secs)
          description: The duration (in seconds) which pollers should be validated and restarted if exited
          default: 5
          minimum: 1
          maximum: 10
          example: 5
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
          example: 5
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
          default: 600
          maximum: 3600
          minimum: 1
          example: 600
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          - clientSecret
          - clientCert
          default: manual
          example: manual
        description:
          type: string
          title: Description
          example: string
        connectionString:
          type: string
          title: Connection string
          description: Enter your Azure Storage account connection string. If left blank, Stream will fall back to env.AZURE_STORAGE_CONNECTION_STRING.
          example: string
        textSecret:
          type: string
          title: Connection string (text secret)
          description: Select or create a stored text secret
          example: string
        storageAccountName:
          type: string
          title: Storage account name
          description: The name of your Azure storage account
          example: string
        tenantId:
          type: string
          title: Tenant ID
          description: The service principal's tenant ID
          example: string
        clientId:
          type: string
          title: Client ID
          description: The service principal's client ID
          example: string
        azureCloud:
          type: string
          title: Azure Cloud
          description: The Azure cloud to use. Defaults to Azure Public Cloud.
          example: string
        endpointSuffix:
          type: string
          title: Endpoint suffix
          description: Endpoint suffix for the service URL. Takes precedence over the Azure Cloud setting. Defaults to core.windows.net.
          example: string
        clientTextSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
          example: string
        certificate:
          type: object
          required:
          - certificateName
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The certificate you registered as credentials for your app in the Azure portal
              example: string
          example:
            certificateName: string
      type: object
      example:
        id: string
        type: azure_blob
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id030
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        queueName: string
        fileFilter: /.*/
        visibilityTimeout: 600
        numReceivers: 1
        maxMessages: 1
        servicePeriodSecs: 5
        skipOnError: false
        metadata:
        - name: string
          value: string
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        parquetChunkSizeMB: 5
        parquetChunkDownloadTimeout: 600
        authType: manual
        description: string
        connectionString: string
        textSecret: string
        storageAccountName: string
        tenantId: string
        clientId: string
        azureCloud: string
        endpointSuffix: string
        clientTextSecret: string
        certificate:
          certificateName: string
    InputElastic:
      required:
      - host
      - port
      - elasticAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - elastic
          example: elastic
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id031 []
          items:
            type: string
            example: string
          example: *id031
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 5
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        elasticAPI:
          type: string
          title: Elasticsearch API endpoint
          description: Absolute path on which to listen for Elasticsearch API requests. Defaults to /. _bulk will be appended automatically. For example, /myPath becomes /myPath/_bulk. Requests can then be made to either /myPath/_bulk or /myPath/<myIndexName>/_bulk. Other entries are faked as success.
          default: /
          pattern: ^/
          example: /
        authType:
          type: string
          title: Authentication type
          enum:
          - none
          - basic
          - credentialsSecret
          - authTokens
          default: none
          example: none
        apiVersion:
          type: string
          title: API version
          description: The API version to use for communicating with the server
          enum:
          - 6.8.4
          - 8.3.2
          - custom
          default: 8.3.2
          example: 8.3.2
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          default: &id032
          - name: X-elastic-product
            value: Elasticsearch
          example: *id032
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        proxyMode:
          type: object
          title: ""
          required:
          - enabled
          properties:
            enabled:
              type: boolean
              title: Enable proxy mode
              default: false
              description: Enable proxying of non-bulk API requests to an external Elastic server. Enable this only if you understand the implications. See [Cribl Docs](https://docs.cribl.io/stream/sources-elastic/#proxy-mode) for more details.
              example: false
            url:
              type: string
              title: Proxy URL
              description: URL of the Elastic server to proxy non-bulk requests to, such as http://elastic:9200
              example: string
            rejectUnauthorized:
              type: boolean
              title: Reject unauthorized certificates
              description: Reject certificates that cannot be verified against a valid CA (such as self-signed certificates)
              default: false
              example: false
            removeHeaders:
              type: array
              title: Remove headers
              description: List of headers to remove from the request to proxy
              minItems: 0
              items:
                type: string
                minLength: 1
                example: string
              example:
              - string
            timeoutSec:
              type: number
              default: 60
              minimum: 1
              maximum: 9007199254740991
              title: Proxy request timeout
              description: Amount of time, in seconds, to wait for a proxy request to complete before canceling it
              example: 60
            authType:
              title: Authentication method
              type: string
              enum:
              - none
              - manual
              - secret
              default: none
              description: Enter credentials directly, or select a stored secret
              example: none
          example:
            enabled: false
            url: string
            rejectUnauthorized: false
            removeHeaders:
            - string
            timeoutSec: 60
            authType: none
        description:
          type: string
          title: Description
          example: string
        username:
          type: string
          title: Username
          example: string
        password:
          type: string
          title: Password
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
        authTokens:
          type: array
          title: Token
          description: Bearer tokens to include in the authorization header
          items:
            type: string
            example: string
          example:
          - string
        customAPIVersion:
          type: string
          title: Custom API Version
          description: Custom version information to respond to requests
          default: |-
            {
                "name": "AzU84iL",
                "cluster_name": "cribl",
                "cluster_uuid": "Js6_Z2VKS3KbfRSxPmPbaw",
                "version": {
                    "number": "8.3.2",
                    "build_type": "tar",
                    "build_hash": "bca0c8d",
                    "build_date": "2019-10-16T06:19:49.319352Z",
                    "build_snapshot": false,
                    "lucene_version": "9.7.2",
                    "minimum_wire_compatibility_version": "7.17.0",
                    "minimum_index_compatibility_version": "7.0.0"
                },
                "tagline": "You Know, for Search"
            }
          example: |-
            {
                "name": "AzU84iL",
                "cluster_name": "cribl",
                "cluster_uuid": "Js6_Z2VKS3KbfRSxPmPbaw",
                "version": {
                    "number": "8.3.2",
                    "build_type": "tar",
                    "build_hash": "bca0c8d",
                    "build_date": "2019-10-16T06:19:49.319352Z",
                    "build_snapshot": false,
                    "lucene_version": "9.7.2",
                    "minimum_wire_compatibility_version": "7.17.0",
                    "minimum_index_compatibility_version": "7.0.0"
                },
                "tagline": "You Know, for Search"
            }
      type: object
      example:
        id: string
        type: elastic
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id031
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        activityLogSampleRate: 100
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 5
        enableHealthCheck: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        elasticAPI: /
        authType: none
        apiVersion: 8.3.2
        extraHttpHeaders: *id032
        metadata:
        - name: string
          value: string
        proxyMode:
          enabled: false
          url: string
          rejectUnauthorized: false
          removeHeaders:
          - string
          timeoutSec: 60
          authType: none
        description: string
        username: string
        password: string
        credentialsSecret: string
        authTokens:
        - string
        customAPIVersion: |-
          {
              "name": "AzU84iL",
              "cluster_name": "cribl",
              "cluster_uuid": "Js6_Z2VKS3KbfRSxPmPbaw",
              "version": {
                  "number": "8.3.2",
                  "build_type": "tar",
                  "build_hash": "bca0c8d",
                  "build_date": "2019-10-16T06:19:49.319352Z",
                  "build_snapshot": false,
                  "lucene_version": "9.7.2",
                  "minimum_wire_compatibility_version": "7.17.0",
                  "minimum_index_compatibility_version": "7.0.0"
              },
              "tagline": "You Know, for Search"
          }
    InputConfluentCloud:
      required:
      - brokers
      - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - confluent_cloud
          example: confluent_cloud
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id033 []
          items:
            type: string
            example: string
          example: *id033
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        brokers:
          type: array
          title: Bootstrap servers
          description: List of Confluent Cloud bootstrap servers to use, such as yourAccount.confluent.cloud:9092
          minItems: 1
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: false
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        topics:
          type: array
          title: Topic
          description: "Topic to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Kafka Source to a single topic only."
          minItems: 1
          default: &id034 []
          items:
            type: string
            minLength: 1
            example: string
          example: *id034
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
          example: Cribl
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Leave enabled if you want the Source, upon first subscribing to a topic, to read starting with the earliest available message
          example: true
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
              example: http://localhost:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
              example: 1
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
              - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
                  example: string
              example:
                disabled: true
                credentialsSecret: string
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: >-
                    Reject certificates that are not authorized by a CA in the
                    CA certificate path, or by another 
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                  example: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                  example: string
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                  example: string
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                  example: string
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                  example: string
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                  example: string
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                  example: string
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
                  - TLSv1.3
                  example: TLSv1
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
                  - TLSv1.3
                  example: TLSv1
              example:
                disabled: true
                rejectUnauthorized: true
                servername: string
                certificateName: string
                caPath: string
                privKeyPath: string
                certPath: string
                passphrase: string
                minVersion: TLSv1
                maxVersion: TLSv1
          example:
            disabled: true
            schemaRegistryURL: http://localhost:8081
            connectionTimeout: 30000
            requestTimeout: 30000
            maxRetries: 1
            auth:
              disabled: true
              credentialsSecret: string
            tls:
              disabled: true
              rejectUnauthorized: true
              servername: string
              certificateName: string
              caPath: string
              privKeyPath: string
              certPath: string
              passphrase: string
              minVersion: TLSv1
              maxVersion: TLSv1
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 5
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 30000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 300
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
          example: 2
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 10000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            mechanism:
              type: string
              default: plain
              enum:
              - plain
              - scram-sha-256
              - scram-sha-512
              - kerberos
              title: SASL mechanism
              example: plain
          example:
            disabled: true
            mechanism: plain
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: >2-

                  Timeout used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires, 
                  the broker will remove the client from the group and initiate a rebalance.
                  Value must be between the broker's configured group.min.session.timeout.ms and group.max.session.timeout.ms.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_session.timeout.ms) for details.
          default: 30000
          minimum: 1000
          maximum: 3600000
          example: 30000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: >2-

                  Maximum allowed time for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#connectconfigs_rebalance.timeout.ms) for details.
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: >2-

                  Expected time between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Kafka's documentation](https://kafka.apache.org/documentation/#consumerconfigs_heartbeat.interval.ms) for details.
          default: 3000
          minimum: 1000
          maximum: 3600000
          example: 3000
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1000
          maximum: 3600000
          example: 123.45
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1
          maximum: 10000
          example: 123.45
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
          example: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
          example: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a socket
          minimum: 0
          maximum: 100
          default: 0
          example: 0
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: confluent_cloud
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id033
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        brokers:
        - string
        tls:
          disabled: false
          rejectUnauthorized: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        topics: *id034
        groupId: Cribl
        fromBeginning: true
        kafkaSchemaRegistry:
          disabled: true
          schemaRegistryURL: http://localhost:8081
          connectionTimeout: 30000
          requestTimeout: 30000
          maxRetries: 1
          auth:
            disabled: true
            credentialsSecret: string
          tls:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        connectionTimeout: 10000
        requestTimeout: 60000
        maxRetries: 5
        maxBackOff: 30000
        initialBackoff: 300
        backoffRate: 2
        authenticationTimeout: 10000
        reauthenticationThreshold: 10000
        sasl:
          disabled: true
          mechanism: plain
        sessionTimeout: 30000
        rebalanceTimeout: 60000
        heartbeatInterval: 3000
        autoCommitInterval: 123.45
        autoCommitThreshold: 123.45
        maxBytesPerPartition: 1048576
        maxBytes: 10485760
        maxSocketErrors: 0
        metadata:
        - name: string
          value: string
        description: string
    InputGrafana:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - grafana
          example: grafana
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id035 []
          items:
            type: string
            example: string
          example: *id035
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep alive timeout (seconds)
          description: Maximum time to wait for additional data, after the last response was sent, before closing a socket connection. This can be very useful when Grafana Agent remote write's request frequency is high so, reusing connections, would help mitigating the cost of creating a new connection per request. Note that Grafana Agent's embedded Prometheus would attempt to keep connections open for up to 5 minutes.
          default: 5
          minimum: 1
          maximum: 600
          example: 5
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        prometheusAPI:
          type: string
          title: Remote Write API endpoint
          description: "Absolute path on which to listen for Grafana Agent's Remote Write requests. Defaults to /api/prom/push, which will expand as: 'http://<your‑upstream‑URL>:<your‑port>/api/prom/push'. Either this field or 'Logs API endpoint' must be configured."
          default: /api/prom/push
          pattern: ^/
          example: /api/prom/push
        lokiAPI:
          type: string
          title: Logs API endpoint
          description: "Absolute path on which to listen for Loki logs requests. Defaults to /loki/api/v1/push, which will (in this example) expand as: 'http://<your‑upstream‑URL>:<your‑port>/loki/api/v1/push'. Either this field or 'Remote Write API endpoint' must be configured."
          default: /loki/api/v1/push
          pattern: ^/
          example: /loki/api/v1/push
        prometheusAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              description: Remote Write authentication type
              enum:
              - none
              - basic
              - credentialsSecret
              - token
              - textSecret
              - oauth
              default: none
              example: none
            username:
              type: string
              title: Username
              example: string
            password:
              type: string
              title: Password
              example: string
            token:
              type: string
              title: Token
              description: Bearer token to include in the authorization header
              example: string
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
              example: string
            textSecret:
              type: string
              title: Token (text secret)
              description: Select or create a stored text secret
              example: string
            loginUrl:
              type: string
              title: Login URL
              description: URL for OAuth
              pattern: ^https?://.*
              example: string
            secretParamName:
              type: string
              title: OAuth Secret parameter name
              description: Secret parameter name to pass in request body
              example: string
            secret:
              type: string
              title: OAuth secret
              description: Secret parameter value to pass in request body
              example: string
            tokenAttributeName:
              type: string
              title: Token attribute name
              description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
              example: string
            authHeaderExpr:
              type: string
              title: Authorize expression
              description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
              default: "`Bearer ${token}`"
              example: "`Bearer ${token}`"
            tokenTimeoutSecs:
              type: number
              title: Refresh interval (secs.)
              description: How often the OAuth token should be refreshed.
              minimum: 1
              maximum: 300000
              default: 3600
              example: 3600
            oauthParams:
              type: array
              title: OAuth parameters
              description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                - name
                - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth parameter name
                    example: string
                  value:
                    type: string
                    title: Value
                    description: OAuth parameter value
                    example: string
                example:
                  name: string
                  value: string
              example:
              - name: string
                value: string
            oauthHeaders:
              type: array
              title: OAuth headers
              description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                - name
                - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth header name
                    example: string
                  value:
                    type: string
                    title: Value
                    description: OAuth header value
                    example: string
                example:
                  name: string
                  value: string
              example:
              - name: string
                value: string
          example:
            authType: none
            username: string
            password: string
            token: string
            credentialsSecret: string
            textSecret: string
            loginUrl: string
            secretParamName: string
            secret: string
            tokenAttributeName: string
            authHeaderExpr: "`Bearer ${token}`"
            tokenTimeoutSecs: 3600
            oauthParams:
            - name: string
              value: string
            oauthHeaders:
            - name: string
              value: string
        lokiAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              description: Loki logs authentication type
              enum:
              - none
              - basic
              - credentialsSecret
              - token
              - textSecret
              - oauth
              default: none
              example: none
            username:
              type: string
              title: Username
              example: string
            password:
              type: string
              title: Password
              example: string
            token:
              type: string
              title: Token
              description: Bearer token to include in the authorization header
              example: string
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
              example: string
            textSecret:
              type: string
              title: Token (text secret)
              description: Select or create a stored text secret
              example: string
            loginUrl:
              type: string
              title: Login URL
              description: URL for OAuth
              pattern: ^https?://.*
              example: string
            secretParamName:
              type: string
              title: OAuth Secret parameter name
              description: Secret parameter name to pass in request body
              example: string
            secret:
              type: string
              title: OAuth secret
              description: Secret parameter value to pass in request body
              example: string
            tokenAttributeName:
              type: string
              title: Token attribute name
              description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
              example: string
            authHeaderExpr:
              type: string
              title: Authorize expression
              description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
              default: "`Bearer ${token}`"
              example: "`Bearer ${token}`"
            tokenTimeoutSecs:
              type: number
              title: Refresh interval (secs.)
              description: How often the OAuth token should be refreshed.
              minimum: 1
              maximum: 300000
              default: 3600
              example: 3600
            oauthParams:
              type: array
              title: OAuth parameters
              description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                - name
                - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth parameter name
                    example: string
                  value:
                    type: string
                    title: Value
                    description: OAuth parameter value
                    example: string
                example:
                  name: string
                  value: string
              example:
              - name: string
                value: string
            oauthHeaders:
              type: array
              title: OAuth headers
              description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
              items:
                type: object
                required:
                - name
                - value
                properties:
                  name:
                    type: string
                    title: Name
                    description: OAuth header name
                    example: string
                  value:
                    type: string
                    title: Value
                    description: OAuth header value
                    example: string
                example:
                  name: string
                  value: string
              example:
              - name: string
                value: string
          example:
            authType: none
            username: string
            password: string
            token: string
            credentialsSecret: string
            textSecret: string
            loginUrl: string
            secretParamName: string
            secret: string
            tokenAttributeName: string
            authHeaderExpr: "`Bearer ${token}`"
            tokenTimeoutSecs: 3600
            oauthParams:
            - name: string
              value: string
            oauthHeaders:
            - name: string
              value: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      anyOf:
      - required:
        - prometheusAPI
        example: string
      - required:
        - lokiAPI
        example: string
      example:
        id: string
        type: grafana
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id035
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        activityLogSampleRate: 100
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 5
        enableHealthCheck: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        prometheusAPI: /api/prom/push
        lokiAPI: /loki/api/v1/push
        prometheusAuth:
          authType: none
          username: string
          password: string
          token: string
          credentialsSecret: string
          textSecret: string
          loginUrl: string
          secretParamName: string
          secret: string
          tokenAttributeName: string
          authHeaderExpr: "`Bearer ${token}`"
          tokenTimeoutSecs: 3600
          oauthParams:
          - name: string
            value: string
          oauthHeaders:
          - name: string
            value: string
        lokiAuth:
          authType: none
          username: string
          password: string
          token: string
          credentialsSecret: string
          textSecret: string
          loginUrl: string
          secretParamName: string
          secret: string
          tokenAttributeName: string
          authHeaderExpr: "`Bearer ${token}`"
          tokenTimeoutSecs: 3600
          oauthParams:
          - name: string
            value: string
          oauthHeaders:
          - name: string
            value: string
        metadata:
        - name: string
          value: string
        description: string
    InputLoki:
      required:
      - host
      - port
      - lokiAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - loki
          example: loki
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id036 []
          items:
            type: string
            example: string
          example: *id036
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 5
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        lokiAPI:
          type: string
          title: Logs API endpoint
          description: "Absolute path on which to listen for Loki logs requests. Defaults to /loki/api/v1/push, which will (in this example) expand as: 'http://<your‑upstream‑URL>:<your‑port>/loki/api/v1/push'."
          default: /loki/api/v1/push
          pattern: ^/
          example: /loki/api/v1/push
        authType:
          type: string
          title: Authentication type
          description: Loki logs authentication type
          enum:
          - none
          - basic
          - credentialsSecret
          - token
          - textSecret
          - oauth
          default: none
          example: none
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
        username:
          type: string
          title: Username
          example: string
        password:
          type: string
          title: Password
          example: string
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: string
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: string
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: string
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: string
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
          example: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: string
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: string
              value:
                type: string
                title: Value
                description: OAuth header value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
      type: object
      example:
        id: string
        type: loki
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id036
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        activityLogSampleRate: 100
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 5
        enableHealthCheck: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        lokiAPI: /loki/api/v1/push
        authType: none
        metadata:
        - name: string
          value: string
        description: string
        username: string
        password: string
        token: string
        credentialsSecret: string
        textSecret: string
        loginUrl: string
        secretParamName: string
        secret: string
        tokenAttributeName: string
        authHeaderExpr: "`Bearer ${token}`"
        tokenTimeoutSecs: 3600
        oauthParams:
        - name: string
          value: string
        oauthHeaders:
        - name: string
          value: string
    InputPrometheusRw:
      required:
      - host
      - port
      - prometheusAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - prometheus_rw
          example: prometheus_rw
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id037 []
          items:
            type: string
            example: string
          example: *id037
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 5
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        prometheusAPI:
          type: string
          title: Remote Write API endpoint
          description: "Absolute path on which to listen for Prometheus requests. Defaults to /write, which will expand as: http://<your‑upstream‑URL>:<your‑port>/write."
          default: /write
          pattern: ^/
          example: /write
        authType:
          type: string
          title: Authentication type
          description: Remote Write authentication type
          enum:
          - none
          - basic
          - credentialsSecret
          - token
          - textSecret
          - oauth
          default: none
          example: none
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
        username:
          type: string
          title: Username
          example: string
        password:
          type: string
          title: Password
          example: string
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: string
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: string
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: string
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: string
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
          example: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: string
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: string
              value:
                type: string
                title: Value
                description: OAuth header value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
      type: object
      example:
        id: string
        type: prometheus_rw
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id037
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        activityLogSampleRate: 100
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 5
        enableHealthCheck: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        prometheusAPI: /write
        authType: none
        metadata:
        - name: string
          value: string
        description: string
        username: string
        password: string
        token: string
        credentialsSecret: string
        textSecret: string
        loginUrl: string
        secretParamName: string
        secret: string
        tokenAttributeName: string
        authHeaderExpr: "`Bearer ${token}`"
        tokenTimeoutSecs: 3600
        oauthParams:
        - name: string
          value: string
        oauthHeaders:
        - name: string
          value: string
    InputPrometheus:
      required:
      - interval
      - logLevel
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - prometheus
          example: prometheus
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id038 []
          items:
            type: string
            example: string
          example: *id038
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        dimensionList:
          type: array
          title: Extra Dimensions
          minItems: 0
          default: &id039
          - host
          - source
          description: Other dimensions to include in events
          items:
            type: string
            title: dimension
            example: string
          example: *id039
        discoveryType:
          title: Discovery Type
          type: string
          enum:
          - static
          - dns
          - ec2
          description: Target discovery mechanism. Use static to manually enter a list of targets.
          default: static
          example: static
        interval:
          type: number
          title: Poll Interval
          description: How often in minutes to scrape targets for metrics, 60 must be evenly divisible by the value or save will fail.
          minimum: 1
          maximum: 60
          default: 15
          example: 15
        logLevel:
          type: string
          title: Log Level
          enum:
          - error
          - warn
          - info
          - debug
          description: Collector runtime Log Level
          default: info
          example: info
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
          example: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
          example: "0"
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
          example: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Enter credentials directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: string
        targetList:
          type: array
          title: Targets
          minItems: 1
          default: &id040 []
          description: "List of Prometheus targets to pull metrics from. Values can be in URL or host[:port] format. For example: http://localhost:9090/metrics, localhost:9090, or localhost. In cases where just host[:port] is specified, the endpoint will resolve to 'http://host[:port]/metrics'."
          items:
            type: string
            title: Targets
            example: string
          example: *id040
        nameList:
          type: array
          title: DNS Names
          minItems: 1
          default: &id041 []
          description: List of DNS names to resolve
          items:
            type: string
            title: DNS Names
            example: string
          example: *id041
        recordType:
          type: string
          title: Record Type
          enum:
          - SRV
          - A
          - AAAA
          description: DNS Record type to resolve
          default: SRV
          example: SRV
        scrapeProtocol:
          type: string
          title: Metrics Protocol
          enum:
          - http
          - https
          description: Protocol to use when collecting metrics
          default: http
          example: http
        scrapePath:
          type: string
          title: Metrics Path
          description: Path to use when collecting metrics from discovered targets
          default: /metrics
          pattern: ^/.*
          example: /metrics
        usePublicIp:
          type: boolean
          title: Use Public IP
          description: Use public IP address for discovered targets. Set to false if the private IP address should be used.
          default: true
          example: true
        scrapePort:
          type: number
          title: Metrics Port
          description: The port number in the metrics URL for discovered targets.
          minimum: 1
          maximum: 65535
          default: 9090
          example: 9090
        searchFilter:
          title: Search Filter
          description: EC2 Instance Search Filter
          type: array
          items:
            type: object
            required:
            - Name
            - Values
            properties:
              Name:
                type: string
                title: Filter Name
                description: "Search filter attribute name, see: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html for more information. Attributes can be manually entered if not present in the drop down list"
                example: string
              Values:
                type: array
                title: Filter Values
                description: Search Filter Values, if empty only "running" EC2 instances will be returned
                minItems: 0
                default: &id042 []
                items:
                  type: string
                  minLength: 1
                  example: string
                example: *id042
            example:
              Name: string
              Values: *id042
          example:
          - Name: string
            Values: *id042
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: Region where the EC2 is located
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: EC2 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to EC2-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing EC2 requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for EC2
          description: Use Assume Role credentials to access EC2
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        username:
          type: string
          title: Username
          description: Username for Prometheus Basic authentication
          example: string
        password:
          type: string
          title: Password
          description: Password for Prometheus Basic authentication
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
      type: object
      example:
        id: string
        type: prometheus
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id038
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        dimensionList: *id039
        discoveryType: static
        interval: 15
        logLevel: info
        rejectUnauthorized: true
        keepAliveTime: 30
        jobTimeout: "0"
        maxMissedKeepAlives: 3
        ttl: 4h
        ignoreGroupJobsLimit: false
        metadata:
        - name: string
          value: string
        authType: manual
        description: string
        targetList: *id040
        nameList: *id041
        recordType: SRV
        scrapeProtocol: http
        scrapePath: /metrics
        usePublicIp: true
        scrapePort: 9090
        searchFilter:
        - Name: string
          Values: *id042
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        username: string
        password: string
        credentialsSecret: string
    InputEdgePrometheus:
      required:
      - interval
      - discoveryType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - edge_prometheus
          example: edge_prometheus
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id043 []
          items:
            type: string
            example: string
          example: *id043
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        dimensionList:
          type: array
          title: Extra Dimensions
          minItems: 0
          default: &id044
          - host
          - source
          description: Other dimensions to include in events
          items:
            type: string
            title: dimension
            example: string
          example: *id044
        discoveryType:
          title: Discovery Type
          type: string
          enum:
          - static
          - dns
          - ec2
          - k8s-node
          - k8s-pods
          description: Target discovery mechanism. Use static to manually enter a list of targets.
          default: static
          example: static
        interval:
          type: number
          title: Poll Interval
          description: How often in seconds to scrape targets for metrics.
          minimum: 2
          default: 15
          example: 15
        timeout:
          type: number
          title: HTTP Connection Timeout
          description: Timeout, in milliseconds, before aborting HTTP connection attempts; 1-60000 or 0 to disable
          default: 5000
          maximum: 60000
          minimum: 0
          example: 5000
        persistence:
          type: object
          title: Disk Spooling
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events on disk for Cribl Edge and Search. Default is disabled.
              default: false
              example: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time period for grouping spooled events. Default is 10m.
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space that can be consumed before older buckets are deleted. Examples: 420MB, 4GB. Default is 1GB."
              pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
              default: 1GB
              example: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data before older buckets are deleted. Examples: 2h, 4d. Default is 24h."
              pattern: \d+[smhd]$
              default: 24h
              example: 24h
            compress:
              type: string
              title: Compression
              description: Data compression format. Default is gzip.
              enum:
              - none
              - gzip
              default: gzip
              example: gzip
          example:
            enable: false
            timeWindow: 10m
            maxDataSize: 1GB
            maxDataTime: 24h
            compress: gzip
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          - kubernetes
          default: manual
          description: Enter credentials directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: string
        targets:
          type: array
          title: Targets
          default: &id045 []
          minItems: 1
          items:
            type: object
            required:
            - host
            properties:
              protocol:
                type: string
                title: Protocol
                enum:
                - http
                - https
                description: Protocol to use when collecting metrics
                default: http
                example: http
              host:
                type: string
                title: Host
                description: Name of host from which to pull metrics.
                example: string
              port:
                type: number
                title: Port
                description: The port number in the metrics URL for discovered targets.
                minimum: 1
                maximum: 65535
                default: 9090
                example: 9090
              path:
                type: string
                title: Path
                description: Path to use when collecting metrics from discovered targets
                default: /metrics
                pattern: ^/.*
                example: /metrics
            example:
              protocol: http
              host: string
              port: 9090
              path: /metrics
          example: *id045
        nameList:
          type: array
          title: DNS Names
          minItems: 1
          default: &id046 []
          description: List of DNS names to resolve
          items:
            type: string
            title: DNS Names
            example: string
          example: *id046
        recordType:
          type: string
          title: Record Type
          enum:
          - SRV
          - A
          - AAAA
          description: DNS Record type to resolve
          default: SRV
          example: SRV
        scrapeProtocol:
          type: string
          title: Protocol
          enum:
          - http
          - https
          description: Protocol to use when collecting metrics
          default: http
          example: http
        scrapePath:
          type: string
          title: Path
          description: Path to use when collecting metrics from discovered targets
          default: /metrics
          pattern: ^/.*
          example: /metrics
        usePublicIp:
          type: boolean
          title: Use Public IP
          description: Use public IP address for discovered targets. Set to false if the private IP address should be used.
          default: true
          example: true
        scrapePort:
          type: number
          title: Port
          description: The port number in the metrics URL for discovered targets.
          minimum: 1
          maximum: 65535
          default: 9090
          example: 9090
        searchFilter:
          title: Search Filter
          description: EC2 Instance Search Filter
          type: array
          items:
            type: object
            required:
            - Name
            - Values
            properties:
              Name:
                type: string
                title: Filter Name
                description: "Search filter attribute name, see: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html for more information. Attributes can be manually entered if not present in the drop down list"
                example: string
              Values:
                type: array
                title: Filter Values
                description: Search Filter Values, if empty only "running" EC2 instances will be returned
                minItems: 0
                default: &id047 []
                items:
                  type: string
                  minLength: 1
                  example: string
                example: *id047
            example:
              Name: string
              Values: *id047
          example:
          - Name: string
            Values: *id047
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: Region where the EC2 is located
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: EC2 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to EC2-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing EC2 requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for EC2
          description: Use Assume Role credentials to access EC2
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        scrapeProtocolExpr:
          type: string
          title: Protocol
          description: Protocol to use when collecting metrics
          default: metadata.annotations['prometheus.io/scheme'] || 'http'
          example: metadata.annotations['prometheus.io/scheme'] || 'http'
        scrapePortExpr:
          type: string
          title: Port
          description: The port number in the metrics URL for discovered targets.
          default: metadata.annotations['prometheus.io/port'] || 9090
          example: metadata.annotations['prometheus.io/port'] || 9090
        scrapePathExpr:
          type: string
          title: Path
          description: Path to use when collecting metrics from discovered targets
          default: metadata.annotations['prometheus.io/path'] || '/metrics'
          example: metadata.annotations['prometheus.io/path'] || '/metrics'
        podFilter:
          type: array
          title: Filter Rules
          description: |2

              Add rules to decide which pods to discover for metrics.
              Pods are searched if no rules are given or of all the rules'
              expressions evaluate to true.
          items:
            type: object
            required:
            - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to pods objects. Return 'true' to include it.
                example: string
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
                example: string
            example:
              filter: string
              description: string
          default: &id048
          - filter: metadata.annotations['prometheus.io/scrape']
            description: Scrape pod if annotation is true
          example: *id048
        username:
          type: string
          title: Username
          description: Username for Prometheus Basic authentication
          example: string
        password:
          type: string
          title: Password
          description: Password for Prometheus Basic authentication
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
      type: object
      example:
        id: string
        type: edge_prometheus
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id043
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        dimensionList: *id044
        discoveryType: static
        interval: 15
        timeout: 5000
        persistence:
          enable: false
          timeWindow: 10m
          maxDataSize: 1GB
          maxDataTime: 24h
          compress: gzip
        metadata:
        - name: string
          value: string
        authType: manual
        description: string
        targets: *id045
        nameList: *id046
        recordType: SRV
        scrapeProtocol: http
        scrapePath: /metrics
        usePublicIp: true
        scrapePort: 9090
        searchFilter:
        - Name: string
          Values: *id047
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        scrapeProtocolExpr: metadata.annotations['prometheus.io/scheme'] || 'http'
        scrapePortExpr: metadata.annotations['prometheus.io/port'] || 9090
        scrapePathExpr: metadata.annotations['prometheus.io/path'] || '/metrics'
        podFilter: *id048
        username: string
        password: string
        credentialsSecret: string
    InputOffice365Mgmt:
      required:
      - tenantId
      - appId
      - planType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - office365_mgmt
          example: office365_mgmt
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id049 []
          items:
            type: string
            example: string
          example: *id049
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        planType:
          type: string
          title: Subscription plan
          description: Office 365 subscription plan for your organization, typically Office 365 Enterprise
          enum:
          - enterprise_gcc
          - gcc
          - gcc_high
          - dod
          default: enterprise_gcc
          example: enterprise_gcc
        tenantId:
          type: string
          title: Tenant ID
          description: Office 365 Azure Tenant ID
          example: string
        appId:
          type: string
          title: App ID
          description: Office 365 Azure Application ID
          example: string
        timeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout, use 0 to disable
          minimum: 0
          maximum: 2400
          default: 300
          example: 300
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
          example: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
          example: "0"
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
          example: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        publisherIdentifier:
          type: string
          title: Publisher Identifier
          description: Optional Publisher Identifier to use in API requests, defaults to tenant id if not defined. For more information see [here](https://docs.microsoft.com/en-us/office/office-365-management-api/office-365-management-activity-api-reference#start-a-subscription)
          example: string
        contentConfig:
          type: array
          title: Content Types
          default: &id050
          - contentType: Active Directory
            description: Poll interval minutes (1-60)
            interval: 15
            logLevel: info
            enabled: false
          - contentType: Exchange
            description: Poll interval minutes (1-60)
            interval: 15
            logLevel: info
            enabled: false
          - contentType: SharePoint
            description: Poll interval minutes (1-60)
            interval: 15
            logLevel: info
            enabled: false
          - contentType: General
            description: Poll interval minutes (1-60)
            interval: 15
            logLevel: info
            enabled: false
          - contentType: DLP
            description: Poll interval minutes (1-60)
            interval: 15
            logLevel: info
            enabled: false
          items:
            type: object
            properties:
              contentType:
                type: string
                title: Content Type
                description: Office 365 Management Activity API Content Type
                example: string
              description:
                type: string
                title: Interval Description
                description: If interval type is minutes the value entered must evenly divisible by 60 or save will fail
                example: string
              interval:
                type: number
                title: Interval
                minimum: 1
                maximum: 60
                example: 123.45
              logLevel:
                type: string
                title: Log Level
                enum:
                - error
                - warn
                - info
                - debug
                description: Collector runtime Log Level
                example: error
              enabled:
                type: boolean
                title: Enabled
                example: true
            example:
              contentType: string
              description: string
              interval: 123.45
              logLevel: error
              enabled: true
          description: "Enable Office 365 Management Activity API content types and polling intervals. Polling intervals are used to set up search date range and cron schedule, e.g.: */${interval} * * * *. Because of this, intervals entered must be evenly divisible by 60 to give a predictable schedule."
          example: *id050
        ingestionLag:
          type: number
          title: Ingestion lag (minutes)
          description: Use this setting to account for ingestion lag. This is necessary because there can be a lag of 60 - 90 minutes (or longer) before Office 365 events are available for retrieval.
          default: 0
          minimum: 0
          maximum: 7200
          example: 0
        retryRules:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
              - none
              - backoff
              - static
              default: backoff
              example: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
              example: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
              example: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of http codes that trigger a retry. Leave empty to use the default list of 429, 500, and 503.
              minItems: 1
              default: &id051
              - 429
              - 500
              - 503
              items:
                type: number
                minLength: 1
                example: 123.45
              example: *id051
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
              example: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
              example: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
              example: false
          example:
            type: backoff
            interval: 1000
            limit: 5
            multiplier: 2
            codes: *id051
            enableHeader: true
            retryConnectTimeout: false
            retryConnectReset: false
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Enter client secret directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: string
        clientSecret:
          type: string
          title: Client secret
          description: Office 365 Azure client secret
          example: string
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: office365_mgmt
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id049
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        planType: enterprise_gcc
        tenantId: string
        appId: string
        timeout: 300
        keepAliveTime: 30
        jobTimeout: "0"
        maxMissedKeepAlives: 3
        ttl: 4h
        ignoreGroupJobsLimit: false
        metadata:
        - name: string
          value: string
        publisherIdentifier: string
        contentConfig: *id050
        ingestionLag: 0
        retryRules:
          type: backoff
          interval: 1000
          limit: 5
          multiplier: 2
          codes: *id051
          enableHeader: true
          retryConnectTimeout: false
          retryConnectReset: false
        authType: manual
        description: string
        clientSecret: string
        textSecret: string
    InputOffice365Service:
      required:
      - tenantId
      - appId
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - office365_service
          example: office365_service
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id052 []
          items:
            type: string
            example: string
          example: *id052
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        planType:
          type: string
          title: Subscription plan
          description: Office 365 subscription plan for your organization, typically Office 365 Enterprise
          enum:
          - enterprise_gcc
          - gcc
          - gcc_high
          - dod
          default: enterprise_gcc
          example: enterprise_gcc
        tenantId:
          type: string
          title: Tenant ID
          description: Office 365 Azure Tenant ID
          example: string
        appId:
          type: string
          title: App ID
          description: Office 365 Azure Application ID
          example: string
        timeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout, use 0 to disable
          minimum: 0
          maximum: 2400
          default: 300
          example: 300
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
          example: 30
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
          example: "0"
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
          example: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        contentConfig:
          type: array
          title: Content Types
          default: &id053
          - contentType: Current Status
            description: Poll interval minutes (1-60)
            interval: 15
            logLevel: info
            enabled: false
          - contentType: Messages
            description: Poll interval minutes (1-60)
            interval: 15
            logLevel: info
            enabled: false
          items:
            type: object
            properties:
              contentType:
                type: string
                title: Content Type
                description: Office 365 Services API Content Type
                example: string
              description:
                type: string
                title: Interval Description
                description: If interval type is minutes the value entered must evenly divisible by 60 or save will fail
                example: string
              interval:
                type: number
                title: Interval
                minimum: 0
                maximum: 60
                example: 123.45
              logLevel:
                type: string
                title: Log Level
                enum:
                - error
                - warn
                - info
                - debug
                description: Collector runtime Log Level
                example: error
              enabled:
                type: boolean
                title: Enabled
                example: true
            example:
              contentType: string
              description: string
              interval: 123.45
              logLevel: error
              enabled: true
          description: "Enable Office 365 Service Communication API content types and polling intervals. Polling intervals are used to set up search date range and cron schedule, e.g.: */${interval} * * * *. Because of this, intervals entered for current and historical status must be evenly divisible by 60 to give a predictable schedule."
          example: *id053
        retryRules:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
              - none
              - backoff
              - static
              default: backoff
              example: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
              example: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
              example: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of http codes that trigger a retry. Leave empty to use the default list of 429, 500, and 503.
              minItems: 1
              default: &id054
              - 429
              - 500
              - 503
              items:
                type: number
                minLength: 1
                example: 123.45
              example: *id054
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
              example: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
              example: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
              example: false
          example:
            type: backoff
            interval: 1000
            limit: 5
            multiplier: 2
            codes: *id054
            enableHeader: true
            retryConnectTimeout: false
            retryConnectReset: false
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Enter client secret directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: string
        clientSecret:
          type: string
          title: Client secret
          description: Office 365 Azure client secret
          example: string
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: office365_service
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id052
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        planType: enterprise_gcc
        tenantId: string
        appId: string
        timeout: 300
        keepAliveTime: 30
        jobTimeout: "0"
        maxMissedKeepAlives: 3
        ttl: 4h
        ignoreGroupJobsLimit: false
        metadata:
        - name: string
          value: string
        contentConfig: *id053
        retryRules:
          type: backoff
          interval: 1000
          limit: 5
          multiplier: 2
          codes: *id054
          enableHeader: true
          retryConnectTimeout: false
          retryConnectReset: false
        authType: manual
        description: string
        clientSecret: string
        textSecret: string
    InputOffice365MsgTrace:
      required:
      - url
      - interval
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - office365_msg_trace
          example: office365_msg_trace
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id055 []
          items:
            type: string
            example: string
          example: *id055
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        url:
          title: Report URL
          type: string
          description: URL to use when retrieving report data.
          default: https://reports.office365.com/ecp/reportingwebservice/reporting.svc/MessageTrace
          example: https://reports.office365.com/ecp/reportingwebservice/reporting.svc/MessageTrace
        interval:
          type: number
          title: Poll interval
          description: How often (in minutes) to run the report. Must divide evenly into 60 minutes to create a predictable schedule, or Save will fail.
          minimum: 1
          maximum: 60
          default: 60
          example: 60
        startDate:
          title: Date range start
          type: string
          description: "Backward offset for the search range's head. (E.g.: -3h@h) Message Trace data is delayed; this parameter (with Date range end) compensates for delay and gaps."
          example: string
        endDate:
          title: Date range end
          type: string
          description: "Backward offset for the search range's tail. (E.g.: -2h@h) Message Trace data is delayed; this parameter (with Date range start) compensates for delay and gaps."
          example: string
        timeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout. Maximum is 2400 (40 minutes); enter 0 to wait indefinitely.
          minimum: 0
          maximum: 2400
          default: 300
          example: 300
        disableTimeFilter:
          type: boolean
          title: Disable time filter
          description: Disables time filtering of events when a date range is specified.
          default: true
          example: true
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          - oauth
          - oauthSecret
          - oauthCert
          default: oauth
          description: Select authentication method.
          example: oauth
        rescheduleDroppedTasks:
          type: boolean
          title: Reschedule tasks
          description: Reschedule tasks that failed with non-fatal errors
          default: true
          example: true
        maxTaskReschedule:
          type: number
          title: Task reschedule limit
          description: Maximum number of times a task can be rescheduled
          default: 1
          minimum: 1
          example: 1
        logLevel:
          type: string
          title: Log level
          description: Log Level (verbosity) for collection runtime behavior.
          enum:
          - error
          - warn
          - info
          - debug
          - silly
          default: info
          example: info
        jobTimeout:
          type: string
          title: Job timeout
          description: Maximum time the job is allowed to run (e.g., 30, 45s or 15m). Units are seconds, if not specified. Enter 0 for unlimited time.
          pattern: ^\d+[sm]?$
          default: "0"
          example: "0"
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
          example: 30
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
          example: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        retryRules:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
              - none
              - backoff
              - static
              default: backoff
              example: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
              example: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
              example: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of http codes that trigger a retry. Leave empty to use the default list of 429, 500, and 503.
              minItems: 1
              default: &id056
              - 429
              - 500
              - 503
              items:
                type: number
                minLength: 1
                example: 123.45
              example: *id056
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
              example: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
              example: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
              example: false
          example:
            type: backoff
            interval: 1000
            limit: 5
            multiplier: 2
            codes: *id056
            enableHeader: true
            retryConnectTimeout: false
            retryConnectReset: false
        description:
          type: string
          title: Description
          example: string
        username:
          type: string
          title: Username
          description: Username to run Message Trace API call.
          example: string
        password:
          type: string
          title: Password
          description: Password to run Message Trace API call.
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials.
          example: string
        clientSecret:
          type: string
          title: Client secret
          description: client_secret to pass in the OAuth request parameter.
          example: string
        tenantId:
          type: string
          title: Tenant identifier
          description: Directory ID (tenant identifier) in Azure Active Directory.
          example: string
        clientId:
          type: string
          title: Client ID
          description: client_id to pass in the OAuth request parameter.
          example: string
        resource:
          type: string
          title: Resource
          description: Resource to pass in the OAuth request parameter.
          default: https://outlook.office365.com
          example: https://outlook.office365.com
        planType:
          type: string
          title: Subscription plan
          description: Office 365 subscription plan for your organization, typically Office 365 Enterprise
          enum:
          - enterprise_gcc
          - gcc
          - gcc_high
          - dod
          default: enterprise_gcc
          example: enterprise_gcc
        textSecret:
          type: string
          title: Client secret
          description: Select or create a secret that references your client_secret to pass in the OAuth request parameter.
          example: string
        certOptions:
          type: object
          required:
          - privKeyPath
          - certPath
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate.
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path to the private key to use. Key should be in PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt the private key.
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path to the certificate to use. Certificate should be in PEM format. Can reference $ENV_VARS.
              example: string
          example:
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
      type: object
      example:
        id: string
        type: office365_msg_trace
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id055
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        url: https://reports.office365.com/ecp/reportingwebservice/reporting.svc/MessageTrace
        interval: 60
        startDate: string
        endDate: string
        timeout: 300
        disableTimeFilter: true
        authType: oauth
        rescheduleDroppedTasks: true
        maxTaskReschedule: 1
        logLevel: info
        jobTimeout: "0"
        keepAliveTime: 30
        maxMissedKeepAlives: 3
        ttl: 4h
        ignoreGroupJobsLimit: false
        metadata:
        - name: string
          value: string
        retryRules:
          type: backoff
          interval: 1000
          limit: 5
          multiplier: 2
          codes: *id056
          enableHeader: true
          retryConnectTimeout: false
          retryConnectReset: false
        description: string
        username: string
        password: string
        credentialsSecret: string
        clientSecret: string
        tenantId: string
        clientId: string
        resource: https://outlook.office365.com
        planType: enterprise_gcc
        textSecret: string
        certOptions:
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
    InputEventhub:
      required:
      - brokers
      - topics
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - eventhub
          example: eventhub
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id057 []
          items:
            type: string
            example: string
          example: *id057
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        brokers:
          type: array
          title: Brokers
          description: "List of Event Hubs Kafka brokers to connect to (example: yourdomain.servicebus.windows.net:9093). The hostname can be found in the host portion of the primary or secondary connection string in Shared Access Policies."
          minItems: 1
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        topics:
          type: array
          title: Event Hub name
          description: "The name of the Event Hub (Kafka topic) to subscribe to. Warning: To optimize performance, Cribl suggests subscribing each Event Hubs Source to only a single topic."
          minItems: 1
          default: &id058 []
          items:
            type: string
            minLength: 1
            example: string
          example: *id058
        groupId:
          type: string
          default: Cribl
          title: Group ID
          description: The consumer group this instance belongs to. Default is 'Cribl'.
          example: Cribl
        fromBeginning:
          type: boolean
          default: true
          title: From beginning
          description: Start reading from earliest available data; relevant only during initial subscription
          example: true
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 5
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 30000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 300
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
          example: 2
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 10000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            mechanism:
              type: string
              enum:
              - plain
              - oauthbearer
              title: SASL mechanism
              default: plain
              example: plain
          example:
            disabled: false
            mechanism: plain
        tls:
          type: object
          title: TLS settings (client side)
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certificates that are not authorized by a CA in the CA certificate path, or by another trusted CA (such as the system's)
              default: true
              example: true
          example:
            disabled: false
            rejectUnauthorized: true
        sessionTimeout:
          type: number
          title: Session timeout (ms)
          description: >2-

                  Timeout (session.timeout.ms in Kafka domain) used to detect client failures when using Kafka's group-management facilities.
                  If the client sends no heartbeats to the broker before the timeout expires, the broker will remove the client from the group and initiate a rebalance.
                  Value must be lower than rebalanceTimeout.
                  See details [here](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 30000
          minimum: 6000
          maximum: 300000
          example: 30000
        rebalanceTimeout:
          type: number
          title: Rebalance timeout (ms)
          description: >2-

                  Maximum allowed time (rebalance.timeout.ms in Kafka domain) for each worker to join the group after a rebalance begins.
                  If the timeout is exceeded, the coordinator broker will remove the worker from the group.
                  See [Recommended configurations](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        heartbeatInterval:
          type: number
          title: Heartbeat interval (ms)
          description: >2-

                  Expected time (heartbeat.interval.ms in Kafka domain) between heartbeats to the consumer coordinator when using Kafka's group-management facilities.
                  Value must be lower than sessionTimeout and typically should not exceed 1/3 of the sessionTimeout value.
                  See [Recommended configurations](https://github.com/Azure/azure-event-hubs-for-kafka/blob/master/CONFIGURATION.md).
          default: 3000
          minimum: 1000
          maximum: 3600000
          example: 3000
        autoCommitInterval:
          type: number
          title: Offset commit interval (ms)
          description: How often to commit offsets. If both this and Offset commit threshold are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1000
          maximum: 3600000
          example: 123.45
        autoCommitThreshold:
          type: number
          title: Offset commit threshold
          description: How many events are needed to trigger an offset commit. If both this and Offset commit interval are set, @{product} commits offsets when either condition is met. If both are empty, @{product} commits offsets after each batch.
          minimum: 1
          maximum: 10000
          example: 123.45
        maxBytesPerPartition:
          type: number
          title: Byte limit, per partition
          description: Maximum amount of data that Kafka will return per partition, per fetch request. Must equal or exceed the maximum message size (maxBytesPerPartition) that Kafka is configured to allow. Otherwise, @{product} can get stuck trying to retrieve messages. Defaults to 1048576 (1 MB).
          minimum: 1
          maximum: 10000000
          default: 1048576
          example: 1048576
        maxBytes:
          type: number
          title: Byte limit
          description: Maximum number of bytes that Kafka will return per fetch request. Defaults to 10485760 (10 MB).
          minimum: 1
          maximum: 1000000000
          default: 10485760
          example: 10485760
        maxSocketErrors:
          type: number
          title: Error limit, per socket
          description: Maximum number of network errors before the consumer re-creates a socket
          minimum: 0
          maximum: 100
          default: 0
          example: 0
        minimizeDuplicates:
          type: boolean
          title: Minimize duplicates
          description: Minimize duplicate events by starting only one consumer for each topic partition
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: eventhub
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id057
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        brokers:
        - string
        topics: *id058
        groupId: Cribl
        fromBeginning: true
        connectionTimeout: 10000
        requestTimeout: 60000
        maxRetries: 5
        maxBackOff: 30000
        initialBackoff: 300
        backoffRate: 2
        authenticationTimeout: 10000
        reauthenticationThreshold: 10000
        sasl:
          disabled: false
          mechanism: plain
        tls:
          disabled: false
          rejectUnauthorized: true
        sessionTimeout: 30000
        rebalanceTimeout: 60000
        heartbeatInterval: 3000
        autoCommitInterval: 123.45
        autoCommitThreshold: 123.45
        maxBytesPerPartition: 1048576
        maxBytes: 10485760
        maxSocketErrors: 0
        minimizeDuplicates: false
        metadata:
        - name: string
          value: string
        description: string
    InputExec:
      required:
      - command
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          enum:
          - exec
          example: exec
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id059 []
          items:
            type: string
            example: string
          example: *id059
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        command:
          type: string
          title: Command
          description: Command to execute; supports Bourne shell (or CMD on Windows) syntax
          example: string
        retries:
          type: number
          title: Retry limit
          description: Maximum number of retry attempts in the event that the command fails
          default: 10
          minimum: 0
          example: 10
        scheduleType:
          title: Schedule type
          type: string
          enum:
          - interval
          - cronSchedule
          default: interval
          description: Select a schedule type; either an interval (in seconds) or a cron-style schedule.
          example: interval
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
        interval:
          type: number
          title: Interval
          description: Interval between command executions in seconds.
          default: 60
          minimum: 1
          example: 60
        cronSchedule:
          type: string
          title: Schedule
          description: Cron schedule to execute the command on.
          default: "* * * * *"
          example: "* * * * *"
      type: object
      example:
        id: string
        type: exec
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id059
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        command: string
        retries: 10
        scheduleType: interval
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        metadata:
        - name: string
          value: string
        description: string
        interval: 60
        cronSchedule: "* * * * *"
    InputFirehose:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - firehose
          example: firehose
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id060 []
          items:
            type: string
            example: string
          example: *id060
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
            example: string
          example:
          - string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 5
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: firehose
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id060
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        authTokens:
        - string
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        activityLogSampleRate: 100
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 5
        enableHealthCheck: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        metadata:
        - name: string
          value: string
        description: string
    InputGooglePubsub:
      required:
      - topicName
      - subscriptionName
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - google_pubsub
          example: google_pubsub
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id061 []
          items:
            type: string
            example: string
          example: *id061
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        topicName:
          type: string
          title: Topic ID
          description: ID of the topic to receive events from
          example: string
        subscriptionName:
          type: string
          title: Subscription ID
          description: ID of the subscription to use when receiving events
          example: string
        createTopic:
          type: boolean
          title: Create topic
          description: Create topic if it does not exist
          default: false
          example: false
        createSubscription:
          type: boolean
          title: Create subscription
          description: Create subscription if it does not exist
          default: true
          example: true
        region:
          type: string
          title: Region
          description: Region to retrieve messages from. Select 'default' to allow Google to auto-select the nearest region. When using ordered delivery, the selected region must be allowed by message storage policy.
          example: string
        googleAuthMethod:
          type: string
          title: Google authentication method
          description: Choose Auto to use Google Application Default Credentials (ADC), Manual to enter Google service account credentials directly, or Secret to select or create a stored secret that references Google service account credentials.
          default: manual
          enum:
          - auto
          - manual
          - secret
          example: manual
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
          example: string
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
          example: string
        maxBacklog:
          type: number
          title: Backlog limit
          description: If Destination exerts backpressure, this setting limits how many inbound events Stream will queue for processing before it stops retrieving events
          default: 1000
          minimum: 1
          example: 1000
        concurrency:
          type: number
          title: Number of concurrent streams
          description: How many streams to pull messages from at one time. Doubling the value doubles the number of messages this Source pulls from the topic (if available), while consuming more CPU and memory. Defaults to 5.
          default: 5
          minimum: 1
          maximum: 100
          example: 5
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Pull request timeout, in milliseconds
          default: 60000
          minimum: 10000
          example: 60000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
        orderedDelivery:
          type: boolean
          title: Ordered delivery
          description: Receive events in the order they were added to the queue. The process sending events must have ordering enabled.
          default: false
          example: false
      type: object
      example:
        id: string
        type: google_pubsub
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id061
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        topicName: string
        subscriptionName: string
        createTopic: false
        createSubscription: true
        region: string
        googleAuthMethod: manual
        serviceAccountCredentials: string
        secret: string
        maxBacklog: 1000
        concurrency: 5
        requestTimeout: 60000
        metadata:
        - name: string
          value: string
        description: string
        orderedDelivery: false
    InputCribl:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - cribl
          example: cribl
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id062 []
          items:
            type: string
            example: string
          example: *id062
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        filter:
          type: string
          example: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: cribl
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id062
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        filter: string
        metadata:
        - name: string
          value: string
        description: string
    InputCriblTcp:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - cribl_tcp
          example: cribl_tcp
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id063 []
          items:
            type: string
            example: string
          example: *id063
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 1000
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
          example: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
          example: 30
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        enableLoadBalancing:
          type: boolean
          title: Enable load balancing
          description: Load balance traffic across all Worker Processes
          default: false
          example: false
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: cribl_tcp
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id063
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveCxn: 1000
        socketIdleTimeout: 0
        socketEndingMaxWait: 30
        socketMaxLifespan: 0
        enableProxyHeader: false
        metadata:
        - name: string
          value: string
        enableLoadBalancing: false
        description: string
    InputCriblHttp:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - cribl_http
          example: cribl_http
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id064 []
          items:
            type: string
            example: string
          example: *id064
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
            example: string
          example:
          - string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 5
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: cribl_http
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id064
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        authTokens:
        - string
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        activityLogSampleRate: 100
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 5
        enableHealthCheck: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        metadata:
        - name: string
          value: string
        description: string
    InputCriblLakeHttp:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - cribl_lake_http
          example: cribl_lake_http
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id065 []
          items:
            type: string
            example: string
          example: *id065
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
            example: string
          example:
          - string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 5
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: cribl_lake_http
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id065
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        authTokens:
        - string
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        activityLogSampleRate: 100
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 5
        enableHealthCheck: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        metadata:
        - name: string
          value: string
        description: string
    InputTcpjson:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - tcpjson
          example: tcpjson
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id066 []
          items:
            type: string
            example: string
          example: *id066
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a connection
          default: /.*/
          example: /.*/
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 1000
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
          example: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
          example: 30
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        enableLoadBalancing:
          type: boolean
          title: Enable load balancing
          description: Load balance traffic across all Worker Processes
          default: false
          example: false
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          example: manual
        description:
          type: string
          title: Description
          example: string
        authToken:
          type: string
          title: Auth token
          description: Shared secret to be provided by any client (in authToken header field). If empty, unauthorized access is permitted.
          default: ""
          example: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: tcpjson
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id066
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        ipWhitelistRegex: /.*/
        maxActiveCxn: 1000
        socketIdleTimeout: 0
        socketEndingMaxWait: 30
        socketMaxLifespan: 0
        enableProxyHeader: false
        metadata:
        - name: string
          value: string
        enableLoadBalancing: false
        authType: manual
        description: string
        authToken: ""
        textSecret: string
    InputSystemMetrics:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - system_metrics
          example: system_metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id067 []
          items:
            type: string
            example: string
          example: *id067
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metric collections. Default is 10 seconds.
          example: 10
        host:
          type: object
          properties:
            mode:
              type: string
              description: Select level of detail for host metrics
              enum:
              - basic
              - all
              - custom
              - disabled
              default: basic
              example: basic
            custom:
              type: object
              properties:
                system:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for system metrics
                      enum:
                      - basic
                      - all
                      - custom
                      - disabled
                      default: basic
                      example: basic
                    processes:
                      type: boolean
                      default: false
                      title: Process metrics
                      description: Generate metrics for the numbers of processes in various states
                      example: false
                  example:
                    mode: basic
                    processes: false
                cpu:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for CPU metrics
                      enum:
                      - basic
                      - all
                      - custom
                      - disabled
                      default: basic
                      example: basic
                    perCpu:
                      type: boolean
                      default: false
                      title: Per-CPU metrics
                      description: Generate metrics for each CPU
                      example: false
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all CPU states
                      example: false
                    time:
                      type: boolean
                      default: false
                      title: CPU time metrics
                      description: Generate raw, monotonic CPU time counters
                      example: false
                  example:
                    mode: basic
                    perCpu: false
                    detail: false
                    time: false
                memory:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for memory metrics
                      enum:
                      - basic
                      - all
                      - custom
                      - disabled
                      default: basic
                      example: basic
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all memory states
                      example: false
                  example:
                    mode: basic
                    detail: false
                network:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for network metrics
                      enum:
                      - basic
                      - all
                      - custom
                      - disabled
                      default: basic
                      example: basic
                    devices:
                      type: array
                      title: Interface filter
                      description: "Network interfaces to include/exclude. Examples: eth0, !lo. All interfaces are included if this list is empty."
                      default: &id068
                      - "!lo"
                      - "*"
                      items:
                        type: string
                        example: string
                      example: *id068
                    perInterface:
                      type: boolean
                      default: false
                      title: Per-interface metrics
                      description: Generate separate metrics for each interface
                      example: false
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full network metrics
                      example: false
                  example:
                    mode: basic
                    devices: *id068
                    perInterface: false
                    detail: false
                disk:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of detail for disk metrics
                      enum:
                      - basic
                      - all
                      - custom
                      - disabled
                      default: basic
                      example: basic
                    devices:
                      type: array
                      title: Device filter
                      description: "Block devices to include/exclude. Examples: sda*, !loop*. Wildcards and ! (not) operators are supported. All devices are included if this list is empty."
                      default: &id069
                      - "!loop*"
                      - "*"
                      items:
                        type: string
                        example: string
                      example: *id069
                    mountpoints:
                      type: array
                      title: Mountpoint filter
                      description: "Filesystem mountpoints to include/exclude. Examples: /, /home, !/proc*, !/tmp. Wildcards and ! (not) operators are supported. All mountpoints are included if this list is empty."
                      default: &id070 []
                      items:
                        type: string
                        example: string
                      example: *id070
                    fstypes:
                      type: array
                      title: Filesystem type filter
                      description: "Filesystem types to include/exclude. Examples: ext4, !*tmpfs, !squashfs. Wildcards and ! (not) operators are supported. All types are included if this list is empty."
                      default: &id071 []
                      items:
                        type: string
                        example: string
                      example: *id071
                    perDevice:
                      type: boolean
                      default: false
                      title: Per-device metrics
                      description: Generate separate metrics for each device
                      example: false
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full disk metrics
                      example: false
                  example:
                    mode: basic
                    devices: *id069
                    mountpoints: *id070
                    fstypes: *id071
                    perDevice: false
                    detail: false
              example:
                system:
                  mode: basic
                  processes: false
                cpu:
                  mode: basic
                  perCpu: false
                  detail: false
                  time: false
                memory:
                  mode: basic
                  detail: false
                network:
                  mode: basic
                  devices: *id068
                  perInterface: false
                  detail: false
                disk:
                  mode: basic
                  devices: *id069
                  mountpoints: *id070
                  fstypes: *id071
                  perDevice: false
                  detail: false
          example:
            mode: basic
            custom:
              system:
                mode: basic
                processes: false
              cpu:
                mode: basic
                perCpu: false
                detail: false
                time: false
              memory:
                mode: basic
                detail: false
              network:
                mode: basic
                devices: *id068
                perInterface: false
                detail: false
              disk:
                mode: basic
                devices: *id069
                mountpoints: *id070
                fstypes: *id071
                perDevice: false
                detail: false
        process:
          type: object
          properties:
            sets:
              type: array
              title: Process sets
              description: Configure sets to collect process metrics
              items:
                type: object
                required:
                - name
                - filter
                properties:
                  name:
                    type: string
                    title: Set Name
                    example: string
                  filter:
                    type: string
                    title: Filter Expression
                    example: string
                  includeChildren:
                    type: boolean
                    title: Include Child Processes
                    default: false
                    example: false
                example:
                  name: string
                  filter: string
                  includeChildren: false
              example:
              - name: string
                filter: string
                includeChildren: false
          example:
            sets:
            - name: string
              filter: string
              includeChildren: false
        container:
          type: object
          properties:
            mode:
              type: string
              description: Select the level of detail for container metrics
              enum:
              - basic
              - all
              - custom
              - disabled
              default: basic
              example: basic
            dockerSocket:
              type: array
              title: Docker socket
              description: Full paths for Docker's UNIX-domain socket
              default: &id072
              - /var/run/docker.sock
              - /run/docker.sock
              items:
                type: string
                example: string
              example: *id072
            dockerTimeout:
              type: number
              default: 5
              minimum: 1
              title: Docker timeout
              description: Timeout, in seconds, for the Docker API
              example: 5
            filters:
              type: array
              title: Container filters
              description: Containers matching any of these will be included. All are included if no filters are added.
              items:
                type: object
                required:
                - expr
                properties:
                  expr:
                    type: string
                    title: Expression
                    example: string
                example:
                  expr: string
              example:
              - expr: string
            allContainers:
              type: boolean
              default: false
              title: All containers
              description: Include stopped and paused containers
              example: false
            perDevice:
              type: boolean
              default: false
              title: Per-device metrics
              description: Generate separate metrics for each device
              example: false
            detail:
              type: boolean
              default: false
              title: Detailed metrics
              description: Generate full container metrics
              example: false
          example:
            mode: basic
            dockerSocket: *id072
            dockerTimeout: 5
            filters:
            - expr: string
            allContainers: false
            perDevice: false
            detail: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
              example: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
              example: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
              example: 24h
            compress:
              type: string
              title: Data compression format
              enum:
              - none
              - gzip
              default: gzip
              example: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/system_metrics
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/system_metrics
              example: $CRIBL_HOME/state/system_metrics
          example:
            enable: false
            timeWindow: 10m
            maxDataSize: 1GB
            maxDataTime: 24h
            compress: gzip
            destPath: $CRIBL_HOME/state/system_metrics
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: system_metrics
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id067
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        interval: 10
        host:
          mode: basic
          custom:
            system:
              mode: basic
              processes: false
            cpu:
              mode: basic
              perCpu: false
              detail: false
              time: false
            memory:
              mode: basic
              detail: false
            network:
              mode: basic
              devices: *id068
              perInterface: false
              detail: false
            disk:
              mode: basic
              devices: *id069
              mountpoints: *id070
              fstypes: *id071
              perDevice: false
              detail: false
        process:
          sets:
          - name: string
            filter: string
            includeChildren: false
        container:
          mode: basic
          dockerSocket: *id072
          dockerTimeout: 5
          filters:
          - expr: string
          allContainers: false
          perDevice: false
          detail: false
        metadata:
        - name: string
          value: string
        persistence:
          enable: false
          timeWindow: 10m
          maxDataSize: 1GB
          maxDataTime: 24h
          compress: gzip
          destPath: $CRIBL_HOME/state/system_metrics
        description: string
    InputSystemState:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - system_state
          example: system_state
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id073 []
          items:
            type: string
            example: string
          example: *id073
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        interval:
          type: number
          default: 300
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive state collections. Default is 300 seconds (5 minutes).
          example: 300
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        collectors:
          type: object
          properties:
            hostsfile:
              type: object
              title: Hosts File
              description: Creates events based on entries collected from the hosts file
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
              example:
                enable: true
            interfaces:
              type: object
              title: Interfaces
              description: Creates events for each of the host’s network interfaces
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
              example:
                enable: true
            disk:
              type: object
              title: Disks & File Systems
              description: Creates events for physical disks, partitions, and file systems
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
              example:
                enable: true
            metadata:
              type: object
              title: Host Info
              description: Creates events based on the host system’s current state
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
              example:
                enable: true
            routes:
              type: object
              title: Routes
              description: Creates events based on entries collected from the host’s network routes
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
              example:
                enable: true
            dns:
              type: object
              title: DNS
              description: Creates events for DNS resolvers and search entries
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
              example:
                enable: true
            user:
              type: object
              title: Users & Groups
              description: Creates events for local users and groups
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
              example:
                enable: true
            firewall:
              type: object
              title: Firewall
              description: Creates events for Firewall rules entries
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
              example:
                enable: true
            services:
              type: object
              title: Services
              description: Creates events from the list of services
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
              example:
                enable: true
            ports:
              type: object
              title: Listening Ports
              description: Creates events from list of listening ports
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
              example:
                enable: true
            loginUsers:
              type: object
              title: Logged-In Users
              description: Creates events from list of logged-in users
              properties:
                enable:
                  type: boolean
                  title: Enabled
                  default: true
                  example: true
              example:
                enable: true
          example:
            hostsfile:
              enable: true
            interfaces:
              enable: true
            disk:
              enable: true
            metadata:
              enable: true
            routes:
              enable: true
            dns:
              enable: true
            user:
              enable: true
            firewall:
              enable: true
            services:
              enable: true
            ports:
              enable: true
            loginUsers:
              enable: true
        persistence:
          type: object
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
              example: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
              example: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
              example: 24h
            compress:
              type: string
              title: Data compression format
              enum:
              - none
              - gzip
              default: none
              example: none
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/system_state
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/system_state
              example: $CRIBL_HOME/state/system_state
          example:
            enable: false
            timeWindow: 10m
            maxDataSize: 1GB
            maxDataTime: 24h
            compress: none
            destPath: $CRIBL_HOME/state/system_state
        disableNativeModule:
          type: boolean
          default: false
          title: Use Windows Tools
          description: Enable to use built-in tools (PowerShell) to collect events instead of native API (default) [Learn more](https://docs.cribl.io/edge/sources-system-state/#advanced-tab)
          example: false
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: system_state
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id073
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        interval: 300
        metadata:
        - name: string
          value: string
        collectors:
          hostsfile:
            enable: true
          interfaces:
            enable: true
          disk:
            enable: true
          metadata:
            enable: true
          routes:
            enable: true
          dns:
            enable: true
          user:
            enable: true
          firewall:
            enable: true
          services:
            enable: true
          ports:
            enable: true
          loginUsers:
            enable: true
        persistence:
          enable: false
          timeWindow: 10m
          maxDataSize: 1GB
          maxDataTime: 24h
          compress: none
          destPath: $CRIBL_HOME/state/system_state
        disableNativeModule: false
        description: string
    InputKubeMetrics:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - kube_metrics
          example: kube_metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id074 []
          items:
            type: string
            example: string
          example: *id074
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        interval:
          type: number
          default: 15
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metrics collections. Default is 15 secs.
          example: 15
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which Kubernetes objects to generate metrics for. Events are generated if no rules are given or of all the rules' expressions evaluate to true.
          items:
            type: object
            required:
            - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Kubernetes objects. Return 'true' to include it.
                example: string
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
                example: string
            example:
              filter: string
              description: string
          default: &id075
          - filter: "!metadata.namespace.startsWith('kube-')"
            description: Ignore the kube-* namespace
          example: *id075
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics on disk for Cribl Search
              default: false
              example: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
              example: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
              example: 24h
            compress:
              type: string
              title: Data compression format
              enum:
              - none
              - gzip
              default: gzip
              example: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/kube_metrics
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/<id>
              example: $CRIBL_HOME/state/kube_metrics
          example:
            enable: false
            timeWindow: 10m
            maxDataSize: 1GB
            maxDataTime: 24h
            compress: gzip
            destPath: $CRIBL_HOME/state/kube_metrics
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: kube_metrics
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id074
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        interval: 15
        rules: *id075
        metadata:
        - name: string
          value: string
        persistence:
          enable: false
          timeWindow: 10m
          maxDataSize: 1GB
          maxDataTime: 24h
          compress: gzip
          destPath: $CRIBL_HOME/state/kube_metrics
        description: string
    InputKubeLogs:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - kube_logs
          example: kube_logs
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id076 []
          items:
            type: string
            example: string
          example: *id076
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        interval:
          type: number
          default: 15
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between checks for new containers. Default is 15 secs.
          example: 15
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which Pods to collect logs from. Logs are collected if no rules are given or if all the rules' expressions evaluate to true.
          items:
            type: object
            required:
            - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Pod objects. Return 'true' to include it.
                example: string
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
                example: string
            example:
              filter: string
              description: string
          default: &id077
          - filter: "!metadata.namespace.startsWith('kube-')"
            description: Ignore the kube-* namespace
          example: *id077
        timestamps:
          type: boolean
          default: false
          title: Enable timestamps
          description: For use when containers do not emit a timestamp, prefix each line of output with a timestamp. If you enable this setting, you can use the Kubernetes Logs Event Breaker and the kubernetes_logs Pre-processing Pipeline to remove them from the events after the timestamps are extracted.
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        persistence:
          type: object
          title: Disk Spooling
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events on disk for Cribl Edge and Search. Default is disabled.
              default: false
              example: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time period for grouping spooled events. Default is 10m.
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space that can be consumed before older buckets are deleted. Examples: 420MB, 4GB. Default is 1GB."
              pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
              default: 1GB
              example: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data before older buckets are deleted. Examples: 2h, 4d. Default is 24h."
              pattern: \d+[smhd]$
              default: 24h
              example: 24h
            compress:
              type: string
              title: Compression
              description: Data compression format. Default is gzip.
              enum:
              - none
              - gzip
              default: gzip
              example: gzip
          example:
            enable: false
            timeWindow: 10m
            maxDataSize: 1GB
            maxDataTime: 24h
            compress: gzip
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        enableLoadBalancing:
          type: boolean
          title: Enable load balancing
          description: Load balance traffic across all Worker Processes
          default: false
          example: false
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: kube_logs
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id076
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        interval: 15
        rules: *id077
        timestamps: false
        metadata:
        - name: string
          value: string
        persistence:
          enable: false
          timeWindow: 10m
          maxDataSize: 1GB
          maxDataTime: 24h
          compress: gzip
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        enableLoadBalancing: false
        description: string
    InputKubeEvents:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - kube_events
          example: kube_events
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id078 []
          items:
            type: string
            example: string
          example: *id078
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        rules:
          type: array
          title: Filter Rules
          description: Filtering on event fields
          items:
            type: object
            required:
            - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Kubernetes objects. Return 'true' to include it.
                example: string
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
                example: string
            example:
              filter: string
              description: string
          default: &id079 []
          example: *id079
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: kube_events
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id078
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        rules: *id079
        metadata:
        - name: string
          value: string
        description: string
    InputWindowsMetrics:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - windows_metrics
          example: windows_metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id080 []
          items:
            type: string
            example: string
          example: *id080
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between consecutive metric collections. Default is 10 seconds.
          example: 10
        host:
          type: object
          properties:
            mode:
              type: string
              description: Select level of detail for host metrics
              enum:
              - basic
              - all
              - custom
              - disabled
              default: basic
              example: basic
            custom:
              type: object
              properties:
                system:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for system metrics
                      enum:
                      - basic
                      - all
                      - custom
                      - disabled
                      default: basic
                      example: basic
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all system information
                      example: false
                  example:
                    mode: basic
                    detail: false
                cpu:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for CPU metrics
                      enum:
                      - basic
                      - all
                      - custom
                      - disabled
                      default: basic
                      example: basic
                    perCpu:
                      type: boolean
                      default: false
                      title: Per-CPU metrics
                      description: Generate metrics for each CPU
                      example: false
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all CPU states
                      example: false
                    time:
                      type: boolean
                      default: false
                      title: CPU time metrics
                      description: Generate raw, monotonic CPU time counters
                      example: false
                  example:
                    mode: basic
                    perCpu: false
                    detail: false
                    time: false
                memory:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for memory metrics
                      enum:
                      - basic
                      - all
                      - custom
                      - disabled
                      default: basic
                      example: basic
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate metrics for all memory states
                      example: false
                  example:
                    mode: basic
                    detail: false
                network:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for network metrics
                      enum:
                      - basic
                      - all
                      - custom
                      - disabled
                      default: basic
                      example: basic
                    devices:
                      type: array
                      title: Interface filter
                      description: Network interfaces to include/exclude. All interfaces are included if this list is empty.
                      default: &id081
                      - "!6to4*"
                      - "!*Debug*"
                      - "!*Virtual*"
                      - "!*Tunneling*"
                      - "!*IP-HTTPS*"
                      - "*"
                      items:
                        type: string
                        example: string
                      example: *id081
                    perInterface:
                      type: boolean
                      default: false
                      title: Per interface metrics
                      description: Generate separate metrics for each interface
                      example: false
                    detail:
                      type: boolean
                      default: false
                      title: Detailed metrics
                      description: Generate full network metrics
                      example: false
                  example:
                    mode: basic
                    devices: *id081
                    perInterface: false
                    detail: false
                disk:
                  type: object
                  properties:
                    mode:
                      type: string
                      description: Select the level of details for disk metrics
                      enum:
                      - basic
                      - all
                      - custom
                      - disabled
                      default: basic
                      example: basic
                    volumes:
                      type: array
                      title: Volume filter
                      description: "Windows volumes to include/exclude. E.g.: C:, !E:, etc. Wildcards and ! (not) operators are supported. All volumes are included if this list is empty."
                      default: &id082
                      - "!HarddiskVolume*"
                      - "*"
                      items:
                        type: string
                        example: string
                      example: *id082
                    perVolume:
                      type: boolean
                      default: false
                      title: Per volume metrics
                      description: Generate separate metrics for each volume
                      example: false
                  example:
                    mode: basic
                    volumes: *id082
                    perVolume: false
              example:
                system:
                  mode: basic
                  detail: false
                cpu:
                  mode: basic
                  perCpu: false
                  detail: false
                  time: false
                memory:
                  mode: basic
                  detail: false
                network:
                  mode: basic
                  devices: *id081
                  perInterface: false
                  detail: false
                disk:
                  mode: basic
                  volumes: *id082
                  perVolume: false
          example:
            mode: basic
            custom:
              system:
                mode: basic
                detail: false
              cpu:
                mode: basic
                perCpu: false
                detail: false
                time: false
              memory:
                mode: basic
                detail: false
              network:
                mode: basic
                devices: *id081
                perInterface: false
                detail: false
              disk:
                mode: basic
                volumes: *id082
                perVolume: false
        process:
          type: object
          properties:
            sets:
              type: array
              title: Process sets
              description: Configure sets to collect process metrics
              items:
                type: object
                required:
                - name
                - filter
                properties:
                  name:
                    type: string
                    title: Set Name
                    example: string
                  filter:
                    type: string
                    title: Filter Expression
                    example: string
                  includeChildren:
                    type: boolean
                    title: Include Child Processes
                    default: false
                    example: false
                example:
                  name: string
                  filter: string
                  includeChildren: false
              example:
              - name: string
                filter: string
                includeChildren: false
          example:
            sets:
            - name: string
              filter: string
              includeChildren: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        persistence:
          type: object
          title: persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool metrics to disk for Cribl Edge and Search
              default: false
              example: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
              example: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
              example: 24h
            compress:
              type: string
              title: Data compression format
              enum:
              - none
              - gzip
              default: gzip
              example: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/windows_metrics
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/windows_metrics
              example: $CRIBL_HOME/state/windows_metrics
          example:
            enable: false
            timeWindow: 10m
            maxDataSize: 1GB
            maxDataTime: 24h
            compress: gzip
            destPath: $CRIBL_HOME/state/windows_metrics
        disableNativeModule:
          type: boolean
          default: false
          title: Use Windows Tools
          description: Enable to use built-in tools (PowerShell) to collect metrics instead of native API (default) [Learn more](https://docs.cribl.io/edge/sources-windows-metrics/#advanced-tab)
          example: false
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: windows_metrics
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id080
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        interval: 10
        host:
          mode: basic
          custom:
            system:
              mode: basic
              detail: false
            cpu:
              mode: basic
              perCpu: false
              detail: false
              time: false
            memory:
              mode: basic
              detail: false
            network:
              mode: basic
              devices: *id081
              perInterface: false
              detail: false
            disk:
              mode: basic
              volumes: *id082
              perVolume: false
        process:
          sets:
          - name: string
            filter: string
            includeChildren: false
        metadata:
        - name: string
          value: string
        persistence:
          enable: false
          timeWindow: 10m
          maxDataSize: 1GB
          maxDataTime: 24h
          compress: gzip
          destPath: $CRIBL_HOME/state/windows_metrics
        disableNativeModule: false
        description: string
    InputCrowdstrike:
      required:
      - queueName
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - crowdstrike
          example: crowdstrike
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id083 []
          items:
            type: string
            example: string
          example: *id083
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
          example: string
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
          example: /.*/
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
          example: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
          example: 1
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 21600
          minimum: 0
          maximum: 43200
          example: 21600
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
          example: 1
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
          example: 300
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
          example: false
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
          example: false
        preprocess:
          type: object
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
              example: string
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
                example: string
              example:
              - string
          example:
            disabled: true
            command: string
            args:
            - string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        checkpointing:
          type: object
          required:
          - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
              example: false
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
              default: 5
              maximum: 100
              minimum: 0
              example: 5
          example:
            enabled: false
            retries: 5
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
          example: 10
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
          example: string
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        tagAfterProcessing:
          enum:
          - false
          - true
          example: false
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
          example: string
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
          example: string
      type: object
      example:
        id: string
        type: crowdstrike
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id083
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        queueName: string
        fileFilter: /.*/
        awsAccountId: string
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        maxMessages: 1
        visibilityTimeout: 21600
        numReceivers: 1
        socketTimeout: 300
        skipOnError: false
        enableAssumeRole: true
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        enableSQSAssumeRole: false
        preprocess:
          disabled: true
          command: string
          args:
          - string
        metadata:
        - name: string
          value: string
        checkpointing:
          enabled: false
          retries: 5
        pollTimeout: 10
        encoding: string
        description: string
        awsApiKey: string
        awsSecret: string
        tagAfterProcessing: false
        processedTagKey: string
        processedTagValue: string
    InputDatadogAgent:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - datadog_agent
          example: datadog_agent
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id084 []
          items:
            type: string
            example: string
          example: *id084
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 5
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Toggle to Yes to extract each incoming metric to multiple events, one per data point. This works well when sending metrics to a statsd-type output. If sending metrics to DatadogHQ or any destination that accepts arbitrary JSON, leave toggled to No (the default).
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        proxyMode:
          type: object
          title: ""
          required:
          - enabled
          properties:
            enabled:
              type: boolean
              title: Forward API key validation requests
              default: false
              description: Toggle to Yes to send key validation requests from Datadog Agent to the Datadog API. If toggled to No (the default), Stream handles key validation requests by always responding that the key is valid.
              example: false
            rejectUnauthorized:
              type: boolean
              title: Reject unauthorized certificates
              description: Whether to reject certificates that cannot be verified against a valid CA (e.g., self-signed certificates).
              default: true
              example: true
          example:
            enabled: false
            rejectUnauthorized: true
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: datadog_agent
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id084
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        activityLogSampleRate: 100
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 5
        enableHealthCheck: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        extractMetrics: false
        metadata:
        - name: string
          value: string
        proxyMode:
          enabled: false
          rejectUnauthorized: true
        description: string
    InputDatagen:
      required:
      - samples
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - datagen
          example: datagen
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id085 []
          items:
            type: string
            example: string
          example: *id085
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        samples:
          title: Datagens
          type: array
          minItems: 1
          items:
            type: object
            required:
            - sample
            - eventsPerSec
            properties:
              sample:
                type: string
                title: Data Generator File Name
                example: string
              eventsPerSec:
                type: number
                title: Events Per Second Per Worker Node
                description: Maximum number of events to generate per second per Worker Node. Defaults to 10.
                default: 10
                minimum: 1
                example: 10
            example:
              sample: string
              eventsPerSec: 10
          example:
          - sample: string
            eventsPerSec: 10
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: datagen
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id085
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        samples:
        - sample: string
          eventsPerSec: 10
        metadata:
        - name: string
          value: string
        description: string
    InputHttpRaw:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - http_raw
          example: http_raw
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id086 []
          items:
            type: string
            example: string
          example: *id086
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: string
            example: string
          example:
          - string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 5
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        allowedPaths:
          type: array
          title: Allowed URI paths
          description: List of URI paths accepted by this input, wildcards are supported, e.g /api/v*/hook. Defaults to allow all.
          default: &id087
          - "*"
          items:
            type: string
            minLength: 1
            example: string
          example: *id087
        allowedMethods:
          type: array
          title: Allowed HTTP methods
          description: List of HTTP methods accepted by this input. Wildcards are supported (such as P*, GET). Defaults to allow all.
          default: &id088
          - "*"
          items:
            type: string
            minLength: 1
            example: string
          example: *id088
        authTokensExt:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
            - token
            properties:
              token:
                type: string
                title: Token
                description: "Shared secret to be provided by any client (Authorization: <token>)"
                example: string
              description:
                type: string
                title: Description
                example: string
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                  - name
                  - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                      example: string
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                      example: string
                  example:
                    name: string
                    value: string
                example:
                - name: string
                  value: string
            example:
              token: string
              description: string
              metadata:
              - name: string
                value: string
          example:
          - token: string
            description: string
            metadata:
            - name: string
              value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: http_raw
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id086
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        authTokens:
        - string
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        activityLogSampleRate: 100
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 5
        enableHealthCheck: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        metadata:
        - name: string
          value: string
        allowedPaths: *id087
        allowedMethods: *id088
        authTokensExt:
        - token: string
          description: string
          metadata:
          - name: string
            value: string
        description: string
    InputKinesis:
      required:
      - streamName
      - region
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - kinesis
          example: kinesis
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id089 []
          items:
            type: string
            example: string
          example: *id089
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        streamName:
          type: string
          title: Stream name
          description: Kinesis Data Stream to read data from
          example: string
        serviceInterval:
          type: number
          title: Service period
          description: Time interval in minutes between consecutive service calls
          default: 1
          minimum: 1
          maximum: 5
          example: 1
        shardExpr:
          type: string
          title: Shard selection expression
          description: A JavaScript expression to be called with each shardId for the stream. If the expression evaluates to a truthy value, the shard will be processed.
          default: "true"
          example: "true"
        shardIteratorType:
          type: string
          title: Shard iterator start
          description: Location at which to start reading a shard for the first time
          enum:
          - TRIM_HORIZON
          - LATEST
          default: TRIM_HORIZON
          example: TRIM_HORIZON
        payloadFormat:
          type: string
          title: Record data format
          description: Format of data inside the Kinesis Stream records. Gzip compression is automatically detected.
          enum:
          - cribl
          - ndjson
          - cloudwatch
          - line
          default: cribl
          example: cribl
        getRecordsLimit:
          type: number
          title: Records limit per call
          description: Maximum number of records per getRecords call
          minimum: 5000
          default: 5000
          maximum: 10000
          example: 5000
        getRecordsLimitTotal:
          type: number
          title: Total records limit
          description: Maximum number of records, across all shards, to pull down at once per Worker Process
          minimum: 20000
          default: 20000
          example: 20000
        loadBalancingAlgorithm:
          type: string
          title: Shard load balancing
          description: The load-balancing algorithm to use for spreading out shards across Workers and Worker Processes
          enum:
          - ConsistentHashing
          - RoundRobin
          default: ConsistentHashing
          example: ConsistentHashing
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: Region where the Kinesis stream is located
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: Kinesis stream service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to Kinesis stream-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Kinesis stream requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for Kinesis stream
          description: Use Assume Role credentials to access Kinesis stream
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        verifyKPLCheckSums:
          type: boolean
          title: Verify KPL checksums
          description: Verify Kinesis Producer Library (KPL) event checksums
          default: false
          example: false
        avoidDuplicates:
          type: boolean
          title: Avoid duplicate records
          description: When resuming streaming from a stored state, Stream will read the next available record, rather than rereading the last-read record. Enabling this setting can cause data loss after a Worker Node's unexpected shutdown or restart.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
      type: object
      example:
        id: string
        type: kinesis
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id089
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        streamName: string
        serviceInterval: 1
        shardExpr: "true"
        shardIteratorType: TRIM_HORIZON
        payloadFormat: cribl
        getRecordsLimit: 5000
        getRecordsLimitTotal: 20000
        loadBalancingAlgorithm: ConsistentHashing
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        verifyKPLCheckSums: false
        avoidDuplicates: false
        metadata:
        - name: string
          value: string
        description: string
        awsApiKey: string
        awsSecret: string
    InputCriblmetrics:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - criblmetrics
          example: criblmetrics
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id090 []
          items:
            type: string
            example: string
          example: *id090
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        prefix:
          type: string
          title: Metric name prefix
          description: A prefix that is applied to the metrics provided by Cribl Stream
          default: cribl.logstream.
          example: cribl.logstream.
        fullFidelity:
          type: boolean
          title: Full fidelity
          description: "Include granular metrics. Disabling this will drop the following metrics events: `cribl.logstream.host.(in_bytes,in_events,out_bytes,out_events)`, `cribl.logstream.index.(in_bytes,in_events,out_bytes,out_events)`, `cribl.logstream.source.(in_bytes,in_events,out_bytes,out_events)`, `cribl.logstream.sourcetype.(in_bytes,in_events,out_bytes,out_events)`."
          default: true
          example: true
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: criblmetrics
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id090
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        prefix: cribl.logstream.
        fullFidelity: true
        metadata:
        - name: string
          value: string
        description: string
    InputMetrics:
      required:
      - host
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - metrics
          example: metrics
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id091 []
          items:
            type: string
            example: string
          example: *id091
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
          example: 0.0.0.0
        udpPort:
          type: number
          title: UDP Port
          maximum: 65535
          description: Enter UDP port number to listen on. Not required if listening on TCP.
          example: 123.45
        tcpPort:
          type: number
          title: TCP Port
          maximum: 65535
          description: Enter TCP port number to listen on. Not required if listening on UDP.
          example: 123.45
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking. Only applies to UDP.
          default: 1000
          minimum: 0
          example: 1000
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
          example: /.*/
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy Protocol V1 or V2
          default: false
          example: false
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
          example: 123.45
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: metrics
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id091
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        udpPort: 123.45
        tcpPort: 123.45
        maxBufferSize: 1000
        ipWhitelistRegex: /.*/
        enableProxyHeader: false
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        metadata:
        - name: string
          value: string
        udpSocketRxBufSize: 123.45
        description: string
    InputS3:
      required:
      - queueName
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - s3
          example: s3
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id092 []
          items:
            type: string
            example: string
          example: *id092
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
          example: string
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
          example: /.*/
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
          example: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
          example: 1
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 600
          minimum: 0
          maximum: 43200
          example: 600
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
          example: 1
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
          example: 300
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
          example: false
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
          example: false
        preprocess:
          type: object
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
              example: string
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
                example: string
              example:
              - string
          example:
            disabled: true
            command: string
            args:
            - string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
          example: 5
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
          default: 600
          maximum: 3600
          minimum: 1
          example: 600
        checkpointing:
          type: object
          required:
          - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
              example: false
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
              default: 5
              maximum: 100
              minimum: 0
              example: 5
          example:
            enabled: false
            retries: 5
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
          example: 10
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
          example: string
        tagAfterProcessing:
          type: boolean
          title: Tag after processing
          description: Add a tag to processed S3 objects. Requires s3:GetObjectTagging and s3:PutObjectTagging AWS permissions.
          default: false
          example: false
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
          example: string
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
          example: string
      type: object
      example:
        id: string
        type: s3
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id092
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        queueName: string
        fileFilter: /.*/
        awsAccountId: string
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        maxMessages: 1
        visibilityTimeout: 600
        numReceivers: 1
        socketTimeout: 300
        skipOnError: false
        enableAssumeRole: true
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        enableSQSAssumeRole: false
        preprocess:
          disabled: true
          command: string
          args:
          - string
        metadata:
        - name: string
          value: string
        parquetChunkSizeMB: 5
        parquetChunkDownloadTimeout: 600
        checkpointing:
          enabled: false
          retries: 5
        pollTimeout: 10
        encoding: string
        tagAfterProcessing: false
        description: string
        awsApiKey: string
        awsSecret: string
        processedTagKey: string
        processedTagValue: string
    InputS3Inventory:
      required:
      - queueName
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - s3_inventory
          example: s3_inventory
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id093 []
          items:
            type: string
            example: string
          example: *id093
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
          example: string
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
          example: /.*/
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
          example: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
          example: 1
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 600
          minimum: 0
          maximum: 43200
          example: 600
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
          example: 1
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
          example: 300
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
          example: false
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
          example: false
        preprocess:
          type: object
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
              example: string
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
                example: string
              example:
              - string
          example:
            disabled: true
            command: string
            args:
            - string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
          example: 5
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
          default: 600
          maximum: 3600
          minimum: 1
          example: 600
        checkpointing:
          type: object
          required:
          - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
              example: false
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
              default: 5
              maximum: 100
              minimum: 0
              example: 5
          example:
            enabled: false
            retries: 5
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
          example: 10
        checksumSuffix:
          type: string
          title: Checksum Suffix
          description: Filename suffix of the manifest checksum file. If a filename matching this suffix is received        in the queue, the matching manifest file will be downloaded and validated against its value. Defaults to "checksum"
          default: checksum
          example: checksum
        maxManifestSizeKB:
          type: integer
          title: Manifest size limit (KB)
          description: Maximum download size (KB) of each manifest or checksum file. Manifest files larger than this size will not be read.        Defaults to 4096.
          default: 4096
          minimum: 1
          example: 4096
        validateInventoryFiles:
          type: boolean
          title: Validate inventory files
          description: If set to Yes, each inventory file in the manifest will be validated against its checksum. Defaults to false
          default: false
          example: false
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        tagAfterProcessing:
          enum:
          - false
          - true
          example: false
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
          example: string
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
          example: string
      type: object
      example:
        id: string
        type: s3_inventory
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id093
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        queueName: string
        fileFilter: /.*/
        awsAccountId: string
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        maxMessages: 1
        visibilityTimeout: 600
        numReceivers: 1
        socketTimeout: 300
        skipOnError: false
        enableAssumeRole: true
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        enableSQSAssumeRole: false
        preprocess:
          disabled: true
          command: string
          args:
          - string
        metadata:
        - name: string
          value: string
        parquetChunkSizeMB: 5
        parquetChunkDownloadTimeout: 600
        checkpointing:
          enabled: false
          retries: 5
        pollTimeout: 10
        checksumSuffix: checksum
        maxManifestSizeKB: 4096
        validateInventoryFiles: false
        description: string
        awsApiKey: string
        awsSecret: string
        tagAfterProcessing: false
        processedTagKey: string
        processedTagValue: string
    InputSnmp:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - snmp
          example: snmp
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id094 []
          items:
            type: string
            example: string
          example: *id094
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: UDP port
          maximum: 65535
          description: UDP port to receive SNMP traps on. Defaults to 162.
          default: 162
          example: 162
        snmpV3Auth:
          type: object
          title: SNMPv3 authentication
          description: Authentication parameters for SNMPv3 trap. Set the log level to debug if you are experiencing authentication or decryption issues.
          required:
          - v3AuthEnabled
          properties:
            v3AuthEnabled:
              type: boolean
              title: Enabled
              default: false
              example: false
            allowUnmatchedTrap:
              type: boolean
              title: Allow unmatched traps
              description: Pass through traps that don't match any of the configured users. @{product} will not attempt to decrypt these traps.
              default: false
              example: false
            v3Users:
              type: array
              title: SNMP v3 users
              description: User credentials for receiving v3 traps
              minItems: 1
              items:
                type: object
                required:
                - name
                properties:
                  name:
                    title: V3 name
                    type: string
                    minLength: 1
                    example: string
                  authProtocol:
                    type: string
                    default: none
                    enum:
                    - none
                    - md5
                    - sha
                    - sha224
                    - sha256
                    - sha384
                    - sha512
                    title: Authentication protocol
                    example: none
                  authKey:
                    example: string
                  privProtocol:
                    default: none
                    example: none
                example:
                  name: string
                  authProtocol: none
                  authKey: string
                  privProtocol: none
              example:
              - name: string
                authProtocol: none
                authKey: string
                privProtocol: none
          example:
            v3AuthEnabled: false
            allowUnmatchedTrap: false
            v3Users:
            - name: string
              authProtocol: none
              authKey: string
              privProtocol: none
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking.
          default: 1000
          minimum: 0
          example: 1000
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
          example: /.*/
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
          example: 123.45
        varbindsWithTypes:
          type: boolean
          title: Include varbind types
          description: If enabled, parses varbinds as an array of objects that include OID, value, and type
          default: false
          example: false
        bestEffortParsing:
          type: boolean
          title: Best effort parsing
          description: If enabled, the parser will attempt to parse varbind octet strings as UTF-8, first, otherwise will fallback to other methods
          default: false
          example: false
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: snmp
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id094
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 162
        snmpV3Auth:
          v3AuthEnabled: false
          allowUnmatchedTrap: false
          v3Users:
          - name: string
            authProtocol: none
            authKey: string
            privProtocol: none
        maxBufferSize: 1000
        ipWhitelistRegex: /.*/
        metadata:
        - name: string
          value: string
        udpSocketRxBufSize: 123.45
        varbindsWithTypes: false
        bestEffortParsing: false
        description: string
    InputOpenTelemetry:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - open_telemetry
          example: open_telemetry
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id095 []
          items:
            type: string
            example: string
          example: *id095
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 4317
          example: 4317
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          example: string
        captureHeaders:
          example: string
        activityLogSampleRate:
          example: string
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 sec.; maximum 600 sec. (10 min.).
          default: 15
          minimum: 1
          maximum: 600
          example: 15
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Enable to expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist.
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        protocol:
          type: string
          title: Protocol
          description: Select whether to leverage gRPC or HTTP for OpenTelemetry
          enum:
          - grpc
          - http
          default: grpc
          example: grpc
        extractSpans:
          type: boolean
          title: Extract spans
          description: Enable to extract each incoming span to a separate event
          default: false
          example: false
        extractMetrics:
          type: boolean
          title: Extract metrics
          description: Enable to extract each incoming Gauge or IntGauge metric to multiple events, one per data point
          default: false
          example: false
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when interpreting received data
          enum:
          - 0.10.0
          - 1.3.1
          default: 0.10.0
          example: 0.10.0
        authType:
          type: string
          title: Authentication type
          description: OpenTelemetry authentication type
          enum:
          - none
          - basic
          - credentialsSecret
          - token
          - textSecret
          - oauth
          default: none
          example: none
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 1000
        description:
          type: string
          title: Description
          example: string
        username:
          type: string
          title: Username
          example: string
        password:
          type: string
          title: Password
          example: string
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: string
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: string
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: string
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: string
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
          example: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: string
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: string
              value:
                type: string
                title: Value
                description: OAuth header value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        extractLogs:
          type: boolean
          title: Extract logs
          description: Enable to extract each incoming log record to a separate event
          default: false
          example: false
      type: object
      example:
        id: string
        type: open_telemetry
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id095
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 4317
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: string
        captureHeaders: string
        activityLogSampleRate: string
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 15
        enableHealthCheck: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        protocol: grpc
        extractSpans: false
        extractMetrics: false
        otlpVersion: 0.10.0
        authType: none
        metadata:
        - name: string
          value: string
        maxActiveCxn: 1000
        description: string
        username: string
        password: string
        token: string
        credentialsSecret: string
        textSecret: string
        loginUrl: string
        secretParamName: string
        secret: string
        tokenAttributeName: string
        authHeaderExpr: "`Bearer ${token}`"
        tokenTimeoutSecs: 3600
        oauthParams:
        - name: string
          value: string
        oauthHeaders:
        - name: string
          value: string
        extractLogs: false
    InputModelDrivenTelemetry:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - model_driven_telemetry
          example: model_driven_telemetry
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id096 []
          items:
            type: string
            example: string
          example: *id096
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 57000
          example: 57000
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 1000
        shutdownTimeoutMs:
          type: number
          title: Shutdown timeout
          description: Time in milliseconds to allow the server to shutdown gracefully before forcing shutdown. Defaults to 5000.
          default: 5000
          minimum: 1
          example: 5000
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: model_driven_telemetry
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id096
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 57000
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        metadata:
        - name: string
          value: string
        maxActiveCxn: 1000
        shutdownTimeoutMs: 5000
        description: string
    InputSqs:
      required:
      - queueName
      - queueType
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - sqs
          example: sqs
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id097 []
          items:
            type: string
            example: string
          example: *id097
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read events from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can only be evaluated at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
          example: string
        queueType:
          title: Queue type
          type: string
          description: The queue type used (or created)
          enum:
          - standard
          - fifo
          default: standard
          example: standard
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
          example: string
        createQueue:
          type: boolean
          title: Create queue
          description: Create queue if it does not exist
          default: false
          example: false
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: AWS Region where the SQS queue is located. Required, unless the Queue entry is a URL or ARN that includes a Region.
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: SQS service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to SQS-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SQS requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for SQS
          description: Use Assume Role credentials to access SQS
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 10
          minimum: 1
          maximum: 10
          example: 10
        visibilityTimeout:
          type: number
          title: Visibility Timeout Seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 600
          minimum: 0
          maximum: 43200
          example: 600
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
          example: 10
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 3
          minimum: 1
          maximum: 100
          example: 3
      type: object
      example:
        id: string
        type: sqs
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id097
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        queueName: string
        queueType: standard
        awsAccountId: string
        createQueue: false
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        maxMessages: 10
        visibilityTimeout: 600
        metadata:
        - name: string
          value: string
        pollTimeout: 10
        description: string
        awsApiKey: string
        awsSecret: string
        numReceivers: 3
    InputSyslog:
      required:
      - host
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - syslog
          example: syslog
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id098 []
          items:
            type: string
            example: string
          example: *id098
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
          example: 0.0.0.0
        udpPort:
          type: number
          title: UDP port
          maximum: 65535
          description: Enter UDP port number to listen on. Not required if listening on TCP.
          example: 123.45
        tcpPort:
          type: number
          title: TCP port
          maximum: 65535
          description: Enter TCP port number to listen on. Not required if listening on UDP.
          example: 123.45
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking. Only applies to UDP.
          default: 1000
          minimum: 0
          example: 1000
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
          example: /.*/
        timestampTimezone:
          type: string
          title: Default timezone
          description: Timezone to assign to timestamps without timezone info
          default: local
          example: local
        singleMsgUdpPackets:
          type: boolean
          title: Single msg per UDP
          description: Treat UDP packet data received as full syslog message
          default: false
          example: false
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports Proxy Protocol V1 or V2
          default: false
          example: false
        keepFieldsList:
          type: array
          title: Fields to keep
          description: Wildcard list of fields to keep from source data; * = ALL (default)
          default: &id099 []
          minItems: 0
          items:
            type: string
            example: string
          example: *id099
        octetCounting:
          type: boolean
          title: Octet count framing
          description: Enable if incoming messages use octet counting per RFC 6587.
          default: false
          example: false
        inferFraming:
          type: boolean
          title: Infer Syslog framing
          description: Enable if we should infer the syslog framing of the incoming messages.
          default: true
          example: true
        strictlyInferOctetCounting:
          type: boolean
          title: Strictly infer octet count framing
          description: Enable if we should infer octet counting only if the messages comply with RFC 5424.
          default: true
          example: true
        allowNonStandardAppName:
          type: boolean
          title: Allow non-standard app name
          description: Enable if RFC 3164-formatted messages have hyphens in the app name portion of the TAG section. If disabled, only alphanumeric characters and underscores are allowed. Ignored for RFC 5424-formatted messages.
          default: false
          example: false
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process for TCP connections. Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 1000
        socketIdleTimeout:
          type: number
          title: TCP socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
          example: 0
        socketEndingMaxWait:
          type: number
          title: TCP forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
          example: 30
        socketMaxLifespan:
          type: number
          title: TCP Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
          example: 0
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
          example: 123.45
        enableLoadBalancing:
          type: boolean
          title: Enable TCP load balancing
          description: Load balance traffic across all Worker Processes
          default: false
          example: false
        description:
          type: string
          title: Description
          example: string
        enableEnhancedProxyHeaderParsing:
          type: boolean
          title: Enable enhanced TLS handshake for proxy protocol
          description: When enabled, parses PROXY protocol headers during the TLS handshake. Disable if compatibility issues arise.
          example: true
      type: object
      anyOf:
      - required:
        - host
        - udpPort
        example: string
      - required:
        - host
        - tcpPort
        example: string
      example:
        id: string
        type: syslog
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id098
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        udpPort: 123.45
        tcpPort: 123.45
        maxBufferSize: 1000
        ipWhitelistRegex: /.*/
        timestampTimezone: local
        singleMsgUdpPackets: false
        enableProxyHeader: false
        keepFieldsList: *id099
        octetCounting: false
        inferFraming: true
        strictlyInferOctetCounting: true
        allowNonStandardAppName: false
        maxActiveCxn: 1000
        socketIdleTimeout: 0
        socketEndingMaxWait: 30
        socketMaxLifespan: 0
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        metadata:
        - name: string
          value: string
        udpSocketRxBufSize: 123.45
        enableLoadBalancing: false
        description: string
        enableEnhancedProxyHeaderParsing: true
    InputFile:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          enum:
          - file
          example: file
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id100 []
          items:
            type: string
            example: string
          example: *id100
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        mode:
          type: string
          enum:
          - auto
          - manual
          default: auto
          description: Choose how to discover files to monitor
          example: auto
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between scanning for files
          example: 10
        filenames:
          type: array
          title: Filename allowlist
          description: The full path of discovered files are matched against this wildcard list
          default: &id101
          - "*/log/*"
          - "*log"
          items:
            type: string
            example: string
          example: *id101
        tailOnly:
          type: boolean
          default: false
          title: Collect from end
          description: Read only new entries at the end of all files discovered at next startup. @{product} will then read newly discovered files from the head. Disable this to resume reading all files from head.
          example: false
        idleTimeout:
          type: number
          default: 300
          minimum: 1
          title: Idle timeout
          description: Time, in seconds, before an idle file is closed
          example: 300
        maxAgeDur:
          type: string
          title: Age duration limit
          description: "The maximum age of files to monitor. Format examples: 60s, 4h, 3d, 1w. Age is relative to file modification time. Leave empty to apply no age filters."
          example: string
        checkFileModTime:
          type: boolean
          default: false
          title: Check file modification times
          description: Skip files with modification times earlier than the maximum age duration
          example: false
        forceText:
          type: boolean
          default: false
          title: Force text format
          description: Forces files containing binary data to be streamed as text
          example: false
        hashLen:
          type: number
          default: 256
          minimum: 1
          title: Hash length
          description: Length of file header bytes to use in hash for unique file identification
          example: 256
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        description:
          type: string
          title: Description
          example: string
        path:
          type: string
          title: Search path
          description: Directory path to search for files. Environment variables will be resolved, e.g. $CRIBL_HOME/log/.
          example: string
        depth:
          type: number
          minimum: 0
          title: Max depth
          description: Set how many subdirectories deep to search. Use 0 to search only files in the given path, 1 to also look in its immediate subdirectories, etc. Leave it empty for unlimited depth.
          example: 123.45
        suppressMissingPathErrors:
          type: boolean
          default: false
          title: Suppress errors when search path does not exist
          example: false
        deleteFiles:
          type: boolean
          default: false
          title: Delete files
          description: Delete files after they have been collected
          example: false
        includeUnidentifiableBinary:
          type: boolean
          default: false
          title: Enable binary files
          description: Stream binary files as Base64-encoded chunks.
          example: false
      type: object
      example:
        id: string
        type: file
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id100
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        mode: auto
        interval: 10
        filenames: *id101
        tailOnly: false
        idleTimeout: 300
        maxAgeDur: string
        checkFileModTime: false
        forceText: false
        hashLen: 256
        metadata:
        - name: string
          value: string
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        description: string
        path: string
        depth: 123.45
        suppressMissingPathErrors: false
        deleteFiles: false
        includeUnidentifiableBinary: false
    InputTcp:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - tcp
          example: tcp
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id102 []
          items:
            type: string
            example: string
          example: *id102
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a connection
          default: /.*/
          example: /.*/
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 1000
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
          example: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
          example: 30
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        enableHeader:
          type: boolean
          title: Enable header
          description: 'Client will pass the header record with every new connection. The header can contain an authToken, and an object with a list of fields and values to add to every event. These fields can be used to simplify Event Breaker selection, routing, etc. Header has this format, and must be followed by a newline: { "authToken" : "myToken", "fields": { "field1": "value1", "field2": "value2" } }'
          default: false
          example: false
        preprocess:
          type: object
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
              example: string
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
                example: string
              example:
              - string
          example:
            disabled: true
            command: string
            args:
            - string
        description:
          type: string
          title: Description
          example: string
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          example: manual
      type: object
      example:
        id: string
        type: tcp
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id102
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        ipWhitelistRegex: /.*/
        maxActiveCxn: 1000
        socketIdleTimeout: 0
        socketEndingMaxWait: 30
        socketMaxLifespan: 0
        enableProxyHeader: false
        metadata:
        - name: string
          value: string
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        enableHeader: false
        preprocess:
          disabled: true
          command: string
          args:
          - string
        description: string
        authType: manual
    InputAppscope:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - appscope
          example: appscope
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id103 []
          items:
            type: string
            example: string
          example: *id103
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to establish a connection
          default: /.*/
          example: /.*/
        maxActiveCxn:
          type: number
          title: Active connection limit
          description: Maximum number of active connections allowed per Worker Process. Use 0 for unlimited.
          default: 1000
          minimum: 0
          example: 1000
        socketIdleTimeout:
          type: number
          title: Socket idle timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. After this time, the connection will be closed. Leave at 0 for no inactive socket monitoring.
          default: 0
          minimum: 0
          example: 0
        socketEndingMaxWait:
          type: number
          title: Forced socket termination timeout (seconds)
          description: How long the server will wait after initiating a closure for a client to close its end of the connection. If the client doesn't close the connection within this time, the server will forcefully terminate the socket to prevent resource leaks and ensure efficient connection cleanup and system stability. Leave at 0 for no inactive socket monitoring.
          default: 30
          minimum: 0
          example: 30
        socketMaxLifespan:
          type: number
          title: Socket max lifespan (seconds)
          description: The maximum duration a socket can remain open, even if active. This helps manage resources and mitigate issues caused by TCP pinning. Set to 0 to disable.
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Enable proxy protocol
          description: Enable if the connection is proxied by a device that supports proxy protocol v1 or v2
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        enableUnixPath:
          type: boolean
          title: UNIX domain socket
          description: Toggle to Yes to specify a file-backed UNIX domain socket connection, instead of a network host and port.
          default: false
          example: false
        filter:
          type: object
          properties:
            allow:
              type: array
              title: Rules
              description: Specify processes that AppScope should be loaded into, and the config to use.
              items:
                type: object
                properties:
                  procname:
                    type: string
                    title: Process name
                    description: Specify the name of a process or family of processes.
                    example: string
                  arg:
                    type: string
                    title: Process argument
                    description: Specify a string to substring-match against process command-line.
                    example: string
                  config:
                    type: string
                    title: AppScope config
                    description: Choose a config to apply to processes that match the process name and/or argument.
                    example: string
                required:
                - procname
                - config
                example:
                  procname: string
                  arg: string
                  config: string
              example:
              - procname: string
                arg: string
                config: string
            transportURL:
              type: string
              title: Transport override
              description: To override the UNIX domain socket or address/port specified in General Settings (while leaving Authentication settings as is), enter a URL.
              example: string
          example:
            allow:
            - procname: string
              arg: string
              config: string
            transportURL: string
        persistence:
          type: object
          title: Persistence
          properties:
            enable:
              type: boolean
              title: Enable disk spooling
              description: Spool events and metrics on disk for Cribl Edge and Search
              default: false
              example: false
            timeWindow:
              type: string
              title: Bucket time span
              description: Time span for each file bucket
              default: 10m
              example: 10m
            maxDataSize:
              type: string
              title: Data size limit
              description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1GB
              example: 1GB
            maxDataTime:
              title: Data age limit
              type: string
              description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
              pattern: \d+[smhd]$
              default: 24h
              example: 24h
            compress:
              type: string
              title: Data compression format
              enum:
              - none
              - gzip
              default: gzip
              example: gzip
            destPath:
              type: string
              title: Path location
              default: $CRIBL_HOME/state/appscope
              description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/appscope
              example: $CRIBL_HOME/state/appscope
          example:
            enable: false
            timeWindow: 10m
            maxDataSize: 1GB
            maxDataTime: 24h
            compress: gzip
            destPath: $CRIBL_HOME/state/appscope
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          example: manual
        description:
          type: string
          title: Description
          example: string
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          example: string
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        unixSocketPath:
          type: string
          title: UNIX socket path
          default: $CRIBL_HOME/state/appscope.sock
          description: Path to the UNIX domain socket to listen on.
          example: $CRIBL_HOME/state/appscope.sock
        unixSocketPerms:
          type: string
          title: UNIX socket permissions
          description: Permissions to set for socket e.g., 777. If empty, falls back to the runtime user's default permissions.
          example: string
        authToken:
          type: string
          title: Auth token
          description: Shared secret to be provided by any client (in authToken header field). If empty, unauthorized access is permitted.
          default: ""
          example: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: appscope
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id103
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        ipWhitelistRegex: /.*/
        maxActiveCxn: 1000
        socketIdleTimeout: 0
        socketEndingMaxWait: 30
        socketMaxLifespan: 0
        enableProxyHeader: false
        metadata:
        - name: string
          value: string
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        enableUnixPath: false
        filter:
          allow:
          - procname: string
            arg: string
            config: string
          transportURL: string
        persistence:
          enable: false
          timeWindow: 10m
          maxDataSize: 1GB
          maxDataTime: 24h
          compress: gzip
          destPath: $CRIBL_HOME/state/appscope
        authType: manual
        description: string
        host: string
        port: 123.45
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        unixSocketPath: $CRIBL_HOME/state/appscope.sock
        unixSocketPerms: string
        authToken: ""
        textSecret: string
    InputWef:
      required:
      - host
      - port
      - subscriptions
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - wef
          example: wef
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id104 []
          items:
            type: string
            example: string
          example: *id104
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 5986
          example: 5986
        authMethod:
          type: string
          title: Authentication method
          description: How to authenticate incoming client connections
          enum:
          - clientCert
          - kerberos
          default: clientCert
          example: clientCert
        tls:
          type: object
          title: mTLS settings
          required:
          - privKeyPath
          - certPath
          - caPath
          properties:
            disabled:
              type: boolean
              title: Disabled
              description: Enable TLS
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate client certs
              description: Required for WEF certificate authentication
              default: true
              example: true
            requestCert:
              type: boolean
              title: Authenticate client
              description: Required for WEF certificate authentication
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: Name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Server path containing CA certificates (in PEM format) to use. Can reference $ENV_VARS. If multiple certificates are present in a .pem, each must directly certify the one preceding it.
              example: string
            commonNameRegex:
              type: string
              title: Common name
              description: Regex matching allowable common names in peer certificates' subject attribute
              default: /.*/
              example: /.*/
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            ocspCheck:
              type: boolean
              title: Verify certificate via OCSP
              description: Enable OCSP check of certificate
              default: false
              example: false
            keytab:
              example: string
            principal:
              example: string
            ocspCheckFailClose:
              type: boolean
              title: Strict validation
              description: If enabled, checks will fail on any OCSP error. Otherwise, checks will fail only when a certificate is revoked, ignoring other errors.
              default: false
              example: false
          example:
            disabled: false
            rejectUnauthorized: true
            requestCert: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            commonNameRegex: /.*/
            minVersion: TLSv1
            maxVersion: TLSv1
            ocspCheck: false
            keytab: string
            principal: string
            ocspCheckFailClose: false
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Preserve the client’s original IP address in the __srcIpPort field when connecting through an HTTP proxy that supports the X-Forwarded-For header. This does not apply to TCP-layer Proxy Protocol v1/v2.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events in the __headers field
          default: false
          example: false
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 90
          minimum: 1
          maximum: 600
          example: 90
        enableHealthCheck:
          type: boolean
          title: Health check endpoint
          description: Expose the /cribl_health endpoint, which returns 200 OK when this Source is healthy
          default: false
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        caFingerprint:
          type: string
          title: CA fingerprint override
          description: SHA1 fingerprint expected by the client, if it does not match the first certificate in the configured CA chain
          example: string
        keytab:
          type: string
          title: Keytab location
          description: Path to the keytab file containing the service principal credentials. @{product} will use `/etc/krb5.keytab` if not provided.
          example: string
        principal:
          type: string
          title: Service principal name
          description: Kerberos principal used for authentication, typically in the form HTTP/<hostname>@<REALM>
          example: string
        allowMachineIdMismatch:
          type: boolean
          title: Allow MachineID mismatch
          description: Allow events to be ingested even if their MachineID does not match the client certificate CN
          default: false
          example: false
        subscriptions:
          title: Subscriptions
          description: Subscriptions to events on forwarding endpoints
          type: array
          items:
            type: object
            required:
            - subscriptionName
            - contentFormat
            - heartbeatInterval
            - batchTimeout
            - targets
            - id
            minLength: 1
            properties:
              id:
                title: Subscription id
                type: string
                example: string
              subscriptionName:
                title: Subscription name
                type: string
                example: string
              version:
                title: Version
                type: string
                description: Version UUID for this subscription. If any subscription parameters are modified, this value will change.
                example: string
              contentFormat:
                title: Format
                type: string
                enum:
                - Raw
                - RenderedText
                description: Content format in which the endpoint should deliver events
                default: Raw
                example: Raw
              heartbeatInterval:
                title: Heartbeat
                type: number
                description: Maximum time (in seconds) between endpoint checkins before considering it unavailable
                minimum: 1
                default: 60
                example: 60
              batchTimeout:
                title: Batch timeout
                type: number
                description: Interval (in seconds) over which the endpoint should collect events before sending them to Stream
                minimum: 0
                default: 60
                example: 60
              readExistingEvents:
                title: Read existing events
                type: boolean
                description: Newly subscribed endpoints will send previously existing events. Disable to receive new events only.
                default: false
                example: false
              sendBookmarks:
                title: Use bookmarks
                type: boolean
                description: Keep track of which events have been received, resuming from that point after a re-subscription. This setting takes precedence over 'Read existing events'. See [Cribl Docs](https://docs.cribl.io/stream/sources-wef/#subscriptions) for more details.
                default: true
                example: true
              compress:
                title: Compression
                type: boolean
                description: Receive compressed events from the source
                default: true
                example: true
              targets:
                type: array
                title: Targets
                description: The DNS names of the endpoints that should forward these events. You may use wildcards, such as *.mydomain.com
                items:
                  type: string
                  minLength: 1
                  example: string
                default: &id105
                - "*"
                example: *id105
              locale:
                title: Locale
                type: string
                description: The RFC-3066 locale the Windows clients should use when sending events. Defaults to "en-US".
                default: en-US
                example: en-US
              querySelector:
                type: string
                title: Query builder mode
                enum:
                - simple
                - xml
                default: simple
                example: simple
              metadata:
                type: array
                title: Fields
                description: Fields to add to events ingested under this subscription
                items:
                  type: object
                  required:
                  - name
                  - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                      example: string
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                      example: string
                  example:
                    name: string
                    value: string
                example:
                - name: string
                  value: string
            example:
              id: string
              subscriptionName: string
              version: string
              contentFormat: Raw
              heartbeatInterval: 60
              batchTimeout: 60
              readExistingEvents: false
              sendBookmarks: true
              compress: true
              targets: *id105
              locale: en-US
              querySelector: simple
              metadata:
              - name: string
                value: string
          example:
          - id: string
            subscriptionName: string
            version: string
            contentFormat: Raw
            heartbeatInterval: 60
            batchTimeout: 60
            readExistingEvents: false
            sendBookmarks: true
            compress: true
            targets: *id105
            locale: en-US
            querySelector: simple
            metadata:
            - name: string
              value: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
        logFingerprintMismatch:
          type: boolean
          title: Log CA fingerprint mismatch warning
          description: Log a warning if the client certificate authority (CA) fingerprint does not match the expected value. A mismatch prevents Cribl from receiving events from the Windows Event Forwarder.
          default: false
          example: false
      type: object
      example:
        id: string
        type: wef
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id104
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 5986
        authMethod: clientCert
        tls:
          disabled: false
          rejectUnauthorized: true
          requestCert: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          commonNameRegex: /.*/
          minVersion: TLSv1
          maxVersion: TLSv1
          ocspCheck: false
          keytab: string
          principal: string
          ocspCheckFailClose: false
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        keepAliveTimeout: 90
        enableHealthCheck: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        socketTimeout: 0
        caFingerprint: string
        keytab: string
        principal: string
        allowMachineIdMismatch: false
        subscriptions:
        - id: string
          subscriptionName: string
          version: string
          contentFormat: Raw
          heartbeatInterval: 60
          batchTimeout: 60
          readExistingEvents: false
          sendBookmarks: true
          compress: true
          targets: *id105
          locale: en-US
          querySelector: simple
          metadata:
          - name: string
            value: string
        metadata:
        - name: string
          value: string
        description: string
        logFingerprintMismatch: false
    InputWinEventLogs:
      required:
      - logNames
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - win_event_logs
          example: win_event_logs
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id106 []
          items:
            type: string
            example: string
          example: *id106
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        logNames:
          type: array
          title: Event logs
          description: Enter the event logs to collect. Run "Get-WinEvent -ListLog *" in PowerShell to see the available logs.
          default: &id107
          - Application
          - Security
          - System
          items:
            type: string
            example: string
          minItems: 1
          uniqueItems: true
          example: *id107
        readMode:
          type: string
          default: oldest
          enum:
          - oldest
          - newest
          title: Read mode
          description: Read all stored and future event logs, or only future events
          example: oldest
        eventFormat:
          type: string
          default: json
          enum:
          - json
          - xml
          title: Event format
          description: Format of individual events
          example: json
        disableNativeModule:
          type: boolean
          default: false
          title: Use Windows Tools
          description: Enable to use built-in tools (PowerShell for JSON, wevtutil for XML) to collect event logs instead of native API (default) [Learn more](https://docs.cribl.io/edge/sources-windows-event-logs/#advanced-settings)
          example: false
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: Time, in seconds, between checking for new entries (Applicable for pre-4.8.0 nodes that use Windows Tools)
          example: 10
        batchSize:
          type: number
          default: 500
          minimum: 1
          title: Batch size
          description: The maximum number of events to read in one polling interval. A batch size higher than 500 can cause delays when pulling from multiple event logs. (Applicable for pre-4.8.0 nodes that use Windows Tools)
          example: 500
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        maxEventBytes:
          type: number
          title: Max event bytes
          description: The maximum number of bytes in an event before it is flushed to the pipelines
          default: 51200
          minimum: 1
          maximum: 134217728
          example: 51200
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: win_event_logs
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id106
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        logNames: *id107
        readMode: oldest
        eventFormat: json
        disableNativeModule: false
        interval: 10
        batchSize: 500
        metadata:
        - name: string
          value: string
        maxEventBytes: 51200
        description: string
    InputRawUdp:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - raw_udp
          example: raw_udp
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id108 []
          items:
            type: string
            example: string
          example: *id108
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        maxBufferSize:
          type: number
          title: Buffer size limit (events)
          description: Maximum number of events to buffer when downstream is blocking.
          default: 1000
          minimum: 0
          example: 1000
        ipWhitelistRegex:
          type: string
          title: IP allowlist regex
          description: Regex matching IP addresses that are allowed to send data
          default: /.*/
          example: /.*/
        singleMsgUdpPackets:
          type: boolean
          title: Single msg per UDP
          description: If true, each UDP packet is assumed to contain a single message. If false, each UDP packet is assumed to contain multiple messages, separated by newlines.
          default: false
          example: false
        ingestRawBytes:
          type: boolean
          title: Ingest raw bytes
          description: If true, a __rawBytes field will be added to each event containing the raw bytes of the datagram.
          default: false
          example: false
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
          example: 123.45
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: raw_udp
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id108
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        maxBufferSize: 1000
        ipWhitelistRegex: /.*/
        singleMsgUdpPackets: false
        ingestRawBytes: false
        udpSocketRxBufSize: 123.45
        metadata:
        - name: string
          value: string
        description: string
    InputJournalFiles:
      required:
      - path
      - journals
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          enum:
          - journal_files
          example: journal_files
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id109 []
          items:
            type: string
            example: string
          example: *id109
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        path:
          type: string
          title: Search path
          description: Directory path to search for journals. Environment variables will be resolved, e.g. $CRIBL_EDGE_FS_ROOT/var/log/journal/$MACHINE_ID.
          example: string
        interval:
          type: number
          default: 10
          minimum: 1
          title: Polling interval
          description: "Time, in seconds, between scanning for journals. "
          example: 10
        journals:
          type: array
          title: Journal allowlist
          description: The full path of discovered journals are matched against this wildcard list.
          default: &id110
          - system
          items:
            type: string
            example: string
          example: *id110
        rules:
          type: array
          title: Filter Rules
          description: Add rules to decide which journal objects to allow. Events are generated if no rules are given or if all the rules' expressions evaluate to true.
          items:
            type: object
            required:
            - filter
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression applied to Journal objects. Return 'true' to include it.
                example: string
              description:
                type: string
                title: Description
                description: Optional description of this rule's purpose
                example: string
            example:
              filter: string
              description: string
          default: &id111
          - filter: severity <= 4
            description: Allow log messages having 'emergency', 'alert', 'critical', 'error', or 'warning' priority
          example: *id111
        currentBoot:
          type: boolean
          default: false
          title: Current boot only
          description: Skip log messages that are not part of the current boot session.
          example: false
        maxAgeDur:
          type: string
          title: Age duration limit
          description: "The maximum log message age, in duration form (e.g,: 60s, 4h, 3d, 1w).  Default of no value will apply no max age filters."
          example: string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: journal_files
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id109
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        path: string
        interval: 10
        journals: *id110
        rules: *id111
        currentBoot: false
        maxAgeDur: string
        metadata:
        - name: string
          value: string
        description: string
    InputWiz:
      required:
      - endpoint
      - authUrl
      - clientId
      - contentConfig
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - wiz
          example: wiz
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id112 []
          items:
            type: string
            example: string
          example: *id112
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        endpoint:
          type: string
          title: GraphQL endpoint
          description: "The Wiz GraphQL API endpoint. Example: https://api.us1.app.wiz.io/graphql"
          default: https://api.<region>.app.wiz.io/graphql
          pattern: ^https:\/\/
          example: https://api.<region>.app.wiz.io/graphql
        authUrl:
          type: string
          title: Authentication URL
          description: The authentication URL to generate an OAuth token
          example: string
        authAudienceOverride:
          type: string
          title: Authentication audience
          description: The audience to use when requesting an OAuth token for a custom auth URL. When not specified, `wiz-api` will be used.
          example: string
        clientId:
          type: string
          title: Client ID
          description: The client ID of the Wiz application
          example: string
        contentConfig:
          type: array
          title: Content types
          default: &id113
          - contentType: Audit Logs
            contentDescription: Get all Audit Logs
            contentQuery: >-
              ({
                query: `query AuditLogTable($first: Int $after: String $filterBy: AuditLogEntryFilters){
                  auditLogEntries(first: $first after: $after filterBy: $filterBy) {
                    nodes {
                      id
                      action
                      requestId
                      status
                      timestamp
                      actionParameters
                      userAgent
                      sourceIP
                      serviceAccount {
                        id
                        name
                      }
                      user {
                        id
                        name
                      }
                    }
                    pageInfo {
                      hasNextPage
                      endCursor
                    }
                  }
                }`,
                variables: {
                  first: 100,
                  after: endCursor,
                  filterBy: {
                    timestamp: {
                      after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                      before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                    },
                    status: ["SUCCESS", "FAILED","INVALID","ACCESS_DENIED"]
                  }
                }
              })
            cronSchedule: "*/15 * * * *"
            earliest: -15m@m
            latest: now
            jobTimeout: "0"
            logLevel: info
            maxPages: 100
            enabled: false
            stateTracking: false
            stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
            stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
          - contentType: Configuration Findings
            contentDescription: Get Cloud Configuration Report
            contentQuery: >-
              ({
                query: `query CloudConfigurationFindingsPage($filterBy: ConfigurationFindingFilters, $first: Int, $after: String, $orderBy: ConfigurationFindingOrder) {
                  configurationFindings(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                    nodes {
                      id
                      targetExternalId
                      targetObjectProviderUniqueId
                      firstSeenAt
                      severity
                      result
                      status
                      remediation
                      resource {
                        id
                        providerId
                        name
                        nativeType
                        type
                        region
                        subscription {
                          id
                          name
                          externalId
                          cloudProvider
                        }
                        projects {
                          id
                          name
                          riskProfile {
                            businessImpact
                          }
                        }
                        tags {
                          key
                          value
                        }
                      }
                      rule {
                        id
                        graphId
                        name
                        description
                        remediationInstructions
                        functionAsControl
                      }
                      securitySubCategories {
                        id
                        title
                        category {
                          id
                          name
                          framework {
                            id
                            name
                          }
                        }
                      }
                      ignoreRules {
                        id
                        name
                        enabled
                        expiredAt
                      }
                    }
                    pageInfo {
                      hasNextPage
                      endCursor
                    }
                  }
                }`,
                variables: {
                  first: 100,
                  after: endCursor,
                  filterBy: {
                    id: [],
                    source: [],
                    rule: {
                      id: [],
                      name: [],
                      description: []
                    },
                    result: ["PASS","FAIL","ERROR", "NOT_ASSESSED"],
                    severity: ["NONE","LOW","MEDIUM","HIGH","CRITICAL"],
                    status: ["OPEN","IN_PROGRESS","RESOLVED","REJECTED"
                    ],
                    frameworkCategory: [],
                    firstSeenAt: {
                      after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                      before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                    }
                  }
                }
              })
            cronSchedule: 0 */12 * * *
            earliest: -12h@h
            latest: now
            jobTimeout: "0"
            logLevel: info
            maxPages: 100
            enabled: false
            stateTracking: false
            stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
            stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
          - contentType: Issues
            contentDescription: Get Open Issues
            contentQuery: >-
              ({
                query: `query IssuesTable($filterBy: IssueFilters, $first: Int, $after: String, $orderBy: IssueOrder) {
                  issues: issuesV2(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                    nodes {
                      id
                      control {
                        id
                        name
                        description
                        resolutionRecommendation
                        securitySubCategories {
                          title
                          category {
                            name
                            framework {
                              name
                            }
                          }
                        }
                      }
                      createdAt
                      updatedAt
                      sourceRule {
                        id
                        name
                      }
                      dueAt
                      resolvedAt
                      statusChangedAt
                      project {
                        id
                        name
                        slug
                        businessUnit
                        riskProfile {
                          businessImpact
                        }
                      }
                      status
                      severity
                      type
                      entitySnapshot {
                        id
                        type
                        nativeType
                        name
                        status
                        cloudPlatform
                        cloudProviderURL
                        providerId
                        region
                        resourceGroupExternalId
                        subscriptionExternalId
                        subscriptionName
                        subscriptionTags
                        tags
                        externalId
                      }
                      notes {
                        createdAt
                        updatedAt
                        text
                        user {
                          name
                          email
                        }
                        serviceAccount {
                          name
                        }
                      }
                      serviceTickets {
                        externalId
                        name
                        url
                      }
                    }
                    pageInfo {
                      hasNextPage
                      endCursor
                    }
                  }
                }`,
                variables: {
                  first: 100,
                  after: endCursor,
                  filterBy: {
                    sourceRule: {
                      id: []
                    },
                    relatedEntity: {
                      type: []
                    },
                    status: ["OPEN","IN_PROGRESS","RESOLVED","REJECTED"],
                    severity: ["INFORMATIONAL","LOW","MEDIUM","HIGH","CRITICAL"],
                    type: ["TOXIC_COMBINATION","THREAT_DETECTION","CLOUD_CONFIGURATION"],
                    createdAt: {
                      after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                      before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                    }
                  }
                }
              })
            cronSchedule: 0 */12 * * *
            earliest: -12h@h
            latest: now
            jobTimeout: "0"
            logLevel: info
            maxPages: 0
            enabled: false
            stateTracking: false
            stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
            stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
          - contentType: Vulnerabilities
            contentDescription: Get Vulnerability Findings
            contentQuery: >-
              ({
                query: `query VulnerabilityFindingsPage($filterBy: VulnerabilityFindingFilters, $first: Int, $after: String, $orderBy: VulnerabilityFindingOrder) {
                  vulnerabilityFindings(filterBy: $filterBy first: $first after: $after orderBy: $orderBy) {
                    nodes {
                      id
                      portalUrl
                      name
                      CVEDescription
                      CVSSSeverity
                      score
                      exploitabilityScore
                      impactScore
                      hasExploit
                      hasCisaKevExploit
                      status
                      vendorSeverity
                      firstDetectedAt
                      lastDetectedAt
                      resolvedAt
                      description
                      remediation
                      detailedName
                      version
                      fixedVersion
                      detectionMethod
                      link
                      locationPath
                      resolutionReason
                      vulnerableAsset {
                        ... on VulnerableAssetBase {
                          id
                          type
                          name
                          region
                          providerUniqueId
                          cloudProviderURL
                          cloudPlatform
                          status
                          subscriptionName
                          subscriptionExternalId
                          subscriptionId
                          tags
                        }
                        ... on VulnerableAssetVirtualMachine {
                          operatingSystem
                          ipAddresses
                        }
                        ... on VulnerableAssetServerless {
                          runtime
                        }
                        ... on VulnerableAssetContainerImage {
                          imageId
                        }
                        ... on VulnerableAssetContainer {
                          ImageExternalId
                          VmExternalId
                          ServerlessContainer
                          PodNamespace
                          PodName
                          NodeName
                        }
                      }
                    }
                    pageInfo {
                      hasNextPage
                      endCursor
                    }
                  }
                }`,
                variables: {
                  first: 100,
                  after: endCursor,
                  filterBy: {
                    id: [],
                    status: [],
                    assetType: [],
                    vendorSeverity: [],
                    assetId: [],
                    vulnerabilityId: [],
                    detectionMethod: [],
                    assetStatus: [],
                    firstSeenAt: {
                      after: `${C.Time.strftime(state.latestTime || earliest, '%Y-%m-%dT%H:%M:%SZ')}`,
                      before: `${C.Time.strftime(latest, '%Y-%m-%dT%H:%M:%SZ')}`
                    }
                  }
                }
              })
            cronSchedule: 0 */12 * * *
            earliest: -12h@h
            latest: now
            jobTimeout: "0"
            logLevel: info
            maxPages: 0
            enabled: false
            stateTracking: false
            stateUpdateExpression: "__timestampExtracted !== false && {latestTime: (state.latestTime || 0) > _time ? state.latestTime : _time}"
            stateMergeExpression: "prevState.latestTime > newState.latestTime ? prevState : newState"
          items:
            type: object
            required:
            - contentType
            - contentQuery
            - cronSchedule
            - earliest
            - latest
            properties:
              contentType:
                type: string
                title: Content name
                description: The name of the Wiz query
                pattern: ^[a-zA-Z0-9_-\s]+$
                example: string
              contentDescription:
                type: string
                title: Description
                example: string
              enabled:
                type: boolean
                title: Enable content
                default: false
                example: false
            example:
              contentType: string
              contentDescription: string
              enabled: false
          example: *id113
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: HTTP request inactivity timeout. Use 0 to disable.
          minimum: 0
          maximum: 2400
          default: 300
          example: 300
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often workers should check in with the scheduler to keep job subscription alive
          minimum: 10
          default: 30
          example: 30
        maxMissedKeepAlives:
          type: number
          title: Worker timeout (periods)
          description: The number of Keep Alive Time periods before an inactive worker will have its job subscription revoked.
          minimum: 2
          default: 3
          example: 3
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        retryRules:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              title: Retry type
              description: The algorithm to use when performing HTTP retries
              enum:
              - none
              - backoff
              - static
              default: backoff
              example: backoff
            interval:
              type: number
              title: Initial retry interval (ms)
              description: Time interval between failed request and first retry (kickoff). Maximum allowed value is 20,000 ms (1/3 minute).
              minimum: 0
              maximum: 20000
              default: 1000
              example: 1000
            limit:
              type: number
              title: Retry limit
              description: The maximum number of times to retry a failed HTTP request
              minimum: 0
              maximum: 20
              default: 5
              example: 5
            multiplier:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff, e.g., base 2 means that retries will occur after 2, then 4, then 8 seconds, and so on
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            codes:
              type: array
              title: Retry HTTP codes
              description: List of HTTP codes that trigger a retry. Leave empty to use the default list of 429 and 503.
              minItems: 1
              default: &id114
              - 429
              - 503
              items:
                type: number
                minLength: 1
                example: 123.45
              example: *id114
            enableHeader:
              type: boolean
              title: Honor Retry-After header
              description: Honor any Retry-After header that specifies a delay (in seconds) or a timestamp after which to retry the request. The delay is limited to 20 seconds, even if the Retry-After header specifies a longer delay. When disabled, all Retry-After headers are ignored.
              default: true
              example: true
            retryConnectTimeout:
              type: boolean
              title: Retry connection timeout
              description: Make a single retry attempt when a connection timeout (ETIMEDOUT) error occurs
              default: false
              example: false
            retryConnectReset:
              type: boolean
              title: Retry connection reset
              description: Retry request when a connection reset (ECONNRESET) error occurs
              default: false
              example: false
          example:
            type: backoff
            interval: 1000
            limit: 5
            multiplier: 2
            codes: *id114
            enableHeader: true
            retryConnectTimeout: false
            retryConnectReset: false
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Enter client secret directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: string
        clientSecret:
          type: string
          title: Client secret
          description: The client secret of the Wiz application
          example: string
        textSecret:
          type: string
          title: Client Secret (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: wiz
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id112
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        endpoint: https://api.<region>.app.wiz.io/graphql
        authUrl: string
        authAudienceOverride: string
        clientId: string
        contentConfig: *id113
        requestTimeout: 300
        keepAliveTime: 30
        maxMissedKeepAlives: 3
        ttl: 4h
        ignoreGroupJobsLimit: false
        metadata:
        - name: string
          value: string
        retryRules:
          type: backoff
          interval: 1000
          limit: 5
          multiplier: 2
          codes: *id114
          enableHeader: true
          retryConnectTimeout: false
          retryConnectReset: false
        authType: manual
        description: string
        clientSecret: string
        textSecret: string
    InputNetflow:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - netflow
          example: netflow
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id115 []
          items:
            type: string
            example: string
          example: *id115
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. For IPv4 (all addresses), use the default '0.0.0.0'. For IPv6, enter '::' (all addresses) or specify an IP address.
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          default: 2055
          example: 2055
        enablePassThrough:
          type: boolean
          title: Enable pass-through
          default: false
          description: Allow forwarding of events to a NetFlow destination. Enabling this feature will generate an extra event containing __netflowRaw which can be routed to a NetFlow destination. Note that these events will not count against ingest quota.
          example: false
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist.
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        udpSocketRxBufSize:
          type: number
          title: UDP socket buffer size (bytes)
          description: "Optionally, set the SO_RCVBUF socket option for the UDP socket. This value tells the operating system how many bytes can be buffered in the kernel before events are dropped. Leave blank to use the OS default. Caution: Increasing this value will affect OS memory utilization."
          minimum: 256
          maximum: 4294967295
          example: 123.45
        templateCacheMinutes:
          type: number
          title: Template cache minutes
          description: Specifies how many minutes NetFlow v9 templates are cached before being discarded if not refreshed. Adjust based on your network's template update frequency to optimize performance and memory usage.
          minimum: 1
          maximum: 3600
          default: 30
          example: 30
        v5Enabled:
          type: boolean
          title: V5
          description: Accept messages in Netflow V5 format.
          default: true
          example: true
        v9Enabled:
          type: boolean
          title: V9
          description: Accept messages in Netflow V9 format.
          default: true
          example: true
        ipfixEnabled:
          type: boolean
          title: IPFIX
          description: Accept messages in IPFIX format.
          default: false
          example: false
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: netflow
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id115
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 2055
        enablePassThrough: false
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        udpSocketRxBufSize: 123.45
        templateCacheMinutes: 30
        v5Enabled: true
        v9Enabled: true
        ipfixEnabled: false
        metadata:
        - name: string
          value: string
        description: string
    InputSecurityLake:
      required:
      - queueName
      - type
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - security_lake
          example: security_lake
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id116 []
          items:
            type: string
            example: string
          example: *id116
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        queueName:
          type: string
          title: Queue
          description: "The name, URL, or ARN of the SQS queue to read notifications from. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Value must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
          example: string
        fileFilter:
          type: string
          title: Filename filter
          description: "Regex matching file names to download and process. Defaults to: .*"
          default: /.*/
          example: /.*/
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
          example: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: AWS Region where the S3 bucket and SQS queue are located. Required, unless the Queue entry is a URL or ARN that includes a Region.
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        breakerRulesets:
          type: array
          title: Event Breaker rulesets
          description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
          items:
            type: string
            example: string
          example:
          - string
        staleChannelFlushMs:
          type: number
          title: Event Breaker buffer timeout (ms)
          description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
          default: 10000
          minimum: 10
          maximum: 43200000
          example: 10000
        maxMessages:
          type: number
          title: Message limit
          description: "The maximum number of messages SQS should return in a poll request. Amazon SQS never returns more messages than this value (however, fewer messages might be returned). Valid values: 1 to 10."
          default: 1
          minimum: 1
          maximum: 10
          example: 1
        visibilityTimeout:
          type: number
          title: Visibility timeout seconds
          description: After messages are retrieved by a ReceiveMessage request, @{product} will hide them from subsequent retrieve requests for at least this duration. You can set this as high as 43200 sec. (12 hours).
          default: 600
          minimum: 0
          maximum: 43200
          example: 600
        numReceivers:
          type: number
          title: Number of receivers
          description: How many receiver processes to run. The higher the number, the better the throughput - at the expense of CPU overhead.
          default: 1
          minimum: 1
          maximum: 100
          example: 1
        socketTimeout:
          type: number
          title: Socket timeout
          description: Socket inactivity timeout (in seconds). Increase this value if timeouts occur due to backpressure.
          default: 300
          minimum: 1
          maximum: 43200
          example: 300
        skipOnError:
          type: boolean
          title: Skip file on error
          description: Skip files that trigger a processing error. Disabled by default, which allows retries after processing errors.
          default: false
          example: false
        enableAssumeRole:
          type: boolean
          title: Enable for Amazon S3
          description: Use Assume Role credentials to access Amazon S3
          default: true
          example: true
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        enableSQSAssumeRole:
          type: boolean
          title: Enable for Amazon SQS
          description: Use Assume Role credentials when accessing Amazon SQS
          default: false
          example: false
        preprocess:
          type: object
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            command:
              type: string
              title: Command
              description: Command to feed the data through (via stdin) and process its output (stdout)
              example: string
            args:
              type: array
              title: Arguments
              description: Arguments to be added to the custom command
              items:
                type: string
                example: string
              example:
              - string
          example:
            disabled: true
            command: string
            args:
            - string
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        parquetChunkSizeMB:
          type: number
          title: Parquet chunk size limit (MB)
          description: Maximum file size for each Parquet chunk
          default: 5
          maximum: 100
          minimum: 1
          example: 5
        parquetChunkDownloadTimeout:
          type: number
          title: Parquet chunk download timeout (seconds)
          description: The maximum time allowed for downloading a Parquet chunk. Processing will stop if a chunk cannot be downloaded within the time specified.
          default: 600
          maximum: 3600
          minimum: 1
          example: 600
        checkpointing:
          type: object
          required:
          - enabled
          properties:
            enabled:
              type: boolean
              title: Enable checkpointing
              description: Resume processing files after an interruption
              default: false
              example: false
            retries:
              type: number
              title: Retries
              description: The number of times to retry processing when a processing error occurs. If Skip file on error is enabled, this setting is ignored.
              default: 5
              maximum: 100
              minimum: 0
              example: 5
          example:
            enabled: false
            retries: 5
        pollTimeout:
          type: number
          title: Poll timeout (secs)
          description: How long to wait for events before trying polling again. The lower the number the higher the AWS bill. The higher the number the longer it will take for the source to react to configuration changes and system restarts.
          default: 10
          minimum: 1
          maximum: 20
          example: 10
        encoding:
          type: string
          title: Encoding
          description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
          example: string
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        tagAfterProcessing:
          enum:
          - false
          - true
          example: false
        processedTagKey:
          type: string
          title: Tag key
          description: The key for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
          example: string
        processedTagValue:
          type: string
          title: Tag value
          description: The value for the S3 object tag applied after processing. This field accepts an expression for dynamic generation.
          example: string
      type: object
      example:
        id: string
        type: security_lake
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id116
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        queueName: string
        fileFilter: /.*/
        awsAccountId: string
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        breakerRulesets:
        - string
        staleChannelFlushMs: 10000
        maxMessages: 1
        visibilityTimeout: 600
        numReceivers: 1
        socketTimeout: 300
        skipOnError: false
        enableAssumeRole: true
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        enableSQSAssumeRole: false
        preprocess:
          disabled: true
          command: string
          args:
          - string
        metadata:
        - name: string
          value: string
        parquetChunkSizeMB: 5
        parquetChunkDownloadTimeout: 600
        checkpointing:
          enabled: false
          retries: 5
        pollTimeout: 10
        encoding: string
        description: string
        awsApiKey: string
        awsSecret: string
        tagAfterProcessing: false
        processedTagKey: string
        processedTagValue: string
    InputZscalerHec:
      required:
      - host
      - port
      - hecAPI
      properties:
        id:
          type: string
          title: Input ID
          description: Unique ID for this input
          example: string
        type:
          type: string
          enum:
          - zscaler_hec
          example: zscaler_hec
        disabled:
          type: boolean
          title: Disabled
          default: false
          example: false
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data from this Source before sending it through the Routes
          example: string
        sendToRoutes:
          type: boolean
          default: true
          description: Select whether to send data to Routes, or directly to Destinations.
          example: true
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        pqEnabled:
          type: boolean
          default: false
          title: Enable persistent queue
          description: Use a disk queue to minimize data loss when connected services block. See [Cribl Docs](https://docs.cribl.io/stream/persistent-queues) for PQ defaults (Cribl-managed Cloud Workers) and configuration options (on-prem and hybrid Workers).
          example: false
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id117 []
          items:
            type: string
            example: string
          example: *id117
        connections:
          type: array
          title: Use QuickConnect
          description: Direct connections to Destinations, and optionally via a Pipeline or a Pack
          items:
            type: object
            required:
            - output
            properties:
              pipeline:
                title: Pipeline or Pack
                type: string
                example: string
              output:
                title: Destination
                type: string
                example: string
            example:
              pipeline: string
              output: string
          example:
          - pipeline: string
            output: string
        pq:
          type: object
          properties:
            mode:
              type: string
              title: Mode
              description: With Smart mode, PQ will write events to the filesystem only when it detects backpressure from the processing engine. With Always On mode, PQ will always write events directly to the queue before forwarding them to the processing engine.
              default: always
              enum:
              - smart
              - always
              example: always
            maxBufferSize:
              type: number
              title: Buffer size limit
              description: The maximum number of events to hold in memory before writing the events to disk
              default: 1000
              minimum: 42
              example: 1000
            commitFrequency:
              type: number
              title: Commit frequency
              description: The number of events to send downstream before committing that Stream has read them
              default: 42
              minimum: 1
              example: 42
            maxFileSize:
              type: string
              title: File size limit
              description: The maximum size to store in each queue file before closing and optionally compressing. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 1 MB
              example: 1 MB
            maxSize:
              type: string
              title: Queue size limit
              description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
              pattern: ^\d+\s*(?:\w{2})?$
              default: 5GB
              example: 5GB
            path:
              type: string
              default: $CRIBL_HOME/state/queues
              title: Queue file path
              description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/inputs/<input-id>"
              example: $CRIBL_HOME/state/queues
            compress:
              type: string
              default: none
              enum:
              - none
              - gzip
              title: Compression
              description: Codec to use to compress the persisted data
              example: none
          example:
            mode: always
            maxBufferSize: 1000
            commitFrequency: 42
            maxFileSize: 1 MB
            maxSize: 5GB
            path: $CRIBL_HOME/state/queues
            compress: none
        host:
          type: string
          title: Address
          description: Address to bind on. Defaults to 0.0.0.0 (all addresses).
          default: 0.0.0.0
          example: 0.0.0.0
        port:
          type: number
          title: Port
          maximum: 65535
          description: Port to listen on
          example: 123.45
        authTokens:
          type: array
          title: Auth tokens
          description: "Shared secrets to be provided by any client (Authorization: <token>). If empty, unauthorized access is permitted."
          items:
            type: object
            required:
            - token
            properties:
              authType:
                title: Authentication method
                type: string
                enum:
                - manual
                - secret
                default: manual
                description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                example: manual
              tokenSecret:
                example: string
              token:
                example: string
              enabled:
                type: boolean
                title: Enable token
                default: true
                example: true
              description:
                type: string
                title: Description
                example: string
              allowedIndexesAtToken:
                type: array
                title: Allowed indexes
                description: Enter the values you want to allow in the HEC event index field at the token level. Supports wildcards. To skip validation, leave blank.
                minItems: 0
                items:
                  type: string
                  minLength: 1
                  example: string
                example:
                - string
              metadata:
                type: array
                title: Fields
                description: Fields to add to events referencing this token
                items:
                  type: object
                  required:
                  - name
                  - value
                  properties:
                    name:
                      type: string
                      title: Field Name
                      example: string
                    value:
                      type: string
                      title: Value
                      description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                      example: string
                  example:
                    name: string
                    value: string
                example:
                - name: string
                  value: string
            example:
              authType: manual
              tokenSecret: string
              token: string
              enabled: true
              description: string
              allowedIndexesAtToken:
              - string
              metadata:
              - name: string
                value: string
          example:
          - authType: manual
            tokenSecret: string
            token: string
            enabled: true
            description: string
            allowedIndexesAtToken:
            - string
            metadata:
            - name: string
              value: string
        tls:
          type: object
          title: TLS settings (server side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            privKeyPath:
              type: string
              title: Private key path
              description: Path on server containing the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            certPath:
              type: string
              title: Certificate path
              description: Path on server containing certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on server containing CA certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            requestCert:
              type: boolean
              title: Authenticate client (mutual auth)
              description: Require clients to present their certificates. Used to perform client authentication using SSL certs.
              default: false
              example: false
            rejectUnauthorized:
              example: string
            commonNameRegex:
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            certificateName: string
            privKeyPath: string
            passphrase: string
            certPath: string
            caPath: string
            requestCert: false
            rejectUnauthorized: string
            commonNameRegex: string
            minVersion: TLSv1
            maxVersion: TLSv1
        maxActiveReq:
          type: number
          title: Active request limit
          description: "Maximum number of active requests allowed per Worker Process. Set to 0 for unlimited. Caution: Increasing the limit above the default value, or setting it to unlimited, may degrade performance and reduce throughput."
          default: 256
          minimum: 0
          example: 256
        maxRequestsPerSocket:
          type: integer
          title: Requests-per-socket limit
          description: Maximum number of requests per socket before @{product} instructs the client to close the connection. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        enableProxyHeader:
          type: boolean
          title: Show originating IP
          description: Extract the client IP and port from PROXY protocol v1/v2. When enabled, the X-Forwarded-For header is ignored. Disable to use the X-Forwarded-For header for client IP extraction.
          default: false
          example: false
        captureHeaders:
          type: boolean
          title: Capture request headers
          description: Add request headers to events, in the __headers field
          default: false
          example: false
        activityLogSampleRate:
          type: number
          title: Activity log sample rate
          description: How often request activity is logged at the `info` level. A value of 1 would log every request, 10 every 10th request, etc.
          default: 100
          minimum: 1
          example: 100
        requestTimeout:
          type: number
          title: Request timeout (seconds)
          description: How long to wait for an incoming request to complete before aborting it. Use 0 to disable.
          default: 0
          minimum: 0
          example: 0
        socketTimeout:
          type: number
          title: Socket timeout (seconds)
          description: How long @{product} should wait before assuming that an inactive socket has timed out. To wait forever, set to 0.
          default: 0
          minimum: 0
          example: 0
        keepAliveTimeout:
          type: number
          title: Keep-alive timeout (seconds)
          description: After the last response is sent, @{product} will wait this long for additional data before closing the socket connection. Minimum 1 second, maximum 600 seconds (10 minutes).
          default: 5
          minimum: 1
          maximum: 600
          example: 5
        enableHealthCheck:
          example: string
        ipAllowlistRegex:
          type: string
          title: IP allowlist regex
          description: Messages from matched IP addresses will be processed, unless also matched by the denylist
          default: /.*/
          example: /.*/
        ipDenylistRegex:
          type: string
          title: IP denylist regex
          description: Messages from matched IP addresses will be ignored. This takes precedence over the allowlist.
          default: /^$/
          example: /^$/
        hecAPI:
          type: string
          title: HEC endpoint
          description: Absolute path on which to listen for the Zscaler HTTP Event Collector API requests. This input supports the /event endpoint.
          default: /services/collector
          pattern: ^/
          example: /services/collector
        metadata:
          type: array
          title: Fields
          description: Fields to add to every event. May be overridden by fields added at the token or request level.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        allowedIndexes:
          type: array
          title: Allowed indexes
          description: List values allowed in HEC event index field. Leave blank to skip validation. Supports wildcards. The values here can expand index validation at the token level.
          minItems: 0
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        hecAcks:
          type: boolean
          title: Zscaler HEC Acks
          description: Whether to enable Zscaler HEC acknowledgements
          default: false
          example: false
        accessControlAllowOrigin:
          title: CORS allowed origins
          type: array
          description: Optionally, list HTTP origins to which @{product} should send CORS (cross-origin resource sharing) Access-Control-Allow-* headers. Supports wildcards.
          minItems: 0
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        accessControlAllowHeaders:
          title: CORS allowed headers
          type: array
          description: Optionally, list HTTP headers that @{product} will send to allowed origins as "Access-Control-Allow-Headers" in a CORS preflight response. Use "*" to allow all headers.
          minItems: 0
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        emitTokenMetrics:
          type: boolean
          title: Emit per-token request metrics
          description: Enable to emit per-token (<prefix>.http.perToken) and summary (<prefix>.http.summary) request metrics
          default: false
          example: false
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: zscaler_hec
        disabled: false
        pipeline: string
        sendToRoutes: true
        environment: string
        pqEnabled: false
        streamtags: *id117
        connections:
        - pipeline: string
          output: string
        pq:
          mode: always
          maxBufferSize: 1000
          commitFrequency: 42
          maxFileSize: 1 MB
          maxSize: 5GB
          path: $CRIBL_HOME/state/queues
          compress: none
        host: 0.0.0.0
        port: 123.45
        authTokens:
        - authType: manual
          tokenSecret: string
          token: string
          enabled: true
          description: string
          allowedIndexesAtToken:
          - string
          metadata:
          - name: string
            value: string
        tls:
          disabled: true
          certificateName: string
          privKeyPath: string
          passphrase: string
          certPath: string
          caPath: string
          requestCert: false
          rejectUnauthorized: string
          commonNameRegex: string
          minVersion: TLSv1
          maxVersion: TLSv1
        maxActiveReq: 256
        maxRequestsPerSocket: 0
        enableProxyHeader: false
        captureHeaders: false
        activityLogSampleRate: 100
        requestTimeout: 0
        socketTimeout: 0
        keepAliveTimeout: 5
        enableHealthCheck: string
        ipAllowlistRegex: /.*/
        ipDenylistRegex: /^$/
        hecAPI: /services/collector
        metadata:
        - name: string
          value: string
        allowedIndexes:
        - string
        hecAcks: false
        accessControlAllowOrigin:
        - string
        accessControlAllowHeaders:
        - string
        emitTokenMetrics: false
        description: string
    Input:
      oneOf:
      - $ref: "#/components/schemas/InputCollection"
      - $ref: "#/components/schemas/InputKafka"
      - $ref: "#/components/schemas/InputMsk"
      - $ref: "#/components/schemas/InputHttp"
      - $ref: "#/components/schemas/InputSplunk"
      - $ref: "#/components/schemas/InputSplunkSearch"
      - $ref: "#/components/schemas/InputSplunkHec"
      - $ref: "#/components/schemas/InputAzureBlob"
      - $ref: "#/components/schemas/InputElastic"
      - $ref: "#/components/schemas/InputConfluentCloud"
      - $ref: "#/components/schemas/InputGrafana"
      - $ref: "#/components/schemas/InputLoki"
      - $ref: "#/components/schemas/InputPrometheusRw"
      - $ref: "#/components/schemas/InputPrometheus"
      - $ref: "#/components/schemas/InputEdgePrometheus"
      - $ref: "#/components/schemas/InputOffice365Mgmt"
      - $ref: "#/components/schemas/InputOffice365Service"
      - $ref: "#/components/schemas/InputOffice365MsgTrace"
      - $ref: "#/components/schemas/InputEventhub"
      - $ref: "#/components/schemas/InputExec"
      - $ref: "#/components/schemas/InputFirehose"
      - $ref: "#/components/schemas/InputGooglePubsub"
      - $ref: "#/components/schemas/InputCribl"
      - $ref: "#/components/schemas/InputCriblTcp"
      - $ref: "#/components/schemas/InputCriblHttp"
      - $ref: "#/components/schemas/InputCriblLakeHttp"
      - $ref: "#/components/schemas/InputTcpjson"
      - $ref: "#/components/schemas/InputSystemMetrics"
      - $ref: "#/components/schemas/InputSystemState"
      - $ref: "#/components/schemas/InputKubeMetrics"
      - $ref: "#/components/schemas/InputKubeLogs"
      - $ref: "#/components/schemas/InputKubeEvents"
      - $ref: "#/components/schemas/InputWindowsMetrics"
      - $ref: "#/components/schemas/InputCrowdstrike"
      - $ref: "#/components/schemas/InputDatadogAgent"
      - $ref: "#/components/schemas/InputDatagen"
      - $ref: "#/components/schemas/InputHttpRaw"
      - $ref: "#/components/schemas/InputKinesis"
      - $ref: "#/components/schemas/InputCriblmetrics"
      - $ref: "#/components/schemas/InputMetrics"
      - $ref: "#/components/schemas/InputS3"
      - $ref: "#/components/schemas/InputS3Inventory"
      - $ref: "#/components/schemas/InputSnmp"
      - $ref: "#/components/schemas/InputOpenTelemetry"
      - $ref: "#/components/schemas/InputModelDrivenTelemetry"
      - $ref: "#/components/schemas/InputSqs"
      - $ref: "#/components/schemas/InputSyslog"
      - $ref: "#/components/schemas/InputFile"
      - $ref: "#/components/schemas/InputTcp"
      - $ref: "#/components/schemas/InputAppscope"
      - $ref: "#/components/schemas/InputWef"
      - $ref: "#/components/schemas/InputWinEventLogs"
      - $ref: "#/components/schemas/InputRawUdp"
      - $ref: "#/components/schemas/InputJournalFiles"
      - $ref: "#/components/schemas/InputWiz"
      - $ref: "#/components/schemas/InputNetflow"
      - $ref: "#/components/schemas/InputSecurityLake"
      - $ref: "#/components/schemas/InputZscalerHec"
    AddHecTokenRequest:
      type: object
      properties:
        description:
          type: string
          example: string
        enabled:
          type: boolean
          example: true
        metadata:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: string
              value:
                type: string
                example: string
            required:
            - name
            - value
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        token:
          type: string
          example: string
      required:
      - token
      example:
        description: string
        enabled: true
        metadata:
        - name: string
          value: string
        token: string
    UpdateHecTokenRequest:
      type: object
      properties:
        description:
          type: string
          example: string
        enabled:
          type: boolean
          example: true
        metadata:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: string
              value:
                type: string
                example: string
            required:
            - name
            - value
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
      example:
        description: string
        enabled: true
        metadata:
        - name: string
          value: string
    IoMetricsEntryLevel:
      type: string
      enum:
      - minimal
      - basic
      - detailed
      - comprehensive
      example: minimal
    IoMetricsEntry:
      type: object
      properties:
        canDelete:
          type: boolean
          example: true
        id:
          type: string
          example: string
        level:
          $ref: "#/components/schemas/IoMetricsEntryLevel"
      required:
      - id
      - level
      example:
        canDelete: true
        id: string
    OutputDefault:
      required:
      - defaultId
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - default
          example: default
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id118
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id118
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id119 []
          items:
            type: string
            example: string
          example: *id119
        defaultId:
          type: string
          title: Default Output ID
          description: ID of the default output. This will be used whenever a nonexistent/deleted output is referenced.
          example: string
      type: object
      example:
        id: string
        type: default
        pipeline: string
        systemFields: *id118
        environment: string
        streamtags: *id119
        defaultId: string
    OutputWebhook:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - webhook
          example: webhook
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id120
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id120
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id121 []
          items:
            type: string
            example: string
          example: *id121
        method:
          type: string
          title: Method
          description: The method to use when sending events
          enum:
          - POST
          - PUT
          - PATCH
          default: POST
          example: POST
        format:
          type: string
          title: Format
          description: How to format events before sending out
          enum:
          - ndjson
          - json_array
          - custom
          - advanced
          default: ndjson
          example: ndjson
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
          example: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 512000
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events. You can also add headers dynamically on a per-event basis in the __headers field, as explained in [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id122 []
          items:
            type: string
            example: string
          example: *id122
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id123 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id123
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          type: string
          title: Authentication type
          description: Authentication method to use for the HTTP request
          enum:
          - none
          - basic
          - credentialsSecret
          - token
          - textSecret
          - oauth
          default: none
          example: none
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
          example: 123.45
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Enable for optimal performance. Even if you have one hostname, it can expand to multiple IPs. If disabled, consider enabling round-robin DNS.
          default: false
          example: false
        description:
          type: string
          title: Description
          example: string
        customSourceExpression:
          type: string
          title: Source expression
          description: "Expression to evaluate on events to generate output. Example: `raw=${_raw}`. See [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook#custom-format) for other examples. If empty, the full event is sent as stringified JSON."
          default: __httpOut
          example: __httpOut
        customDropWhenNull:
          type: boolean
          title: Drop when null
          description: Whether to drop events when the source expression evaluates to null
          default: false
          example: false
        customEventDelimiter:
          type: string
          title: Event delimiter
          description: Delimiter string to insert between individual events. Defaults to newline character.
          default: \n
          example: \n
        customContentType:
          type: string
          title: Content type
          description: Content type to use for request. Defaults to application/x-ndjson. Any content types set in Advanced Settings > Extra HTTP headers will override this entry.
          default: application/x-ndjson
          example: application/x-ndjson
        customPayloadExpression:
          type: string
          title: Batch expression
          description: 'Expression specifying how to format the payload for each batch. To reference the events to send, use the `${events}` variable. Example expression: `{ "items" : [${events}] }` would send the batch inside a JSON object.'
          default: "`${events}`"
          example: "`${events}`"
        advancedContentType:
          type: string
          title: Content type
          description: HTTP content-type header value
          default: application/json
          example: application/json
        formatEventCode:
          type: string
          title: Format inbound event
          description: "Custom JavaScript code to format incoming event data accessible through the __e variable. The formatted content is added to (__e['__eventOut']) if available. Otherwise, the original event is serialized as JSON. Caution: This function is evaluated in an unprotected context, allowing you to execute almost any JavaScript code."
          example: string
        formatPayloadCode:
          type: string
          title: Format outbound payload
          description: "Optional JavaScript code to format the payload sent to the Destination. The payload, containing a batch of formatted events, is accessible through the __e['payload'] variable. The formatted payload is returned in the __e['__payloadOut'] variable. Caution: This function is evaluated in an unprotected context, allowing you to execute almost any JavaScript code."
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        username:
          type: string
          title: Username
          example: string
        password:
          type: string
          title: Password
          example: string
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: string
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: string
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: string
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: string
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
          example: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: string
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: string
              value:
                type: string
                title: Value
                description: OAuth header value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        url:
          type: string
          title: Webhook URL
          description: URL of a webhook endpoint to send events to, such as http://localhost:10200
          pattern: ^https?://.*
          example: string
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
          example: false
        urls:
          type: array
          title: Webhook URLs
          description: ""
          minItems: 1
          items:
            type: object
            required:
            - url
            properties:
              url:
                type: string
                title: Webhook LB URL
                description: URL of a webhook endpoint to send events to, such as http://localhost:10200
                pattern: ^https?://.*
                example: string
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
                example: 1
            example:
              url: string
              weight: 1
          example:
          - url: string
            weight: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
          example: 600
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
          example: 300
      type: object
      example:
        id: string
        type: webhook
        pipeline: string
        systemFields: *id120
        environment: string
        streamtags: *id121
        method: POST
        format: ndjson
        keepAlive: true
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id122
        responseRetrySettings: *id123
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        authType: none
        tls:
          disabled: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        totalMemoryLimitKB: 123.45
        loadBalanced: false
        description: string
        customSourceExpression: __httpOut
        customDropWhenNull: false
        customEventDelimiter: \n
        customContentType: application/x-ndjson
        customPayloadExpression: "`${events}`"
        advancedContentType: application/json
        formatEventCode: string
        formatPayloadCode: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        username: string
        password: string
        token: string
        credentialsSecret: string
        textSecret: string
        loginUrl: string
        secretParamName: string
        secret: string
        tokenAttributeName: string
        authHeaderExpr: "`Bearer ${token}`"
        tokenTimeoutSecs: 3600
        oauthParams:
        - name: string
          value: string
        oauthHeaders:
        - name: string
          value: string
        url: string
        excludeSelf: false
        urls:
        - url: string
          weight: 1
        dnsResolvePeriodSec: 600
        loadBalanceStatsPeriodSec: 300
    OutputSentinel:
      required:
      - endpointURLConfiguration
      - loginUrl
      - secret
      - client_id
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - sentinel
          example: sentinel
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id124
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id124
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id125 []
          items:
            type: string
            example: string
          example: *id125
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
          example: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size (KB) of the request body (defaults to the API's maximum limit of 1000 KB)
          default: 1000
          minimum: 100
          maximum: 1000
          example: 1000
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events. You can also add headers dynamically on a per-event basis in the __headers field, as explained in [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id126 []
          items:
            type: string
            example: string
          example: *id126
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id127 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id127
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          enum:
          - oauth
          example: oauth
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: string
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: string
        client_id:
          title: Client ID
          type: string
          description: JavaScript expression to compute the Client ID for the Azure application. Can be a constant.
          example: string
        scope:
          title: Scope
          type: string
          description: Scope to pass in the OAuth request
          default: https://monitor.azure.com/.default
          example: https://monitor.azure.com/.default
        endpointURLConfiguration:
          title: Endpoint configuration
          description: Enter the data collection endpoint URL or the individual ID
          type: string
          enum:
          - url
          - ID
          default: url
          example: url
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
          example: 123.45
        description:
          type: string
          title: Description
          example: string
        format:
          enum:
          - ndjson
          - json_array
          - custom
          - advanced
          example: ndjson
        customSourceExpression:
          type: string
          title: Source expression
          description: "Expression to evaluate on events to generate output. Example: `raw=${_raw}`. See [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook#custom-format) for other examples. If empty, the full event is sent as stringified JSON."
          default: __httpOut
          example: __httpOut
        customDropWhenNull:
          type: boolean
          title: Drop when null
          description: Whether to drop events when the source expression evaluates to null
          default: false
          example: false
        customEventDelimiter:
          type: string
          title: Event delimiter
          description: Delimiter string to insert between individual events. Defaults to newline character.
          default: \n
          example: \n
        customContentType:
          type: string
          title: Content type
          description: Content type to use for request. Defaults to application/x-ndjson. Any content types set in Advanced Settings > Extra HTTP headers will override this entry.
          default: application/x-ndjson
          example: application/x-ndjson
        customPayloadExpression:
          type: string
          title: Batch expression
          description: 'Expression specifying how to format the payload for each batch. To reference the events to send, use the `${events}` variable. Example expression: `{ "items" : [${events}] }` would send the batch inside a JSON object.'
          default: "`${events}`"
          example: "`${events}`"
        advancedContentType:
          type: string
          title: Content type
          description: HTTP content-type header value
          default: application/json
          example: application/json
        formatEventCode:
          type: string
          title: Format inbound event
          description: "Custom JavaScript code to format incoming event data accessible through the __e variable. The formatted content is added to (__e['__eventOut']) if available. Otherwise, the original event is serialized as JSON. Caution: This function is evaluated in an unprotected context, allowing you to execute almost any JavaScript code."
          example: string
        formatPayloadCode:
          type: string
          title: Format outbound payload
          description: "Optional JavaScript code to format the payload sent to the Destination. The payload, containing a batch of formatted events, is accessible through the __e['payload'] variable. The formatted payload is returned in the __e['__payloadOut'] variable. Caution: This function is evaluated in an unprotected context, allowing you to execute almost any JavaScript code."
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        url:
          title: URL
          type: string
          description: URL to send events to. Can be overwritten by an event's __url field.
          pattern: ^https?://.*
          example: string
        dcrID:
          type: string
          title: Data collection rule ID
          description: Immutable ID for the Data Collection Rule (DCR)
          example: string
        dceEndpoint:
          type: string
          title: Data collection endpoint
          description: "Data collection endpoint (DCE) URL. In the format: `https://<Endpoint-Name>-<Identifier>.<Region>.ingest.monitor.azure.com`"
          pattern: ^https:\/\/\w+(-\w+)*-\w+\.\w+(-\w)?\.ingest\.monitor\.azure\.com(\/?)$
          example: string
        streamName:
          type: string
          title: Stream name
          description: The name of the stream (Sentinel table) in which to store the events
          example: string
      type: object
      example:
        id: string
        type: sentinel
        pipeline: string
        systemFields: *id124
        environment: string
        streamtags: *id125
        keepAlive: true
        concurrency: 5
        maxPayloadSizeKB: 1000
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id126
        responseRetrySettings: *id127
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        authType: oauth
        loginUrl: string
        secret: string
        client_id: string
        scope: https://monitor.azure.com/.default
        endpointURLConfiguration: url
        totalMemoryLimitKB: 123.45
        description: string
        format: ndjson
        customSourceExpression: __httpOut
        customDropWhenNull: false
        customEventDelimiter: \n
        customContentType: application/x-ndjson
        customPayloadExpression: "`${events}`"
        advancedContentType: application/json
        formatEventCode: string
        formatPayloadCode: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        url: string
        dcrID: string
        dceEndpoint: string
        streamName: string
    OutputDevnull:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - devnull
          example: devnull
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id128
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id128
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id129 []
          items:
            type: string
            example: string
          example: *id129
      type: object
      example:
        id: string
        type: devnull
        pipeline: string
        systemFields: *id128
        environment: string
        streamtags: *id129
    OutputSyslog:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - syslog
          example: syslog
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id130
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id130
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id131 []
          items:
            type: string
            example: string
          example: *id131
        protocol:
          type: string
          title: Protocol
          description: The network protocol to use for sending out syslog messages
          default: tcp
          enum:
          - tcp
          - udp
          example: tcp
        facility:
          type: integer
          title: Facility
          description: Default value for message facility. Will be overwritten by value of __facility if set. Defaults to user.
          default: 1
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          example: 1
        severity:
          type: integer
          title: Severity
          description: Default value for message severity. Will be overwritten by value of __severity if set. Defaults to notice.
          default: 5
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          example: 5
        appName:
          type: string
          title: App name
          description: Default name for device or application that originated the message. Defaults to Cribl, but will be overwritten by value of __appname if set.
          default: Cribl
          example: Cribl
        messageFormat:
          type: string
          default: rfc3164
          enum:
          - rfc3164
          - rfc5424
          title: Message format
          description: The syslog message format depending on the receiver's support
          example: rfc3164
        timestampFormat:
          type: string
          default: syslog
          enum:
          - syslog
          - iso8601
          title: Timestamp format
          description: Timestamp format to use when serializing event's time field
          example: syslog
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: "0"
        octetCountFraming:
          type: boolean
          title: Octet count framing
          description: Prefix messages with the byte count of the message. If disabled, no prefix will be set, and the message will be appended with a \n.
          example: true
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
          example: false
        description:
          type: string
          title: Description
          example: string
        loadBalanced:
          type: boolean
          title: Load balancing
          description: For optimal performance, enable load balancing even if you have one hostname, as it can expand to multiple IPs.  If this setting is disabled, consider enabling round-robin DNS.
          default: true
          example: true
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
          example: 60000
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        host:
          type: string
          title: Address
          description: The hostname of the receiver
          example: string
        port:
          type: number
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
          example: 123.45
        maxRecordSize:
          type: number
          title: Record size limit
          default: 1500
          minimum: 1
          maximum: 65535
          description: Maximum size of syslog messages. Make sure this value is less than or equal to the MTU to avoid UDP packet fragmentation.
          example: 1500
        udpDnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address. Ignored if the destination is an IP address. A value of 0 means every message sent will incur a DNS lookup.
          example: 0
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: syslog
        pipeline: string
        systemFields: *id130
        environment: string
        streamtags: *id131
        protocol: tcp
        facility: 1
        severity: 5
        appName: Cribl
        messageFormat: rfc3164
        timestampFormat: syslog
        throttleRatePerSec: "0"
        octetCountFraming: true
        logFailedRequests: false
        description: string
        loadBalanced: true
        connectionTimeout: 10000
        writeTimeout: 60000
        tls:
          disabled: true
          rejectUnauthorized: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        onBackpressure: block
        host: string
        port: 123.45
        maxRecordSize: 1500
        udpDnsResolvePeriodSec: 0
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputSplunk:
      required:
      - host
      - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - splunk
          example: splunk
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id132
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id132
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id133 []
          items:
            type: string
            example: string
          example: *id133
        host:
          type: string
          title: Address
          description: The hostname of the receiver
          example: string
        port:
          type: number
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
          default: 9997
          example: 9997
        nestedFields:
          type: string
          enum:
          - json
          - none
          title: Nested field serialization
          description: How to serialize nested fields into index-time fields
          default: none
          example: none
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: "0"
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
          example: 60000
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        enableMultiMetrics:
          type: boolean
          title: Output multiple metrics
          description: Output metrics in multiple-metric format in a single event. Supported in Splunk 8.0 and above.
          default: false
          example: false
        enableACK:
          type: boolean
          title: Minimize in-flight data loss
          description: Check if indexer is shutting down and stop sending data. This helps minimize data loss during shutdown.
          default: true
          example: true
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
          example: false
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake
          enum:
          - v3
          - v4
          default: v3
          example: v3
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          example: manual
        description:
          type: string
          title: Description
          example: string
        maxFailedHealthChecks:
          type: number
          title: Failed health check limit
          description: Maximum number of times healthcheck can fail before we close connection. If set to 0 (disabled), and the connection to Splunk is forcibly closed, some data loss might occur.
          default: 1
          minimum: 0
          example: 1
        compress:
          type: string
          title: Compression
          description: Controls whether the sender should send compressed data to the server. Select 'Disabled' to reject compressed connections or 'Always' to ignore server's configuration and send compressed data.
          default: disabled
          enum:
          - disabled
          - auto
          - always
          example: disabled
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        authToken:
          type: string
          title: Auth token
          description: Shared secret token to use when establishing a connection to a Splunk indexer.
          default: ""
          example: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: splunk
        pipeline: string
        systemFields: *id132
        environment: string
        streamtags: *id133
        host: string
        port: 9997
        nestedFields: none
        throttleRatePerSec: "0"
        connectionTimeout: 10000
        writeTimeout: 60000
        tls:
          disabled: true
          rejectUnauthorized: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        enableMultiMetrics: false
        enableACK: true
        logFailedRequests: false
        maxS2Sversion: v3
        onBackpressure: block
        authType: manual
        description: string
        maxFailedHealthChecks: 1
        compress: disabled
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        authToken: ""
        textSecret: string
    OutputSplunkLb:
      required:
      - hosts
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - splunk_lb
          example: splunk_lb
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id134
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id134
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id135 []
          items:
            type: string
            example: string
          example: *id135
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
          example: 600
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
          example: 300
        maxConcurrentSenders:
          type: number
          default: 0
          minimum: 0
          title: Connection limit
          description: Maximum number of concurrent connections (per Worker Process). A random set of IPs will be picked on every DNS resolution period. Use 0 for unlimited.
          example: 0
        nestedFields:
          type: string
          enum:
          - json
          - none
          title: Nested field serialization
          description: How to serialize nested fields into index-time fields
          default: none
          example: none
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: "0"
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
          example: 60000
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        enableMultiMetrics:
          type: boolean
          title: Output multiple metrics
          description: Output metrics in multiple-metric format in a single event. Supported in Splunk 8.0 and above.
          default: false
          example: false
        enableACK:
          type: boolean
          title: Minimize in-flight data loss
          description: Check if indexer is shutting down and stop sending data. This helps minimize data loss during shutdown.
          default: true
          example: true
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
          example: false
        maxS2Sversion:
          type: string
          title: Max S2S version
          description: The highest S2S protocol version to advertise during handshake
          enum:
          - v3
          - v4
          default: v3
          example: v3
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        indexerDiscovery:
          type: boolean
          default: false
          title: Indexer Discovery
          description: Automatically discover indexers in indexer clustering environment.
          example: false
        senderUnhealthyTimeAllowance:
          type: number
          title: Endpoint health fluctuation time allowance (ms)
          description: How long (in milliseconds) each LB endpoint can report blocked before the Destination reports unhealthy, blocking the sender. (Grace period for fluctuations.) Use 0 to disable; max 1 minute.
          default: 100
          minimum: 0
          maximum: 60000
          example: 100
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          example: manual
        description:
          type: string
          title: Description
          example: string
        maxFailedHealthChecks:
          type: number
          title: Failed health check limit
          description: Maximum number of times healthcheck can fail before we close connection. If set to 0 (disabled), and the connection to Splunk is forcibly closed, some data loss might occur.
          default: 1
          minimum: 0
          example: 1
        compress:
          type: string
          title: Compression
          description: Controls whether the sender should send compressed data to the server. Select 'Disabled' to reject compressed connections or 'Always' to ignore server's configuration and send compressed data.
          default: disabled
          enum:
          - disabled
          - auto
          - always
          example: disabled
        indexerDiscoveryConfigs:
          type: object
          description: List of configurations to set up indexer discovery in Splunk Indexer clustering environment.
          required:
          - masterUri
          - site
          - refreshIntervalSec
          properties:
            site:
              type: string
              pattern: "[0-9A-Za-z-._]+"
              title: Site
              description: Clustering site of the indexers from where indexers need to be discovered. In case of single site cluster, it defaults to 'default' site.
              default: default
              example: default
            masterUri:
              type: string
              pattern: ^https?://[a-zA-Z0-9-._]+:[0-9]+$
              title: Cluster manager URI
              description: "Full URI of Splunk cluster manager (scheme://host:port). Example: https://managerAddress:8089"
              example: string
            refreshIntervalSec:
              type: number
              default: 300
              minimum: 60
              maximum: 86400
              title: Refresh period
              description: Time interval, in seconds, between two consecutive indexer list fetches from cluster manager
              example: 300
            rejectUnauthorized:
              type: boolean
              title: Validate cluster manager certificates
              default: false
              description: During indexer discovery, reject cluster manager certificates that are not authorized by the system's CA. Disable to allow untrusted (for example, self-signed) certificates.
              example: false
            authTokens:
              type: array
              title: Authentication tokens
              description: Tokens required to authenticate to cluster manager for indexer discovery
              items:
                type: object
                properties:
                  authType:
                    title: Authentication method
                    type: string
                    enum:
                    - manual
                    - secret
                    default: manual
                    description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
                    example: manual
                example:
                  authType: manual
              example:
              - authType: manual
            authType:
              title: Authentication method
              type: string
              enum:
              - manual
              - secret
              default: manual
              description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
              example: manual
            authToken:
              type: string
              title: Auth token
              description: Shared secret to be provided by any client (in authToken header field). If empty, unauthorized access is permitted.
              default: ""
              example: ""
            textSecret:
              type: string
              title: Auth token (text secret)
              description: Select or create a stored text secret
              example: string
          example:
            site: default
            masterUri: string
            refreshIntervalSec: 300
            rejectUnauthorized: false
            authTokens:
            - authType: manual
            authType: manual
            authToken: ""
            textSecret: string
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
          example: false
        hosts:
          type: array
          title: Destinations
          description: Set of Splunk indexers to load-balance data to.
          minItems: 1
          items:
            type: object
            required:
            - host
            - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver
                example: string
              port:
                type: number
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host
                default: 9997
                example: 9997
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS
                enum:
                - inherit
                - off
                default: inherit
                example: inherit
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not specified, defaults to connection host (if not an IP); otherwise, uses the global TLS settings.
                example: string
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
                example: 1
            example:
              host: string
              port: 9997
              tls: inherit
              servername: string
              weight: 1
          example:
          - host: string
            port: 9997
            tls: inherit
            servername: string
            weight: 1
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        authToken:
          type: string
          title: Auth token
          description: Shared secret token to use when establishing a connection to a Splunk indexer.
          default: ""
          example: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: splunk_lb
        pipeline: string
        systemFields: *id134
        environment: string
        streamtags: *id135
        dnsResolvePeriodSec: 600
        loadBalanceStatsPeriodSec: 300
        maxConcurrentSenders: 0
        nestedFields: none
        throttleRatePerSec: "0"
        connectionTimeout: 10000
        writeTimeout: 60000
        tls:
          disabled: true
          rejectUnauthorized: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        enableMultiMetrics: false
        enableACK: true
        logFailedRequests: false
        maxS2Sversion: v3
        onBackpressure: block
        indexerDiscovery: false
        senderUnhealthyTimeAllowance: 100
        authType: manual
        description: string
        maxFailedHealthChecks: 1
        compress: disabled
        indexerDiscoveryConfigs:
          site: default
          masterUri: string
          refreshIntervalSec: 300
          rejectUnauthorized: false
          authTokens:
          - authType: manual
          authType: manual
          authToken: ""
          textSecret: string
        excludeSelf: false
        hosts:
        - host: string
          port: 9997
          tls: inherit
          servername: string
          weight: 1
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        authToken: ""
        textSecret: string
    OutputSplunkHec:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - splunk_hec
          example: splunk_hec
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id136
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id136
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id137 []
          items:
            type: string
            example: string
          example: *id137
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Enable for optimal performance. Even if you have one hostname, it can expand to multiple IPs. If disabled, consider enabling round-robin DNS.
          default: true
          example: true
        nextQueue:
          type: string
          title: Next Processing Queue
          description: In the Splunk app, define which Splunk processing queue to send the events after HEC processing.
          default: indexQueue
          example: indexQueue
        tcpRouting:
          type: string
          title: Default _TCP_ROUTING
          description: In the Splunk app, set the value of _TCP_ROUTING for events that do not have _ctrl._TCP_ROUTING set.
          default: nowhere
          example: nowhere
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 2097152
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id138 []
          items:
            type: string
            example: string
          example: *id138
        enableMultiMetrics:
          type: boolean
          title: Output multi-metrics
          description: Output metrics in multiple-metric format, supported in Splunk 8.0 and above to allow multiple metrics in a single event.
          default: false
          example: false
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          example: manual
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id139 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id139
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        url:
          type: string
          title: Splunk HEC Endpoint
          description: URL to a Splunk HEC endpoint to send events to, e.g., http://localhost:8088/services/collector/event
          default: http://localhost:8088/services/collector/event
          pattern: ^https?://.*
          example: http://localhost:8088/services/collector/event
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
          example: false
        urls:
          type: array
          title: Splunk HEC Endpoints
          description: ""
          minItems: 1
          items:
            type: object
            required:
            - url
            properties:
              url:
                type: string
                title: HEC Endpoint
                description: URL to a Splunk HEC endpoint to send events to, e.g., http://localhost:8088/services/collector/event
                default: http://localhost:8088/services/collector/event
                pattern: ^https?://.*
                example: http://localhost:8088/services/collector/event
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
                example: 1
            example:
              url: http://localhost:8088/services/collector/event
              weight: 1
          example:
          - url: http://localhost:8088/services/collector/event
            weight: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
          example: 600
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
          example: 300
        token:
          type: string
          title: HEC Auth token
          description: Splunk HEC authentication token
          example: string
        textSecret:
          type: string
          title: HEC Auth token (text secret)
          description: Select or create a stored text secret
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: splunk_hec
        pipeline: string
        systemFields: *id136
        environment: string
        streamtags: *id137
        loadBalanced: true
        nextQueue: indexQueue
        tcpRouting: nowhere
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        failedRequestLoggingMode: none
        safeHeaders: *id138
        enableMultiMetrics: false
        authType: manual
        responseRetrySettings: *id139
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        description: string
        url: http://localhost:8088/services/collector/event
        useRoundRobinDns: false
        excludeSelf: false
        urls:
        - url: http://localhost:8088/services/collector/event
          weight: 1
        dnsResolvePeriodSec: 600
        loadBalanceStatsPeriodSec: 300
        token: string
        textSecret: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputTcpjson:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - tcpjson
          example: tcpjson
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id140
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id140
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id141 []
          items:
            type: string
            example: string
          example: *id141
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: true
          example: true
        compression:
          type: string
          default: gzip
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the data before sending
          example: gzip
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
          example: false
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: "0"
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
          example: 60000
        tokenTTLMinutes:
          type: number
          title: Auth Token TTL minutes
          default: 60
          minimum: 1
          maximum: 60
          description: The number of minutes before the internally generated authentication token expires, valid values between 1 and 60
          example: 60
        sendHeader:
          type: boolean
          title: Send auth token in initial record
          description: Upon connection, send a header-like record containing the auth token and other metadata.This record will not contain an actual event – only subsequent records will.
          default: true
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          example: manual
        description:
          type: string
          title: Description
          example: string
        host:
          type: string
          title: Address
          description: The hostname of the receiver
          example: string
        port:
          type: number
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
          example: 123.45
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
          example: false
        hosts:
          type: array
          title: Destinations
          description: Set of hosts to load-balance data to
          minItems: 1
          items:
            type: object
            required:
            - host
            - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver
                example: string
              port:
                type: number
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host
                example: 123.45
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS
                enum:
                - inherit
                - off
                default: inherit
                example: inherit
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not specified, defaults to connection host (if not an IP); otherwise, uses the global TLS settings.
                example: string
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
                example: 1
            example:
              host: string
              port: 123.45
              tls: inherit
              servername: string
              weight: 1
          example:
          - host: string
            port: 123.45
            tls: inherit
            servername: string
            weight: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
          example: 600
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
          example: 300
        maxConcurrentSenders:
          type: number
          default: 0
          minimum: 0
          title: Connection limit
          description: Maximum number of concurrent connections (per Worker Process). A random set of IPs will be picked on every DNS resolution period. Use 0 for unlimited.
          example: 0
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        authToken:
          type: string
          title: Auth token
          description: Optional authentication token to include as part of the connection header
          default: ""
          example: ""
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: tcpjson
        pipeline: string
        systemFields: *id140
        environment: string
        streamtags: *id141
        loadBalanced: true
        compression: gzip
        logFailedRequests: false
        throttleRatePerSec: "0"
        tls:
          disabled: true
          rejectUnauthorized: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        connectionTimeout: 10000
        writeTimeout: 60000
        tokenTTLMinutes: 60
        sendHeader: true
        onBackpressure: block
        authType: manual
        description: string
        host: string
        port: 123.45
        excludeSelf: false
        hosts:
        - host: string
          port: 123.45
          tls: inherit
          servername: string
          weight: 1
        dnsResolvePeriodSec: 600
        loadBalanceStatsPeriodSec: 300
        maxConcurrentSenders: 0
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        authToken: ""
        textSecret: string
    OutputWavefront:
      required:
      - domain
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - wavefront
          example: wavefront
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id142
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id142
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id143 []
          items:
            type: string
            example: string
          example: *id143
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          example: manual
        domain:
          type: string
          title: Domain name
          description: WaveFront domain name, e.g. "longboard"
          default: longboard
          example: longboard
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id144 []
          items:
            type: string
            example: string
          example: *id144
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id145 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id145
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        token:
          type: string
          title: Auth token
          description: WaveFront API authentication token (see [here](https://docs.wavefront.com/wavefront_api.html#generating-an-api-token))
          example: string
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: wavefront
        pipeline: string
        systemFields: *id142
        environment: string
        streamtags: *id143
        authType: manual
        domain: longboard
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id144
        responseRetrySettings: *id145
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        description: string
        token: string
        textSecret: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputSignalfx:
      required:
      - realm
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - signalfx
          example: signalfx
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id146
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id146
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id147 []
          items:
            type: string
            example: string
          example: *id147
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          example: manual
        realm:
          type: string
          title: Realm
          description: SignalFx realm name, e.g. "us0". For a complete list of available SignalFx realm names, please check [here](https://docs.splunk.com/observability/en/get-started/service-description.html#sd-regions).
          default: us0
          example: us0
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id148 []
          items:
            type: string
            example: string
          example: *id148
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id149 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id149
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        token:
          type: string
          title: Auth token
          description: SignalFx API access token (see [here](https://docs.signalfx.com/en/latest/admin-guide/tokens.html#working-with-access-tokens))
          example: string
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: signalfx
        pipeline: string
        systemFields: *id146
        environment: string
        streamtags: *id147
        authType: manual
        realm: us0
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id148
        responseRetrySettings: *id149
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        description: string
        token: string
        textSecret: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputFilesystem:
      required:
      - destPath
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - filesystem
          example: filesystem
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id150
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id150
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id151 []
          items:
            type: string
            example: string
          example: *id151
        destPath:
          type: string
          title: Output location
          description: Final destination for the output files
          example: string
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files before compressing and moving to final destination. Use performant, stable storage.
          example: string
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
          example: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
          - json
          - raw
          - parquet
          default: json
          example: json
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
          example: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 32
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
          example: 30
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 100
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
          example: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 64
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
          example: false
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
          - block
          - drop
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
          - none
          - gzip
          default: gzip
          example: gzip
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
          - best_speed
          - normal
          - best_compression
          default: best_speed
          example: best_speed
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
          example: false
        parquetVersion:
          type: string
          title: Parquet version
          enum:
          - PARQUET_1_0
          - PARQUET_2_4
          - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
          - DATA_PAGE_V1
          - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 10000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: ""
              value:
                type: string
                title: Value
                example: string
            example:
              key: ""
              value: string
          example:
          - key: ""
            value: string
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
          example: false
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
      type: object
      example:
        id: string
        type: filesystem
        pipeline: string
        systemFields: *id150
        environment: string
        streamtags: *id151
        destPath: string
        stagePath: string
        addIdToStagePath: true
        removeEmptyDirs: true
        partitionExpr: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format: json
        baseFileName: "`CriblOut`"
        fileNameSuffix: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB: 32
        maxFileOpenTimeSec: 300
        maxFileIdleTimeSec: 30
        maxOpenFiles: 100
        headerLine: ""
        writeHighWaterMark: 64
        onBackpressure: block
        deadletterEnabled: false
        onDiskFullBackpressure: block
        description: string
        compress: gzip
        compressionLevel: best_speed
        automaticSchema: false
        parquetVersion: PARQUET_2_6
        parquetDataPageVersion: DATA_PAGE_V2
        parquetRowGroupLength: 10000
        parquetPageSize: 1MB
        shouldLogInvalidRows: true
        keyValueMetadata:
        - key: ""
          value: string
        enableStatistics: true
        enableWritePageIndex: true
        enablePageChecksum: false
        emptyDirCleanupSec: 300
        deadletterPath: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum: 20
    OutputS3:
      required:
      - bucket
      - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - s3
          example: s3
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id152
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id152
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id153 []
          items:
            type: string
            example: string
          example: *id153
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`"
          example: string
        region:
          type: string
          title: Region
          description: Region where the S3 bucket is located
          example: string
        awsSecretKey:
          type: string
          title: Secret key
          description: "Secret key. This value can be a constant or a JavaScript expression. Example: `${C.env.SOME_SECRET}`)"
          example: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        destPath:
          type: string
          title: Key prefix
          description: "Prefix to append to files before uploading. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`"
          default: ""
          example: ""
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
          - private
          - public-read
          - public-read-write
          - authenticated-read
          - aws-exec-read
          - bucket-owner-read
          - bucket-owner-full-control
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
          - STANDARD
          - REDUCED_REDUNDANCY
          - STANDARD_IA
          - ONEZONE_IA
          - INTELLIGENT_TIERING
          - GLACIER
          - GLACIER_IR
          - DEEP_ARCHIVE
          example: STANDARD
        serverSideEncryption:
          type: string
          title: Server-side encryption for uploaded objects
          enum:
          - AES256
          - aws:kms
          example: AES256
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
          example: string
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
          example: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
          - json
          - raw
          - parquet
          default: json
          example: json
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
          example: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 32
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 100
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
          example: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 64
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
          example: false
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
          - block
          - drop
          default: block
          example: block
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
          example: 30
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts upload limit
          description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
          example: 4
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the bucket itself
          default: true
          example: true
        maxClosingFilesToBackpressure:
          type: number
          title: Staging file limit
          description: Maximum number of files that can be waiting for upload before backpressure is applied
          default: 100
          minimum: 10
          maximum: 4200
          example: 100
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: This value can be a constant or a JavaScript expression (`${C.env.SOME_ACCESS_KEY}`)
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
          - none
          - gzip
          default: gzip
          example: gzip
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
          - best_speed
          - normal
          - best_compression
          default: best_speed
          example: best_speed
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
          example: false
        parquetVersion:
          type: string
          title: Parquet version
          enum:
          - PARQUET_1_0
          - PARQUET_2_4
          - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
          - DATA_PAGE_V1
          - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 10000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: ""
              value:
                type: string
                title: Value
                example: string
            example:
              key: ""
              value: string
          example:
          - key: ""
            value: string
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
          example: false
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
      type: object
      example:
        id: string
        type: s3
        pipeline: string
        systemFields: *id152
        environment: string
        streamtags: *id153
        bucket: string
        region: string
        awsSecretKey: string
        awsAuthenticationMethod: auto
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        stagePath: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath: true
        destPath: ""
        objectACL: private
        storageClass: STANDARD
        serverSideEncryption: AES256
        kmsKeyId: string
        removeEmptyDirs: true
        partitionExpr: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format: json
        baseFileName: "`CriblOut`"
        fileNameSuffix: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB: 32
        maxOpenFiles: 100
        headerLine: ""
        writeHighWaterMark: 64
        onBackpressure: block
        deadletterEnabled: false
        onDiskFullBackpressure: block
        maxFileOpenTimeSec: 300
        maxFileIdleTimeSec: 30
        maxConcurrentFileParts: 4
        verifyPermissions: true
        maxClosingFilesToBackpressure: 100
        description: string
        awsApiKey: string
        awsSecret: string
        compress: gzip
        compressionLevel: best_speed
        automaticSchema: false
        parquetVersion: PARQUET_2_6
        parquetDataPageVersion: DATA_PAGE_V2
        parquetRowGroupLength: 10000
        parquetPageSize: 1MB
        shouldLogInvalidRows: true
        keyValueMetadata:
        - key: ""
          value: string
        enableStatistics: true
        enableWritePageIndex: true
        enablePageChecksum: false
        emptyDirCleanupSec: 300
        deadletterPath: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum: 20
    OutputAzureBlob:
      required:
      - containerName
      - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - azure_blob
          example: azure_blob
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id154
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id154
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id155 []
          items:
            type: string
            example: string
          example: *id155
        containerName:
          type: string
          title: Container name
          description: The Azure Blob Storage container name. Name can include only lowercase letters, numbers, and hyphens. For dynamic container names, enter a JavaScript expression within quotes or backtickss, to be evaluated at initialization. The expression can evaluate to a constant value and can reference Global Variables, such as `myContainer-${C.env["CRIBL_WORKER_ID"]}`.
          example: string
        createContainer:
          type: boolean
          title: Create container
          description: Create the configured container in Azure Blob Storage if it does not already exist
          default: false
          example: false
        destPath:
          type: string
          title: Blob prefix
          description: Root directory prepended to path before uploading. Value can be a JavaScript expression enclosed in quotes or backticks, to be evaluated at initialization. The expression can evaluate to a constant value and can reference Global Variables, such as `myBlobPrefix-${C.env["CRIBL_WORKER_ID"]}`.
          example: string
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts limit
          description: Maximum number of parts to upload in parallel per file
          default: 1
          minimum: 1
          maximum: 10
          example: 1
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
          example: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
          - json
          - raw
          - parquet
          default: json
          example: json
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
          example: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 32
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
          example: 30
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 100
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
          example: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 64
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
          example: false
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
          - block
          - drop
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          - clientSecret
          - clientCert
          default: manual
          example: manual
        storageClass:
          type: string
          title: Blob access tier
          enum:
          - Inferred
          - Hot
          - Cool
          - Cold
          - Archive
          default: Inferred
          example: Inferred
        description:
          type: string
          title: Description
          example: string
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
          - none
          - gzip
          default: gzip
          example: gzip
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
          - best_speed
          - normal
          - best_compression
          default: best_speed
          example: best_speed
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
          example: false
        parquetVersion:
          type: string
          title: Parquet version
          enum:
          - PARQUET_1_0
          - PARQUET_2_4
          - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
          - DATA_PAGE_V1
          - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 10000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: ""
              value:
                type: string
                title: Value
                example: string
            example:
              key: ""
              value: string
          example:
          - key: ""
            value: string
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
          example: false
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
        connectionString:
          type: string
          title: Connection string
          description: Enter your Azure Storage account connection string. If left blank, Stream will fall back to env.AZURE_STORAGE_CONNECTION_STRING.
          example: string
        textSecret:
          type: string
          title: Connection string (text secret)
          description: Select or create a stored text secret
          example: string
        storageAccountName:
          type: string
          title: Storage account name
          description: The name of your Azure storage account
          example: string
        tenantId:
          type: string
          title: Tenant ID
          description: The service principal's tenant ID
          example: string
        clientId:
          type: string
          title: Client ID
          description: The service principal's client ID
          example: string
        azureCloud:
          type: string
          title: Azure Cloud
          description: The Azure cloud to use. Defaults to Azure Public Cloud.
          example: string
        endpointSuffix:
          type: string
          title: Endpoint suffix
          description: Endpoint suffix for the service URL. Takes precedence over the Azure Cloud setting. Defaults to core.windows.net.
          example: string
        clientTextSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
          example: string
        certificate:
          type: object
          required:
          - certificateName
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The certificate you registered as credentials for your app in the Azure portal
              example: string
          example:
            certificateName: string
      type: object
      example:
        id: string
        type: azure_blob
        pipeline: string
        systemFields: *id154
        environment: string
        streamtags: *id155
        containerName: string
        createContainer: false
        destPath: string
        stagePath: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath: true
        maxConcurrentFileParts: 1
        removeEmptyDirs: true
        partitionExpr: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format: json
        baseFileName: "`CriblOut`"
        fileNameSuffix: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB: 32
        maxFileOpenTimeSec: 300
        maxFileIdleTimeSec: 30
        maxOpenFiles: 100
        headerLine: ""
        writeHighWaterMark: 64
        onBackpressure: block
        deadletterEnabled: false
        onDiskFullBackpressure: block
        authType: manual
        storageClass: Inferred
        description: string
        compress: gzip
        compressionLevel: best_speed
        automaticSchema: false
        parquetVersion: PARQUET_2_6
        parquetDataPageVersion: DATA_PAGE_V2
        parquetRowGroupLength: 10000
        parquetPageSize: 1MB
        shouldLogInvalidRows: true
        keyValueMetadata:
        - key: ""
          value: string
        enableStatistics: true
        enableWritePageIndex: true
        enablePageChecksum: false
        emptyDirCleanupSec: 300
        deadletterPath: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum: 20
        connectionString: string
        textSecret: string
        storageAccountName: string
        tenantId: string
        clientId: string
        azureCloud: string
        endpointSuffix: string
        clientTextSecret: string
        certificate:
          certificateName: string
    OutputAzureDataExplorer:
      required:
      - clusterUrl
      - database
      - table
      - compress
      - oauthEndpoint
      - tenantId
      - clientId
      - scope
      - oauthType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - azure_data_explorer
          example: azure_data_explorer
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id156
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id156
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id157 []
          items:
            type: string
            example: string
          example: *id157
        clusterUrl:
          type: string
          title: Cluster base URI
          description: The base URI for your cluster. Typically, `https://<cluster>.<region>.kusto.windows.net`.
          pattern: ^https://[a-zA-Z0-9\-]+.(\w+).(kusto.fabric.microsoft.com|kusto.(windows|usgovcloudapi).net)$
          example: string
        database:
          type: string
          title: Database name
          description: Name of the database containing the table where data will be ingested
          pattern: ^[\w\s\-\.]+$
          maxLength: 260
          example: string
        table:
          type: string
          title: Table name
          description: Name of the table to ingest data into
          pattern: ^[\w\-\.]+$
          maxLength: 1024
          example: string
        validateDatabaseSettings:
          type: boolean
          title: Validate database settings
          description: When saving or starting the Destination, validate the database name and credentials; also validate table name, except when creating a new table. Disable if your Azure app does not have both the Database Viewer and the Table Viewer role.
          default: true
          example: true
        ingestMode:
          type: string
          title: Ingestion mode
          enum:
          - batching
          - streaming
          default: batching
          example: batching
        oauthEndpoint:
          type: string
          title: Microsoft Entra ID authentication endpoint
          default: https://login.microsoftonline.com
          enum:
          - https://login.microsoftonline.com
          - https://login.microsoftonline.us
          - https://login.partner.microsoftonline.cn
          description: Endpoint used to acquire authentication tokens from Azure
          example: https://login.microsoftonline.com
        tenantId:
          type: string
          title: Tenant ID
          description: Directory ID (tenant identifier) in Azure Active Directory
          example: string
        clientId:
          type: string
          title: Client ID
          description: client_id to pass in the OAuth request parameter
          example: string
        scope:
          type: string
          title: Scope
          description: Scope to pass in the OAuth request parameter
          example: string
        oauthType:
          title: Authentication method
          type: string
          enum:
          - clientSecret
          - clientTextSecret
          - certificate
          default: clientSecret
          description: The type of OAuth 2.0 client credentials grant flow to use
          example: clientSecret
        description:
          type: string
          title: Description
          example: string
        clientSecret:
          type: string
          title: Client secret
          description: The client secret that you generated for your app in the Azure portal
          example: string
        textSecret:
          type: string
          title: Client secret (text secret)
          description: Select or create a stored text secret
          example: string
        certificate:
          type: object
          properties:
            certificateName:
              type: string
              title: Certificate
              description: The certificate you registered as credentials for your app in the Azure portal
              example: string
          example:
            certificateName: string
        ingestUrl:
          type: string
          title: Ingestion service URI
          description: The ingestion service URI for your cluster. Typically, `https://ingest-<cluster>.<region>.kusto.windows.net`.
          pattern: ^https://[a-zA-Z0-9\-]+.(\w+).(kusto.fabric.microsoft.com|kusto.(windows|usgovcloudapi).net)$
          example: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        isMappingObj:
          type: boolean
          title: Add mapping object
          description: Send a JSON mapping object instead of specifying an existing named data mapping
          default: false
          example: false
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
          - json
          - raw
          - parquet
          default: json
          example: json
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: $CRIBL_HOME/state/outputs/staging
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 32
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
          example: 30
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 100
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts limit
          description: Maximum number of parts to upload in parallel per file
          default: 1
          minimum: 1
          maximum: 10
          example: 1
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
          - block
          - drop
          default: block
          example: block
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
          example: false
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushImmediately:
          type: boolean
          title: Flush immediately
          description: Bypass the data management service's aggregation mechanism
          default: false
          example: false
        retainBlobOnSuccess:
          type: boolean
          title: Retain blob on success
          description: Prevent blob deletion after ingestion is complete
          default: false
          example: false
        extentTags:
          type: array
          title: Extent tags
          description: Strings or tags associated with the extent (ingested data shard)
          items:
            type: object
            required:
            - value
            properties:
              prefix:
                type: string
                title: Prefix (optional)
                enum:
                - dropBy
                - ingestBy
                example: dropBy
              value:
                type: string
                title: Value
                example: string
            example:
              prefix: dropBy
              value: string
          example:
          - prefix: dropBy
            value: string
        ingestIfNotExists:
          type: array
          title: Enforce uniqueness via tag values
          description: Prevents duplicate ingestion by verifying whether an extent with the specified ingest-by tag already exists
          items:
            type: object
            required:
            - value
            properties:
              value:
                type: string
                title: Value
                example: string
            example:
              value: string
          example:
          - value: string
        reportLevel:
          type: string
          title: Report level
          description: Level of ingestion status reporting. Defaults to FailuresOnly.
          enum:
          - failuresOnly
          - doNotReport
          - failuresAndSuccesses
          default: failuresOnly
          example: failuresOnly
        reportMethod:
          type: string
          title: Report method
          description: Target of the ingestion status reporting. Defaults to Queue.
          enum:
          - queue
          - table
          - queueAndTable
          default: queue
          example: queue
        additionalProperties:
          type: array
          title: Additional fields
          description: Optionally, enter additional configuration properties to send to the ingestion service
          items:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                title: Key
                pattern: ^[\w\-\.]+$
                example: string
              value:
                type: string
                title: Value
                example: string
            example:
              key: string
              value: string
          example:
          - key: string
            value: string
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id158
          - httpStatus: 429
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id158
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
          - none
          - gzip
          default: gzip
          example: gzip
        mappingRef:
          type: string
          title: Data mapping
          description: Enter the name of a data mapping associated with your target table. Or, if incoming event and target table fields match exactly, you can leave the field empty.
          pattern: ^[\w\-\.]+$
          example: string
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 4096
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
          example: true
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: azure_data_explorer
        pipeline: string
        systemFields: *id156
        environment: string
        streamtags: *id157
        clusterUrl: string
        database: string
        table: string
        validateDatabaseSettings: true
        ingestMode: batching
        oauthEndpoint: https://login.microsoftonline.com
        tenantId: string
        clientId: string
        scope: string
        oauthType: clientSecret
        description: string
        clientSecret: string
        textSecret: string
        certificate:
          certificateName: string
        ingestUrl: string
        onBackpressure: block
        isMappingObj: false
        format: json
        stagePath: $CRIBL_HOME/state/outputs/staging
        fileNameSuffix: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB: 32
        maxFileOpenTimeSec: 300
        maxFileIdleTimeSec: 30
        maxOpenFiles: 100
        maxConcurrentFileParts: 1
        onDiskFullBackpressure: block
        addIdToStagePath: true
        removeEmptyDirs: true
        deadletterEnabled: false
        timeoutSec: 30
        flushImmediately: false
        retainBlobOnSuccess: false
        extentTags:
        - prefix: dropBy
          value: string
        ingestIfNotExists:
        - value: string
        reportLevel: failuresOnly
        reportMethod: queue
        additionalProperties:
        - key: string
          value: string
        responseRetrySettings: *id158
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        compress: gzip
        mappingRef: string
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        flushPeriodSec: 1
        rejectUnauthorized: true
        useRoundRobinDns: false
        keepAlive: true
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputAzureLogs:
      required:
      - logType
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - azure_logs
          example: azure_logs
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id159
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id159
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id160 []
          items:
            type: string
            example: string
          example: *id160
        logType:
          type: string
          title: Log Type
          description: The Log Type of events sent to this LogAnalytics workspace. Defaults to `Cribl`. Use only letters, numbers, and `_` characters, and can't exceed 100 characters. Can be overwritten by event field __logType.
          default: Cribl
          maxLength: 100
          example: Cribl
        resourceId:
          type: string
          title: Resource ID
          description: Optional Resource ID of the Azure resource to associate the data with. Can be overridden by the __resourceId event field. This ID populates the _ResourceId property, allowing the data to be included in resource-centric queries. If the ID is neither specified nor overridden, resource-centric queries will omit the data.
          example: string
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 10240
          example: 1024
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id161 []
          items:
            type: string
            example: string
          example: *id161
        apiUrl:
          type: string
          title: DNS name of API endpoint
          description: "The DNS name of the Log API endpoint that sends log data to a Log Analytics workspace in Azure Monitor. Defaults to .ods.opinsights.azure.com. @{product} will add a prefix and suffix to construct a URI in this format: <https://<Workspace_ID><your_DNS_name>/api/logs?api-version=<API version>."
          pattern: ^\.[^\/]+$
          default: .ods.opinsights.azure.com
          example: .ods.opinsights.azure.com
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id162 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id162
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Enter workspace ID and workspace key directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        workspaceId:
          type: string
          title: Workspace ID
          description: Azure Log Analytics Workspace ID. See Azure Dashboard Workspace > Advanced settings.
          example: string
        workspaceKey:
          type: string
          title: Workspace key
          description: Azure Log Analytics Workspace Primary or Secondary Shared Key. See Azure Dashboard Workspace > Advanced settings.
          example: string
        keypairSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
      type: object
      example:
        id: string
        type: azure_logs
        pipeline: string
        systemFields: *id159
        environment: string
        streamtags: *id160
        logType: Cribl
        resourceId: string
        concurrency: 5
        maxPayloadSizeKB: 1024
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id161
        apiUrl: .ods.opinsights.azure.com
        responseRetrySettings: *id162
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        authType: manual
        description: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        workspaceId: string
        workspaceKey: string
        keypairSecret: string
    OutputKinesis:
      required:
      - streamName
      - region
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - kinesis
          example: kinesis
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id163
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id163
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id164 []
          items:
            type: string
            example: string
          example: *id164
        streamName:
          type: string
          title: Stream Name
          description: Kinesis stream name to send events to.
          example: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: Region where the Kinesis stream is located
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: Kinesis stream service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to Kinesis stream-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Kinesis stream requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for Kinesis stream
          description: Use Assume Role credentials to access Kinesis stream
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        concurrency:
          type: number
          title: Put request concurrency
          description: Maximum number of ongoing put requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxRecordSizeKB:
          type: number
          title: Record size limit (KB, uncompressed)
          description: Maximum size (KB) of each individual record before compression. For uncompressed or non-compressible data 1MB is the max recommended size
          default: 1024
          minimum: 1
          maximum: 10240
          example: 1024
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
          example: 1
        compression:
          type: string
          default: gzip
          enum:
          - none
          - gzip
          title: Compression
          description: Compression type to use for records
          example: gzip
        useListShards:
          type: boolean
          title: ListShards API
          description: Provides higher stream rate limits, improving delivery speed and reliability by minimizing throttling. See the [ListShards API](https://docs.aws.amazon.com/kinesis/latest/APIReference/API_ListShards.html) documentation for details.
          default: false
          example: false
        asNdjson:
          type: boolean
          title: Send batched
          description: Batch events into a single record as NDJSON
          default: true
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: kinesis
        pipeline: string
        systemFields: *id163
        environment: string
        streamtags: *id164
        streamName: string
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        concurrency: 5
        maxRecordSizeKB: 1024
        flushPeriodSec: 1
        compression: gzip
        useListShards: false
        asNdjson: true
        onBackpressure: block
        description: string
        awsApiKey: string
        awsSecret: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputHoneycomb:
      required:
      - dataset
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - honeycomb
          example: honeycomb
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id165
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id165
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id166 []
          items:
            type: string
            example: string
          example: *id166
        dataset:
          type: string
          title: Dataset name
          description: Name of the dataset to send events to – e.g., observability
          example: string
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id167 []
          items:
            type: string
            example: string
          example: *id167
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id168 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id168
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        team:
          type: string
          title: API key
          description: Team API key where the dataset belongs
          example: string
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: honeycomb
        pipeline: string
        systemFields: *id165
        environment: string
        streamtags: *id166
        dataset: string
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id167
        responseRetrySettings: *id168
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        authType: manual
        description: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        team: string
        textSecret: string
    OutputAzureEventhub:
      required:
      - brokers
      - topic
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - azure_eventhub
          example: azure_eventhub
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id169
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id169
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id170 []
          items:
            type: string
            example: string
          example: *id170
        brokers:
          type: array
          title: Brokers
          description: List of Event Hubs Kafka brokers to connect to, eg. yourdomain.servicebus.windows.net:9093. The hostname can be found in the host portion of the primary or secondary connection string in Shared Access Policies.
          minItems: 1
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        topic:
          type: string
          title: Event Hub name
          description: The name of the Event Hub (Kafka Topic) to publish events. Can be overwritten using field __topicOut.
          example: string
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments
          enum:
          - 1
          - 0
          - -1
          example: 1
        format:
          type: string
          default: json
          enum:
          - json
          - raw
          title: Record data format
          description: Format to use to serialize events before writing to the Event Hubs Kafka brokers
          example: json
        maxRecordSizeKB:
          type: number
          default: 768
          minimum: 1
          title: Record size limit (KB, uncompressed)
          description: Maximum size of each record batch before compression. Setting should be < message.max.bytes settings in Event Hubs brokers.
          example: 768
        flushEventCount:
          type: number
          default: 1000
          minimum: 1
          maximum: 10000
          title: Events-per-batch limit
          description: Maximum number of events in a batch before forcing a flush
          example: 1000
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
          example: 1
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 5
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 30000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 300
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
          example: 2
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 10000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            mechanism:
              type: string
              enum:
              - plain
              - oauthbearer
              title: SASL mechanism
              default: plain
              example: plain
          example:
            disabled: false
            mechanism: plain
        tls:
          type: object
          title: TLS settings (client side)
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: Reject certificates that are not authorized by a CA in the CA certificate path, or by another trusted CA (such as the system's)
              default: true
              example: true
          example:
            disabled: false
            rejectUnauthorized: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: azure_eventhub
        pipeline: string
        systemFields: *id169
        environment: string
        streamtags: *id170
        brokers:
        - string
        topic: string
        ack: 1
        format: json
        maxRecordSizeKB: 768
        flushEventCount: 1000
        flushPeriodSec: 1
        connectionTimeout: 10000
        requestTimeout: 60000
        maxRetries: 5
        maxBackOff: 30000
        initialBackoff: 300
        backoffRate: 2
        authenticationTimeout: 10000
        reauthenticationThreshold: 10000
        sasl:
          disabled: false
          mechanism: plain
        tls:
          disabled: false
          rejectUnauthorized: true
        onBackpressure: block
        description: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputGoogleChronicle:
      required:
      - logFormatType
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - google_chronicle
          example: google_chronicle
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id171
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id171
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id172 []
          items:
            type: string
            example: string
          example: *id172
        apiVersion:
          type: string
          title: API version
          default: v1
          enum:
          - v1
          - v2
          example: v1
        authenticationMethod:
          type: string
          title: Authentication method
          default: serviceAccount
          enum:
          - manual
          - secret
          - serviceAccount
          - serviceAccountSecret
          example: serviceAccount
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id173
          - httpStatus: 429
            initialBackoff: 30000
            backoffRate: 1
            maxBackoff: 30000
          - httpStatus: 503
            initialBackoff: 30000
            backoffRate: 1
            maxBackoff: 30000
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id173
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        logFormatType:
          type: string
          title: Send events as
          description: ""
          default: unstructured
          enum:
          - unstructured
          - udm
          example: unstructured
        region:
          type: string
          title: Region
          description: Regional endpoint to send events to
          example: string
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 1024
          example: 1024
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 90
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 90
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id174 []
          items:
            type: string
            example: string
          example: *id174
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
          example: 123.45
        description:
          type: string
          title: Description
          example: string
        extraLogTypes:
          type: array
          title: Custom log types
          description: Custom log types. If the value "Custom" is selected in the setting "Default log type" above, the first custom log type in this table will be automatically selected as default log type.
          items:
            type: object
            required:
            - logType
            properties:
              logType:
                type: string
                title: Log Type
                pattern: ^[A-Z0-9_]+$
                example: string
              description:
                type: string
                title: Description
                example: string
            example:
              logType: string
              description: string
          example:
          - logType: string
            description: string
        logType:
          type: string
          title: Default log type
          description: Default log type value to send to SecOps. Can be overwritten by event field __logType.
          example: string
        logTextField:
          type: string
          title: Log text field
          description: Name of the event field that contains the log text to send. If not specified, Stream sends a JSON representation of the whole event.
          example: string
        customerId:
          type: string
          title: Customer ID
          description: Unique identifier (UUID) corresponding to a particular SecOps instance. Provided by your SecOps representative.
          example: string
        namespace:
          type: string
          title: Namespace
          description: User-configured environment namespace to identify the data domain the logs originated from. Use namespace as a tag to identify the appropriate data domain for indexing and enrichment functionality. Can be overwritten by event field __namespace.
          example: string
        customLabels:
          type: array
          title: Custom labels
          description: "Custom labels to be added to every batch "
          items:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                title: Key
                example: string
              value:
                type: string
                title: Value
                example: string
            example:
              key: string
              value: string
          example:
          - key: string
            value: string
        apiKey:
          type: string
          title: API key
          description: Organization's API key in Google SecOps
          example: string
        apiKeySecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
          example: string
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
          example: string
        serviceAccountCredentialsSecret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: google_chronicle
        pipeline: string
        systemFields: *id171
        environment: string
        streamtags: *id172
        apiVersion: v1
        authenticationMethod: serviceAccount
        responseRetrySettings: *id173
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        logFormatType: unstructured
        region: string
        concurrency: 5
        maxPayloadSizeKB: 1024
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 90
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        failedRequestLoggingMode: none
        safeHeaders: *id174
        useRoundRobinDns: false
        onBackpressure: block
        totalMemoryLimitKB: 123.45
        description: string
        extraLogTypes:
        - logType: string
          description: string
        logType: string
        logTextField: string
        customerId: string
        namespace: string
        customLabels:
        - key: string
          value: string
        apiKey: string
        apiKeySecret: string
        serviceAccountCredentials: string
        serviceAccountCredentialsSecret: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputGoogleCloudStorage:
      required:
      - bucket
      - endpoint
      - region
      - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - google_cloud_storage
          example: google_cloud_storage
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id175
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id175
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id176 []
          items:
            type: string
            example: string
          example: *id176
        bucket:
          type: string
          title: Bucket name
          description: "Name of the destination bucket. This value can be a constant or a JavaScript expression that can only be evaluated at init time. Example of referencing a Global Variable: `myBucket-${C.vars.myVar}`."
          example: string
        region:
          type: string
          title: Region
          description: Region where the bucket is located
          example: string
        endpoint:
          type: string
          title: Endpoint
          default: https://storage.googleapis.com
          description: Google Cloud Storage service endpoint
          example: https://storage.googleapis.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Google Cloud Storage requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          default: manual
          enum:
          - auto
          - manual
          - secret
          example: manual
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: $CRIBL_HOME/state/outputs/staging
        destPath:
          type: string
          title: Key prefix
          description: "Prefix to append to files before uploading. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`"
          default: ""
          example: ""
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the bucket itself
          default: true
          example: true
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
          - private
          - bucket-owner-read
          - bucket-owner-full-control
          - project-private
          - authenticated-read
          - public-read
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
          - STANDARD
          - NEARLINE
          - COLDLINE
          - ARCHIVE
          example: STANDARD
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
          example: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
          - json
          - raw
          - parquet
          default: json
          example: json
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
          example: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 32
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
          example: 30
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 100
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
          example: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 64
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
          example: false
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
          - block
          - drop
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
          - none
          - gzip
          default: gzip
          example: gzip
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
          - best_speed
          - normal
          - best_compression
          default: best_speed
          example: best_speed
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
          example: false
        parquetVersion:
          type: string
          title: Parquet version
          enum:
          - PARQUET_1_0
          - PARQUET_2_4
          - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
          - DATA_PAGE_V1
          - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 10000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: ""
              value:
                type: string
                title: Value
                example: string
            example:
              key: ""
              value: string
          example:
          - key: ""
            value: string
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
          example: false
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
        awsApiKey:
          type: string
          title: Access key
          description: HMAC access key. This value can be a constant or a JavaScript expression, such as `${C.env.GCS_ACCESS_KEY}`.
          example: string
        awsSecretKey:
          type: string
          title: Secret
          description: HMAC secret. This value can be a constant or a JavaScript expression, such as `${C.env.GCS_SECRET}`.
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
      type: object
      example:
        id: string
        type: google_cloud_storage
        pipeline: string
        systemFields: *id175
        environment: string
        streamtags: *id176
        bucket: string
        region: string
        endpoint: https://storage.googleapis.com
        signatureVersion: v4
        awsAuthenticationMethod: manual
        stagePath: $CRIBL_HOME/state/outputs/staging
        destPath: ""
        verifyPermissions: true
        objectACL: private
        storageClass: STANDARD
        reuseConnections: true
        rejectUnauthorized: true
        addIdToStagePath: true
        removeEmptyDirs: true
        partitionExpr: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format: json
        baseFileName: "`CriblOut`"
        fileNameSuffix: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB: 32
        maxFileOpenTimeSec: 300
        maxFileIdleTimeSec: 30
        maxOpenFiles: 100
        headerLine: ""
        writeHighWaterMark: 64
        onBackpressure: block
        deadletterEnabled: false
        onDiskFullBackpressure: block
        description: string
        compress: gzip
        compressionLevel: best_speed
        automaticSchema: false
        parquetVersion: PARQUET_2_6
        parquetDataPageVersion: DATA_PAGE_V2
        parquetRowGroupLength: 10000
        parquetPageSize: 1MB
        shouldLogInvalidRows: true
        keyValueMetadata:
        - key: ""
          value: string
        enableStatistics: true
        enableWritePageIndex: true
        enablePageChecksum: false
        emptyDirCleanupSec: 300
        deadletterPath: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum: 20
        awsApiKey: string
        awsSecretKey: string
        awsSecret: string
    OutputGoogleCloudLogging:
      required:
      - logLocationType
      - logLocationExpression
      - logNameExpression
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - google_cloud_logging
          example: google_cloud_logging
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id177
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id177
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id178 []
          items:
            type: string
            example: string
          example: *id178
        logLocationType:
          type: string
          title: Log location type
          enum:
          - project
          - organization
          - billingAccount
          - folder
          example: project
        logNameExpression:
          type: string
          title: Log name expression
          description: JavaScript expression to compute the value of the log name.
          example: string
        payloadFormat:
          type: string
          title: Payload format
          description: Format to use when sending payload. Defaults to Text.
          enum:
          - text
          - json
          default: text
          example: text
        logLabels:
          type: array
          title: Log labels
          description: Labels to apply to the log entry
          items:
            type: object
            required:
            - label
            - valueExpression
            properties:
              label:
                type: string
                title: Label
                description: Label name
                example: string
              valueExpression:
                type: string
                title: Value
                description: JavaScript expression to compute the label's value.
                example: string
            example:
              label: string
              valueExpression: string
          example:
          - label: string
            valueExpression: string
        resourceTypeExpression:
          type: string
          title: Resource type expression
          description: JavaScript expression to compute the value of the managed resource type field. Must evaluate to one of the valid values [here](https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types). Defaults to "global".
          example: string
        resourceTypeLabels:
          type: array
          title: Resource labels
          description: Labels to apply to the managed resource. These must correspond to the valid labels for the specified resource type (see [here](https://cloud.google.com/logging/docs/api/v2/resource-list#resource-types)). Otherwise, they will be dropped by Google Cloud Logging.
          items:
            type: object
            required:
            - label
            - valueExpression
            properties:
              label:
                type: string
                title: Label
                description: Label name
                example: string
              valueExpression:
                type: string
                title: Value
                description: JavaScript expression to compute the label's value.
                example: string
            example:
              label: string
              valueExpression: string
          example:
          - label: string
            valueExpression: string
        severityExpression:
          type: string
          title: Severity expression
          description: JavaScript expression to compute the value of the severity field. Must evaluate to one of the severity values supported by Google Cloud Logging [here](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logseverity) (case insensitive). Defaults to "DEFAULT".
          example: string
        insertIdExpression:
          type: string
          title: Insert ID expression
          description: JavaScript expression to compute the value of the insert ID field.
          example: string
        googleAuthMethod:
          type: string
          title: Google authentication method
          description: Choose Auto to use Google Application Default Credentials (ADC), Manual to enter Google service account credentials directly, or Secret to select or create a stored secret that references Google service account credentials.
          default: manual
          enum:
          - auto
          - manual
          - secret
          example: manual
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
          example: string
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
          example: string
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body.
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Max number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
          example: 1
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking.
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
          example: 10000
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it.
          example: 30
        throttleRateReqPerSec:
          type: integer
          title: Throttle request rate
          description: Maximum number of requests to limit to per second.
          maximum: 2000
          example: 123
        requestMethodExpression:
          type: string
          title: Request method expression
          description: A JavaScript expression that evaluates to the HTTP request method as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        requestUrlExpression:
          type: string
          title: Request URL expression
          description: A JavaScript expression that evaluates to the HTTP request URL as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        requestSizeExpression:
          type: string
          title: Request size expression
          description: A JavaScript expression that evaluates to the HTTP request size as a string, in int64 format. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        statusExpression:
          type: string
          title: Request status expression
          description: A JavaScript expression that evaluates to the HTTP request method as a number. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        responseSizeExpression:
          type: string
          title: Response size expression
          description: A JavaScript expression that evaluates to the HTTP response size as a string, in int64 format. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        userAgentExpression:
          type: string
          title: Request user agent expression
          description: A JavaScript expression that evaluates to the HTTP request user agent as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        remoteIpExpression:
          type: string
          title: Remote IP expression
          description: A JavaScript expression that evaluates to the HTTP request remote IP as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        serverIpExpression:
          type: string
          title: Server IP expression
          description: A JavaScript expression that evaluates to the HTTP request server IP as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        refererExpression:
          type: string
          title: Referer expression
          description: A JavaScript expression that evaluates to the HTTP request referer as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        latencyExpression:
          type: string
          title: Latency expression
          description: A JavaScript expression that evaluates to the HTTP request latency, formatted as <seconds>.<nanoseconds>s (for example, 1.23s). See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        cacheLookupExpression:
          type: string
          title: Cache lookup expression
          description: A JavaScript expression that evaluates to the HTTP request cache lookup as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        cacheHitExpression:
          type: string
          title: Cache hit expression
          description: A JavaScript expression that evaluates to the HTTP request cache hit as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        cacheValidatedExpression:
          type: string
          title: Cache validated with origin server expression
          description: A JavaScript expression that evaluates to the HTTP request cache validated with origin server as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        cacheFillBytesExpression:
          type: string
          title: Cache fill bytes expression
          description: A JavaScript expression that evaluates to the HTTP request cache fill bytes as a string, in int64 format. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        protocolExpression:
          type: string
          title: Protocol expression
          description: A JavaScript expression that evaluates to the HTTP request protocol as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest) for details.
          example: string
        idExpression:
          type: string
          title: ID expression
          description: A JavaScript expression that evaluates to the log entry operation ID as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation) for details.
          example: string
        producerExpression:
          type: string
          title: Producer expression
          description: A JavaScript expression that evaluates to the log entry operation producer as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation) for details.
          example: string
        firstExpression:
          type: string
          title: First expression
          description: A JavaScript expression that evaluates to the log entry operation first flag as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation) for details.
          example: string
        lastExpression:
          type: string
          title: Last expression
          description: A JavaScript expression that evaluates to the log entry operation last flag as a boolean. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentryoperation) for details.
          example: string
        fileExpression:
          type: string
          title: File expression
          description: A JavaScript expression that evaluates to the log entry source location file as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentrysourcelocation) for details.
          example: string
        lineExpression:
          type: string
          title: Line expression
          description: A JavaScript expression that evaluates to the log entry source location line as a string, in int64 format. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentrysourcelocation) for details.
          example: string
        functionExpression:
          type: string
          title: Function expression
          description: A JavaScript expression that evaluates to the log entry source location function as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logentrysourcelocation) for details.
          example: string
        uidExpression:
          type: string
          title: UID expression
          description: A JavaScript expression that evaluates to the log entry log split UID as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logsplit) for details.
          example: string
        indexExpression:
          type: string
          title: Index expression
          description: A JavaScript expression that evaluates to the log entry log split index as a number. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logsplit) for details.
          example: string
        totalSplitsExpression:
          type: string
          title: Total splits expression
          description: A JavaScript expression that evaluates to the log entry log split total splits as a number. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logsplit) for details.
          example: string
        traceExpression:
          type: string
          title: Trace expression
          description: A JavaScript expression that evaluates to the REST resource name of the trace being written as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry) for details.
          example: string
        spanIdExpression:
          type: string
          title: Span ID expression
          description: A JavaScript expression that evaluates to the ID of the cloud trace span associated with the current operation in which the log is being written as a string. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry) for details.
          example: string
        traceSampledExpression:
          type: string
          title: Trace sampled expression
          description: A JavaScript expression that evaluates to the the sampling decision of the span associated with the log entry. See the [documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry) for details.
          example: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
          example: 123.45
        description:
          type: string
          title: Description
          example: string
        logLocationExpression:
          title: Folder ID expression
          description: JavaScript expression to compute the value of the folder ID with which log entries should be associated.
          type: string
          example: string
        payloadExpression:
          title: Payload object expression
          description: JavaScript expression to compute the value of the payload. Must evaluate to a JavaScript object value. If an invalid value is encountered it will result in the default value instead. Defaults to the entire event.
          type: string
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: google_cloud_logging
        pipeline: string
        systemFields: *id177
        environment: string
        streamtags: *id178
        logLocationType: project
        logNameExpression: string
        payloadFormat: text
        logLabels:
        - label: string
          valueExpression: string
        resourceTypeExpression: string
        resourceTypeLabels:
        - label: string
          valueExpression: string
        severityExpression: string
        insertIdExpression: string
        googleAuthMethod: manual
        serviceAccountCredentials: string
        secret: string
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        flushPeriodSec: 1
        concurrency: 5
        connectionTimeout: 10000
        timeoutSec: 30
        throttleRateReqPerSec: 123
        requestMethodExpression: string
        requestUrlExpression: string
        requestSizeExpression: string
        statusExpression: string
        responseSizeExpression: string
        userAgentExpression: string
        remoteIpExpression: string
        serverIpExpression: string
        refererExpression: string
        latencyExpression: string
        cacheLookupExpression: string
        cacheHitExpression: string
        cacheValidatedExpression: string
        cacheFillBytesExpression: string
        protocolExpression: string
        idExpression: string
        producerExpression: string
        firstExpression: string
        lastExpression: string
        fileExpression: string
        lineExpression: string
        functionExpression: string
        uidExpression: string
        indexExpression: string
        totalSplitsExpression: string
        traceExpression: string
        spanIdExpression: string
        traceSampledExpression: string
        onBackpressure: block
        totalMemoryLimitKB: 123.45
        description: string
        logLocationExpression: string
        payloadExpression: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputGooglePubsub:
      required:
      - topicName
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - google_pubsub
          example: google_pubsub
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id179
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id179
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id180 []
          items:
            type: string
            example: string
          example: *id180
        topicName:
          type: string
          title: Topic ID
          description: ID of the topic to send events to.
          example: string
        createTopic:
          type: boolean
          title: Create topic
          description: If enabled, create topic if it does not exist.
          default: false
          example: false
        orderedDelivery:
          type: boolean
          title: Ordered delivery
          description: If enabled, send events in the order they were added to the queue. For this to work correctly, the process receiving events must have ordering enabled.
          default: false
          example: false
        region:
          type: string
          title: Region
          description: Region to publish messages to. Select 'default' to allow Google to auto-select the nearest region. When using ordered delivery, the selected region must be allowed by message storage policy.
          example: string
        googleAuthMethod:
          type: string
          title: Google authentication method
          description: Choose Auto to use Google Application Default Credentials (ADC), Manual to enter Google service account credentials directly, or Secret to select or create a stored secret that references Google service account credentials.
          default: manual
          enum:
          - auto
          - manual
          - secret
          example: manual
        serviceAccountCredentials:
          type: string
          title: Service account credentials
          description: Contents of service account credentials (JSON keys) file downloaded from Google Cloud. To upload a file, click the upload button at this field's upper right.
          example: string
        secret:
          type: string
          title: Service account credentials (text secret)
          description: Select or create a stored text secret
          example: string
        batchSize:
          type: number
          title: Batch size
          minimum: 1
          maximum: 10000
          default: 1000
          description: The maximum number of items the Google API should batch before it sends them to the topic.
          example: 1000
        batchTimeout:
          type: number
          title: Batch timeout (ms)
          minimum: 1
          maximum: 100000
          default: 100
          description: The maximum amount of time, in milliseconds, that the Google API should wait to send a batch (if the Batch size is not reached).
          example: 100
        maxQueueSize:
          type: number
          title: Queue size limit
          description: Maximum number of queued batches before blocking.
          default: 100
          minimum: 1
          example: 100
        maxRecordSizeKB:
          type: number
          title: Batch size limit (KB)
          description: Maximum size (KB) of batches to send.
          default: 256
          minimum: 1
          maximum: 256
          example: 256
        flushPeriodSec:
          title: Flush period (sec)
          description: Maximum time to wait before sending a batch (when batch size limit is not reached).
          default: &id181
            type: number
            default: 1
          example: *id181
        maxInProgress:
          type: number
          title: Concurrent request limit
          description: The maximum number of in-progress API requests before backpressure is applied.
          default: 10
          minimum: 1
          maximum: 100
          example: 10
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: google_pubsub
        pipeline: string
        systemFields: *id179
        environment: string
        streamtags: *id180
        topicName: string
        createTopic: false
        orderedDelivery: false
        region: string
        googleAuthMethod: manual
        serviceAccountCredentials: string
        secret: string
        batchSize: 1000
        batchTimeout: 100
        maxQueueSize: 100
        maxRecordSizeKB: 256
        flushPeriodSec: *id181
        maxInProgress: 10
        onBackpressure: block
        description: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputExabeam:
      required:
      - bucket
      - region
      - endpoint
      - stagePath
      - collectorInstanceId
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - exabeam
          example: exabeam
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id182
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id182
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id183 []
          items:
            type: string
            example: string
          example: *id183
        bucket:
          type: string
          title: Bucket name
          description: "Name of the destination bucket. A constant or a JavaScript expression that can only be evaluated at init time. Example of referencing a JavaScript Global Variable: `myBucket-${C.vars.myVar}`."
          example: string
        region:
          type: string
          title: Region
          description: Region where the bucket is located
          example: string
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: $CRIBL_HOME/state/outputs/staging
        endpoint:
          type: string
          title: Endpoint
          default: https://storage.googleapis.com
          description: Google Cloud Storage service endpoint
          example: https://storage.googleapis.com
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Google Cloud Storage requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
          - private
          - bucket-owner-read
          - bucket-owner-full-control
          - project-private
          - authenticated-read
          - public-read
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
          - STANDARD
          - NEARLINE
          - COLDLINE
          - ARCHIVE
          example: STANDARD
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 1800
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 1800
          example: 30
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 100
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
          example: false
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
          - block
          - drop
          default: block
          example: block
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 10
          maximum: 1024
          minimum: 5
          example: 10
        encodedConfiguration:
          type: string
          title: Exabeam connection string
          description: Enter an encoded string containing Exabeam configurations
          example: string
        collectorInstanceId:
          type: string
          title: Collector instance ID
          description: >
            ID of the Exabeam Collector where data should be sent. Example:
            11112222-3333-4444-5555-666677778888
          example: string
        siteName:
          type: string
          title: Site name
          description: Constant or JavaScript expression to create an Exabeam site name. Values that aren't successfully evaluated will be treated as string constants.
          example: string
        siteId:
          type: string
          title: Site ID
          description: Exabeam site ID. If left blank, @{product} will use the value of the Exabeam site name.
          example: string
        timezoneOffset:
          type: string
          title: Timezone offset
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: HMAC access key. Can be a constant or a JavaScript expression, such as `${C.env.GCS_ACCESS_KEY}`.
          example: string
        awsSecretKey:
          type: string
          title: Secret
          description: HMAC secret. Can be a constant or a JavaScript expression, such as `${C.env.GCS_SECRET}`.
          example: string
        description:
          type: string
          title: Description
          example: string
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
      type: object
      example:
        id: string
        type: exabeam
        pipeline: string
        systemFields: *id182
        environment: string
        streamtags: *id183
        bucket: string
        region: string
        stagePath: $CRIBL_HOME/state/outputs/staging
        endpoint: https://storage.googleapis.com
        signatureVersion: v4
        objectACL: private
        storageClass: STANDARD
        reuseConnections: true
        rejectUnauthorized: true
        addIdToStagePath: true
        removeEmptyDirs: true
        maxFileOpenTimeSec: 300
        maxFileIdleTimeSec: 30
        maxOpenFiles: 100
        onBackpressure: block
        deadletterEnabled: false
        onDiskFullBackpressure: block
        maxFileSizeMB: 10
        encodedConfiguration: string
        collectorInstanceId: string
        siteName: string
        siteId: string
        timezoneOffset: string
        awsApiKey: string
        awsSecretKey: string
        description: string
        emptyDirCleanupSec: 300
        deadletterPath: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum: 20
    OutputKafka:
      required:
      - brokers
      - topic
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - kafka
          example: kafka
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id184
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id184
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id185 []
          items:
            type: string
            example: string
          example: *id185
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify hostname and port, e.g., mykafkabroker:9092, or just hostname, in which case @{product} will assign port 9092.
          minItems: 1
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        topic:
          type: string
          title: Topic
          description: The topic to publish events to. Can be overridden using the __topicOut field.
          example: string
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments.
          enum:
          - 1
          - 0
          - -1
          example: 1
        format:
          type: string
          default: json
          enum:
          - json
          - raw
          - protobuf
          title: Record data format
          description: Format to use to serialize events before writing to Kafka.
          example: json
        compression:
          type: string
          default: gzip
          enum:
          - none
          - gzip
          - snappy
          - lz4
          title: Compression
          description: Codec to use to compress the data before sending to Kafka
          example: gzip
        maxRecordSizeKB:
          type: number
          default: 768
          minimum: 1
          title: Record size limit (KB, uncompressed)
          description: Maximum size of each record batch before compression. The value must not exceed the Kafka brokers' message.max.bytes setting.
          example: 768
        flushEventCount:
          type: number
          default: 1000
          minimum: 1
          maximum: 10000
          title: Events-per-batch limit
          description: The maximum number of events you want the Destination to allow in a batch before forcing a flush
          example: 1000
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: The maximum amount of time you want the Destination to wait before forcing a flush. Shorter intervals tend to result in smaller batches being sent.
          example: 1
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
              example: http://localhost:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
              example: 1
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
              - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
                  example: string
              example:
                disabled: true
                credentialsSecret: string
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: >-
                    Reject certificates that are not authorized by a CA in the
                    CA certificate path, or by another 
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                  example: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                  example: string
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                  example: string
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                  example: string
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                  example: string
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                  example: string
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                  example: string
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
                  - TLSv1.3
                  example: TLSv1
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
                  - TLSv1.3
                  example: TLSv1
              example:
                disabled: true
                rejectUnauthorized: true
                servername: string
                certificateName: string
                caPath: string
                privKeyPath: string
                certPath: string
                passphrase: string
                minVersion: TLSv1
                maxVersion: TLSv1
            defaultKeySchemaId:
              type: number
              title: Default key schema ID
              description: Used when __keySchemaIdOut is not present, to transform key values, leave blank if key transformation is not required by default.
              example: 123.45
            defaultValueSchemaId:
              type: number
              title: Default value schema ID
              description: Used when __valueSchemaIdOut is not present, to transform _raw, leave blank if value transformation is not required by default.
              example: 123.45
          example:
            disabled: true
            schemaRegistryURL: http://localhost:8081
            connectionTimeout: 30000
            requestTimeout: 30000
            maxRetries: 1
            auth:
              disabled: true
              credentialsSecret: string
            tls:
              disabled: true
              rejectUnauthorized: true
              servername: string
              certificateName: string
              caPath: string
              privKeyPath: string
              certPath: string
              passphrase: string
              minVersion: TLSv1
              maxVersion: TLSv1
            defaultKeySchemaId: 123.45
            defaultValueSchemaId: 123.45
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 5
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 30000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 300
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
          example: 2
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 10000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            mechanism:
              type: string
              default: plain
              enum:
              - plain
              - scram-sha-256
              - scram-sha-512
              - kerberos
              title: SASL mechanism
              example: plain
          example:
            disabled: true
            mechanism: plain
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        protobufLibraryId:
          type: string
          title: Definition set
          description: Select a set of Protobuf definitions for the events you want to send
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: kafka
        pipeline: string
        systemFields: *id184
        environment: string
        streamtags: *id185
        brokers:
        - string
        topic: string
        ack: 1
        format: json
        compression: gzip
        maxRecordSizeKB: 768
        flushEventCount: 1000
        flushPeriodSec: 1
        kafkaSchemaRegistry:
          disabled: true
          schemaRegistryURL: http://localhost:8081
          connectionTimeout: 30000
          requestTimeout: 30000
          maxRetries: 1
          auth:
            disabled: true
            credentialsSecret: string
          tls:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
          defaultKeySchemaId: 123.45
          defaultValueSchemaId: 123.45
        connectionTimeout: 10000
        requestTimeout: 60000
        maxRetries: 5
        maxBackOff: 30000
        initialBackoff: 300
        backoffRate: 2
        authenticationTimeout: 10000
        reauthenticationThreshold: 10000
        sasl:
          disabled: true
          mechanism: plain
        tls:
          disabled: true
          rejectUnauthorized: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        onBackpressure: block
        description: string
        protobufLibraryId: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputConfluentCloud:
      required:
      - brokers
      - topic
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - confluent_cloud
          example: confluent_cloud
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id186
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id186
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id187 []
          items:
            type: string
            example: string
          example: *id187
        brokers:
          type: array
          title: Bootstrap servers
          description: List of Confluent Cloud bootstrap servers to use, such as yourAccount.confluent.cloud:9092.
          minItems: 1
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: false
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        topic:
          type: string
          title: Topic
          description: The topic to publish events to. Can be overridden using the __topicOut field.
          example: string
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments.
          enum:
          - 1
          - 0
          - -1
          example: 1
        format:
          type: string
          default: json
          enum:
          - json
          - raw
          - protobuf
          title: Record data format
          description: Format to use to serialize events before writing to Kafka.
          example: json
        compression:
          type: string
          default: gzip
          enum:
          - none
          - gzip
          - snappy
          - lz4
          title: Compression
          description: Codec to use to compress the data before sending to Kafka
          example: gzip
        maxRecordSizeKB:
          type: number
          default: 768
          minimum: 1
          title: Record size limit (KB, uncompressed)
          description: Maximum size of each record batch before compression. The value must not exceed the Kafka brokers' message.max.bytes setting.
          example: 768
        flushEventCount:
          type: number
          default: 1000
          minimum: 1
          maximum: 10000
          title: Events-per-batch limit
          description: The maximum number of events you want the Destination to allow in a batch before forcing a flush
          example: 1000
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: The maximum amount of time you want the Destination to wait before forcing a flush. Shorter intervals tend to result in smaller batches being sent.
          example: 1
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
              example: http://localhost:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
              example: 1
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
              - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
                  example: string
              example:
                disabled: true
                credentialsSecret: string
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: >-
                    Reject certificates that are not authorized by a CA in the
                    CA certificate path, or by another 
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                  example: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                  example: string
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                  example: string
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                  example: string
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                  example: string
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                  example: string
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                  example: string
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
                  - TLSv1.3
                  example: TLSv1
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
                  - TLSv1.3
                  example: TLSv1
              example:
                disabled: true
                rejectUnauthorized: true
                servername: string
                certificateName: string
                caPath: string
                privKeyPath: string
                certPath: string
                passphrase: string
                minVersion: TLSv1
                maxVersion: TLSv1
            defaultKeySchemaId:
              type: number
              title: Default key schema ID
              description: Used when __keySchemaIdOut is not present, to transform key values, leave blank if key transformation is not required by default.
              example: 123.45
            defaultValueSchemaId:
              type: number
              title: Default value schema ID
              description: Used when __valueSchemaIdOut is not present, to transform _raw, leave blank if value transformation is not required by default.
              example: 123.45
          example:
            disabled: true
            schemaRegistryURL: http://localhost:8081
            connectionTimeout: 30000
            requestTimeout: 30000
            maxRetries: 1
            auth:
              disabled: true
              credentialsSecret: string
            tls:
              disabled: true
              rejectUnauthorized: true
              servername: string
              certificateName: string
              caPath: string
              privKeyPath: string
              certPath: string
              passphrase: string
              minVersion: TLSv1
              maxVersion: TLSv1
            defaultKeySchemaId: 123.45
            defaultValueSchemaId: 123.45
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 5
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 30000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 300
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
          example: 2
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 10000
        sasl:
          type: object
          title: Authentication
          description: Authentication parameters to use when connecting to brokers. Using TLS is highly recommended.
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            mechanism:
              type: string
              default: plain
              enum:
              - plain
              - scram-sha-256
              - scram-sha-512
              - kerberos
              title: SASL mechanism
              example: plain
          example:
            disabled: true
            mechanism: plain
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        protobufLibraryId:
          type: string
          title: Definition set
          description: Select a set of Protobuf definitions for the events you want to send
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: confluent_cloud
        pipeline: string
        systemFields: *id186
        environment: string
        streamtags: *id187
        brokers:
        - string
        tls:
          disabled: false
          rejectUnauthorized: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        topic: string
        ack: 1
        format: json
        compression: gzip
        maxRecordSizeKB: 768
        flushEventCount: 1000
        flushPeriodSec: 1
        kafkaSchemaRegistry:
          disabled: true
          schemaRegistryURL: http://localhost:8081
          connectionTimeout: 30000
          requestTimeout: 30000
          maxRetries: 1
          auth:
            disabled: true
            credentialsSecret: string
          tls:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
          defaultKeySchemaId: 123.45
          defaultValueSchemaId: 123.45
        connectionTimeout: 10000
        requestTimeout: 60000
        maxRetries: 5
        maxBackOff: 30000
        initialBackoff: 300
        backoffRate: 2
        authenticationTimeout: 10000
        reauthenticationThreshold: 10000
        sasl:
          disabled: true
          mechanism: plain
        onBackpressure: block
        description: string
        protobufLibraryId: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputMsk:
      required:
      - brokers
      - topic
      - region
      - awsAuthenticationMethod
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - msk
          example: msk
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id188
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id188
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id189 []
          items:
            type: string
            example: string
          example: *id189
        brokers:
          type: array
          title: Bootstrap servers
          description: Enter each Kafka bootstrap server you want to use. Specify hostname and port, e.g., mykafkabroker:9092, or just hostname, in which case @{product} will assign port 9092.
          minItems: 1
          items:
            type: string
            minLength: 1
            example: string
          example:
          - string
        topic:
          type: string
          title: Topic
          description: The topic to publish events to. Can be overridden using the __topicOut field.
          example: string
        ack:
          type: integer
          default: 1
          title: Acknowledgments
          description: Control the number of required acknowledgments.
          enum:
          - 1
          - 0
          - -1
          example: 1
        format:
          type: string
          default: json
          enum:
          - json
          - raw
          - protobuf
          title: Record data format
          description: Format to use to serialize events before writing to Kafka.
          example: json
        compression:
          type: string
          default: gzip
          enum:
          - none
          - gzip
          - snappy
          - lz4
          title: Compression
          description: Codec to use to compress the data before sending to Kafka
          example: gzip
        maxRecordSizeKB:
          type: number
          default: 768
          minimum: 1
          title: Record size limit (KB, uncompressed)
          description: Maximum size of each record batch before compression. The value must not exceed the Kafka brokers' message.max.bytes setting.
          example: 768
        flushEventCount:
          type: number
          default: 1000
          minimum: 1
          maximum: 10000
          title: Events-per-batch limit
          description: The maximum number of events you want the Destination to allow in a batch before forcing a flush
          example: 1000
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: The maximum amount of time you want the Destination to wait before forcing a flush. Shorter intervals tend to result in smaller batches being sent.
          example: 1
        kafkaSchemaRegistry:
          type: object
          title: Kafka Schema Registry Authentication
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            schemaRegistryURL:
              type: string
              title: Schema Registry URL
              description: "URL for accessing the Confluent Schema Registry. Example: http://localhost:8081. To connect over TLS, use https instead of http."
              default: http://localhost:8081
              example: http://localhost:8081
            connectionTimeout:
              type: number
              title: Connection timeout (ms)
              description: Maximum time to wait for a Schema Registry connection to complete successfully
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            requestTimeout:
              type: number
              title: Request timeout (ms)
              description: Maximum time to wait for the Schema Registry to respond to a request
              default: 30000
              minimum: 1000
              maximum: 60000
              example: 30000
            maxRetries:
              type: number
              title: Retry limit
              description: Maximum number of times to try fetching schemas from the Schema Registry
              default: 1
              minimum: 0
              maximum: 100
              example: 1
            auth:
              type: object
              description: Credentials to use when authenticating with the schema registry using basic HTTP authentication
              required:
              - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                credentialsSecret:
                  type: string
                  title: Credentials secret
                  description: Select or create a secret that references your credentials
                  example: string
              example:
                disabled: true
                credentialsSecret: string
            tls:
              type: object
              title: TLS settings (client side)
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                rejectUnauthorized:
                  type: boolean
                  title: Validate server certs
                  description: >-
                    Reject certificates that are not authorized by a CA in the
                    CA certificate path, or by another 
                                        trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
                  default: true
                  example: true
                servername:
                  type: string
                  title: Server name (SNI)
                  description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
                  example: string
                certificateName:
                  type: string
                  title: Certificate
                  description: The name of the predefined certificate
                  example: string
                caPath:
                  type: string
                  title: CA certificate path
                  description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
                  example: string
                privKeyPath:
                  type: string
                  title: Private key path (mutual auth)
                  description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
                  example: string
                certPath:
                  type: string
                  title: Certificate path (mutual auth)
                  description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
                  example: string
                passphrase:
                  type: string
                  title: Passphrase
                  description: Passphrase to use to decrypt private key
                  example: string
                minVersion:
                  type: string
                  title: Minimum TLS version
                  enum:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
                  - TLSv1.3
                  example: TLSv1
                maxVersion:
                  type: string
                  title: Maximum TLS version
                  enum:
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
                  - TLSv1.3
                  example: TLSv1
              example:
                disabled: true
                rejectUnauthorized: true
                servername: string
                certificateName: string
                caPath: string
                privKeyPath: string
                certPath: string
                passphrase: string
                minVersion: TLSv1
                maxVersion: TLSv1
            defaultKeySchemaId:
              type: number
              title: Default key schema ID
              description: Used when __keySchemaIdOut is not present, to transform key values, leave blank if key transformation is not required by default.
              example: 123.45
            defaultValueSchemaId:
              type: number
              title: Default value schema ID
              description: Used when __valueSchemaIdOut is not present, to transform _raw, leave blank if value transformation is not required by default.
              example: 123.45
          example:
            disabled: true
            schemaRegistryURL: http://localhost:8081
            connectionTimeout: 30000
            requestTimeout: 30000
            maxRetries: 1
            auth:
              disabled: true
              credentialsSecret: string
            tls:
              disabled: true
              rejectUnauthorized: true
              servername: string
              certificateName: string
              caPath: string
              privKeyPath: string
              certPath: string
              passphrase: string
              minVersion: TLSv1
              maxVersion: TLSv1
            defaultKeySchemaId: 123.45
            defaultValueSchemaId: 123.45
        connectionTimeout:
          type: number
          title: Connection timeout (ms)
          description: Maximum time to wait for a connection to complete successfully
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        requestTimeout:
          type: number
          title: Request timeout (ms)
          description: Maximum time to wait for Kafka to respond to a request
          default: 60000
          minimum: 1000
          maximum: 3600000
          example: 60000
        maxRetries:
          type: number
          title: Retry limit
          description: If messages are failing, you can set the maximum number of retries as high as 100 to prevent loss of data
          default: 5
          minimum: 0
          maximum: 100
          example: 5
        maxBackOff:
          type: number
          title: Backoff limit (ms)
          description: The maximum wait time for a retry, in milliseconds. Default (and minimum) is 30,000 ms (30 seconds); maximum is 180,000 ms (180 seconds).
          default: 30000
          minimum: 30000
          maximum: 180000
          example: 30000
        initialBackoff:
          type: number
          title: Initial retry interval (ms)
          description: Initial value used to calculate the retry, in milliseconds. Maximum is 600,000 ms (10 minutes).
          default: 300
          minimum: 300
          maximum: 600000
          example: 300
        backoffRate:
          type: number
          title: Backoff multiplier
          description: Set the backoff multiplier (2-20) to control the retry frequency for failed messages. For faster retries, use a lower multiplier. For slower retries with more delay between attempts, use a higher multiplier. The multiplier is used in an exponential backoff formula; see the Kafka [documentation](https://kafka.js.org/docs/retry-detailed) for details.
          default: 2
          minimum: 2
          maximum: 20
          example: 2
        authenticationTimeout:
          type: number
          title: Authentication timeout (ms)
          description: Maximum time to wait for Kafka to respond to an authentication request
          default: 10000
          minimum: 1000
          maximum: 3600000
          example: 10000
        reauthenticationThreshold:
          type: number
          title: Reauthentication threshold (ms)
          description: Specifies a time window during which @{product} can reauthenticate if needed. Creates the window measuring backward from the moment when credentials are set to expire.
          default: 10000
          minimum: 1000
          maximum: 1800000
          example: 10000
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: Region where the MSK cluster is located
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: MSK cluster service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to MSK cluster-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MSK cluster requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for MSK
          description: Use Assume Role credentials to access MSK
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: false
              example: false
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: false
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        protobufLibraryId:
          type: string
          title: Definition set
          description: Select a set of Protobuf definitions for the events you want to send
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: msk
        pipeline: string
        systemFields: *id188
        environment: string
        streamtags: *id189
        brokers:
        - string
        topic: string
        ack: 1
        format: json
        compression: gzip
        maxRecordSizeKB: 768
        flushEventCount: 1000
        flushPeriodSec: 1
        kafkaSchemaRegistry:
          disabled: true
          schemaRegistryURL: http://localhost:8081
          connectionTimeout: 30000
          requestTimeout: 30000
          maxRetries: 1
          auth:
            disabled: true
            credentialsSecret: string
          tls:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
          defaultKeySchemaId: 123.45
          defaultValueSchemaId: 123.45
        connectionTimeout: 10000
        requestTimeout: 60000
        maxRetries: 5
        maxBackOff: 30000
        initialBackoff: 300
        backoffRate: 2
        authenticationTimeout: 10000
        reauthenticationThreshold: 10000
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        tls:
          disabled: false
          rejectUnauthorized: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        onBackpressure: block
        description: string
        awsApiKey: string
        awsSecret: string
        protobufLibraryId: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputElastic:
      required:
      - index
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - elastic
          example: elastic
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id190
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id190
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id191 []
          items:
            type: string
            example: string
          example: *id191
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Enable for optimal performance. Even if you have one hostname, it can expand to multiple IPs. If disabled, consider enabling round-robin DNS.
          default: true
          example: true
        index:
          type: string
          title: Index or data stream
          description: Index or data stream to send events to. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be overwritten by an event's __index field.
          example: string
        docType:
          type: string
          title: Type
          description: Document type to use for events. Can be overwritten by an event's __type field.
          example: string
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 102400
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id192 []
          items:
            type: string
            example: string
          example: *id192
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id193 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id193
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        extraParams:
          type: array
          title: Extra parameters
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          default: &id194
          - name: filter_path
            value: errors,items.*.error,items.*._index,items.*.status
          example: *id194
        auth:
          type: object
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Authentication Disabled
              default: true
              example: true
            authType:
              title: Authentication method
              type: string
              enum:
              - manual
              - secret
              - manualAPIKey
              - textSecret
              default: manual
              description: Enter credentials directly, or select a stored secret
              example: manual
          example:
            disabled: true
            authType: manual
        elasticVersion:
          type: string
          title: Elastic version
          description: Optional Elasticsearch version, used to format events. If not specified, will auto-discover version.
          enum:
          - auto
          - "6"
          - "7"
          default: auto
          example: auto
        elasticPipeline:
          type: string
          title: Elastic pipeline
          description: Optional Elasticsearch destination pipeline
          example: string
        includeDocId:
          type: boolean
          title: Include document _id
          description: Include the `document_id` field when sending events to an Elastic TSDS (time series data stream)
          default: false
          example: false
        writeAction:
          type: string
          title: Write action
          description: Action to use when writing events. Must be set to `Create` when writing to a data stream.
          enum:
          - index
          - create
          default: create
          example: create
        retryPartialErrors:
          type: boolean
          default: false
          title: Retry partial errors
          description: Retry failed events when a bulk request to Elastic is successful, but the response body returns an error for one or more events in the batch
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        url:
          type: string
          title: Bulk API URL or Cloud ID
          description: "The Cloud ID or URL to an Elastic cluster to send events to. Example: http://elastic:9200/_bulk"
          example: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
          example: false
        urls:
          type: array
          title: Bulk API URLs
          description: ""
          minItems: 1
          items:
            type: object
            required:
            - url
            properties:
              url:
                type: string
                title: URL
                description: "The URL to an Elastic node to send events to. Example: http://elastic:9200/_bulk"
                example: string
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
                example: 1
            example:
              url: string
              weight: 1
          example:
          - url: string
            weight: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
          example: 600
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
          example: 300
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: elastic
        pipeline: string
        systemFields: *id190
        environment: string
        streamtags: *id191
        loadBalanced: true
        index: string
        docType: string
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        failedRequestLoggingMode: none
        safeHeaders: *id192
        responseRetrySettings: *id193
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        extraParams: *id194
        auth:
          disabled: true
          authType: manual
        elasticVersion: auto
        elasticPipeline: string
        includeDocId: false
        writeAction: create
        retryPartialErrors: false
        onBackpressure: block
        description: string
        url: string
        useRoundRobinDns: false
        excludeSelf: false
        urls:
        - url: string
          weight: 1
        dnsResolvePeriodSec: 600
        loadBalanceStatsPeriodSec: 300
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputElasticCloud:
      required:
      - url
      - index
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - elastic_cloud
          example: elastic_cloud
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id195
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id195
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id196 []
          items:
            type: string
            example: string
          example: *id196
        url:
          type: string
          title: Cloud ID
          description: Enter Cloud ID of the Elastic Cloud environment to send events to
          example: string
        index:
          type: string
          title: Data stream or index
          description: Data stream or index to send events to. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be overwritten by an event's __index field.
          example: string
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 102400
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id197 []
          items:
            type: string
            example: string
          example: *id197
        extraParams:
          type: array
          title: Extra parameters
          description: Extra parameters to use in HTTP requests
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          default: &id198
          - name: filter_path
            value: errors,items.*.error,items.*._index,items.*.status
          example: *id198
        auth:
          type: object
          required:
          - disabled
          properties:
            disabled:
              type: boolean
              title: Authentication Disabled
              default: false
              example: false
            authType:
              title: Authentication method
              type: string
              enum:
              - manual
              - secret
              - manualAPIKey
              - textSecret
              default: manual
              description: Enter credentials directly, or select a stored secret
              example: manual
          example:
            disabled: false
            authType: manual
        elasticPipeline:
          type: string
          title: Elastic pipeline
          description: Optional Elastic Cloud Destination pipeline
          example: string
        includeDocId:
          type: boolean
          title: Include document _id
          description: Include the `document_id` field when sending events to an Elastic TSDS (time series data stream)
          default: true
          example: true
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id199 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id199
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: elastic_cloud
        pipeline: string
        systemFields: *id195
        environment: string
        streamtags: *id196
        url: string
        index: string
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        failedRequestLoggingMode: none
        safeHeaders: *id197
        extraParams: *id198
        auth:
          disabled: false
          authType: manual
        elasticPipeline: string
        includeDocId: true
        responseRetrySettings: *id199
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        description: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputNewrelic:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - newrelic
          example: newrelic
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id200
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id200
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id201 []
          items:
            type: string
            example: string
          example: *id201
        region:
          type: string
          title: Region
          description: Which New Relic region endpoint to use.
          enum:
          - US
          - EU
          - Custom
          default: US
          example: US
        logType:
          type: string
          title: Log type
          description: "Name of the logtype to send with events, e.g.: observability, access_log. The event's 'sourcetype' field (if set) will override this value."
          default: ""
          example: ""
        messageField:
          type: string
          title: Log message field
          description: Name of field to send as log message value. If not present, event will be serialized and sent as JSON.
          default: ""
          example: ""
        metadata:
          type: array
          title: Fields
          description: Fields to add to events from this input
          maxItems: 4
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Field Name
                enum:
                - service
                - hostname
                - timestamp
                - auditId
                example: service
              value:
                type: string
                title: Value
                description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                example: string
            example:
              name: service
              value: string
          example:
          - name: service
            value: string
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 1024
          example: 1024
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id202 []
          items:
            type: string
            example: string
          example: *id202
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id203 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id203
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          example: manual
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
          example: 123.45
        description:
          type: string
          title: Description
          example: string
        customUrl:
          type: string
          pattern: ^https?://.*
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        apiKey:
          type: string
          title: API key
          description: New Relic API key. Can be overridden using __newRelic_apiKey field.
          example: string
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: newrelic
        pipeline: string
        systemFields: *id200
        environment: string
        streamtags: *id201
        region: US
        logType: ""
        messageField: ""
        metadata:
        - name: service
          value: string
        concurrency: 5
        maxPayloadSizeKB: 1024
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id202
        responseRetrySettings: *id203
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        authType: manual
        totalMemoryLimitKB: 123.45
        description: string
        customUrl: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        apiKey: string
        textSecret: string
    OutputNewrelicEvents:
      required:
      - accountId
      - eventType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - newrelic_events
          example: newrelic_events
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id204
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id204
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id205 []
          items:
            type: string
            example: string
          example: *id205
        region:
          type: string
          title: Region
          description: Which New Relic region endpoint to use.
          enum:
          - US
          - EU
          - Custom
          default: US
          example: US
        accountId:
          type: string
          title: Account ID
          description: New Relic account ID
          example: string
        eventType:
          type: string
          title: Event type
          description: Default eventType to use when not present in an event. For more information, see [here](https://docs.newrelic.com/docs/telemetry-data-platform/custom-data/custom-events/data-requirements-limits-custom-event-data/#reserved-words).
          example: string
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 1024
          example: 1024
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id206 []
          items:
            type: string
            example: string
          example: *id206
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id207 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id207
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          example: manual
        description:
          type: string
          title: Description
          example: string
        customUrl:
          type: string
          pattern: ^https?://.*
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        apiKey:
          type: string
          title: API key
          description: New Relic API key. Can be overridden using __newRelic_apiKey field.
          example: string
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: newrelic_events
        pipeline: string
        systemFields: *id204
        environment: string
        streamtags: *id205
        region: US
        accountId: string
        eventType: string
        concurrency: 5
        maxPayloadSizeKB: 1024
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id206
        responseRetrySettings: *id207
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        authType: manual
        description: string
        customUrl: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        apiKey: string
        textSecret: string
    OutputInfluxdb:
      required:
      - url
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - influxdb
          example: influxdb
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id208
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id208
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id209 []
          items:
            type: string
            example: string
          example: *id209
        url:
          type: string
          title: Write API URL
          description: URL of an InfluxDB cluster to send events to, e.g., http://localhost:8086/write
          pattern: ^https?://.*
          example: string
        useV2API:
          type: boolean
          title: Use v2 API
          description: The v2 API can be enabled with InfluxDB versions 1.8 and later.
          default: false
          example: false
        timestampPrecision:
          type: string
          title: Timestamp precision
          description: Sets the precision for the supplied Unix time values. Defaults to milliseconds.
          enum:
          - ns
          - u
          - ms
          - s
          - m
          - h
          default: ms
          example: ms
        dynamicValueFieldName:
          type: boolean
          title: Dynamic value fields
          description: Enabling this will pull the value field from the metric name. E,g, 'db.query.user' will use 'db.query' as the measurement and 'user' as the value field.
          default: true
          example: true
        valueFieldName:
          type: string
          title: Value field name
          description: Name of the field in which to store the metric when sending to InfluxDB. If dynamic generation is enabled and fails, this will be used as a fallback.
          default: value
          example: value
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 51200
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id210 []
          items:
            type: string
            example: string
          example: *id210
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id211 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id211
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          type: string
          title: Authentication type
          description: InfluxDB authentication type
          enum:
          - none
          - basic
          - credentialsSecret
          - token
          - textSecret
          - oauth
          default: none
          example: none
        description:
          type: string
          title: Description
          example: string
        database:
          type: string
          title: Database
          description: Database to write to.
          example: string
        bucket:
          type: string
          title: Bucket
          description: Bucket to write to.
          example: string
        org:
          type: string
          title: Organization
          description: Organization ID for this bucket.
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        username:
          type: string
          title: Username
          example: string
        password:
          type: string
          title: Password
          example: string
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: string
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: string
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: string
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: string
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
          example: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: string
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: string
              value:
                type: string
                title: Value
                description: OAuth header value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
      type: object
      example:
        id: string
        type: influxdb
        pipeline: string
        systemFields: *id208
        environment: string
        streamtags: *id209
        url: string
        useV2API: false
        timestampPrecision: ms
        dynamicValueFieldName: true
        valueFieldName: value
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id210
        responseRetrySettings: *id211
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        authType: none
        description: string
        database: string
        bucket: string
        org: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        username: string
        password: string
        token: string
        credentialsSecret: string
        textSecret: string
        loginUrl: string
        secretParamName: string
        secret: string
        tokenAttributeName: string
        authHeaderExpr: "`Bearer ${token}`"
        tokenTimeoutSecs: 3600
        oauthParams:
        - name: string
          value: string
        oauthHeaders:
        - name: string
          value: string
    OutputCloudwatch:
      required:
      - logGroupName
      - logStreamName
      - region
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - cloudwatch
          example: cloudwatch
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id212
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id212
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id213 []
          items:
            type: string
            example: string
          example: *id213
        logGroupName:
          type: string
          title: Log group name
          description: CloudWatch log group to associate events with
          example: string
        logStreamName:
          type: string
          title: Log stream prefix
          description: "Prefix for CloudWatch log stream name. This prefix will be used to generate a unique log stream name per cribl instance, for example: myStream_myHost_myOutputId"
          example: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: Region where the CloudWatchLogs is located
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: CloudWatchLogs service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to CloudWatchLogs-compatible endpoint.
          example: string
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for CloudWatchLogs
          description: Use Assume Role credentials to access CloudWatchLogs
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        maxQueueSize:
          type: number
          title: Queue size limit
          description: Maximum number of queued batches before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxRecordSizeKB:
          type: number
          title: Record size limit (KB, uncompressed)
          description: Maximum size (KB) of each individual record before compression. For non compressible data 1MB is the max recommended size
          default: 1024
          minimum: 1
          maximum: 10240
          example: 1024
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
          example: 1
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: cloudwatch
        pipeline: string
        systemFields: *id212
        environment: string
        streamtags: *id213
        logGroupName: string
        logStreamName: string
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        maxQueueSize: 5
        maxRecordSizeKB: 1024
        flushPeriodSec: 1
        onBackpressure: block
        description: string
        awsApiKey: string
        awsSecret: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputMinio:
      required:
      - bucket
      - stagePath
      - endpoint
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - minio
          example: minio
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id214
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id214
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id215 []
          items:
            type: string
            example: string
          example: *id215
        endpoint:
          type: string
          title: MinIO endpoint
          description: MinIO service url (e.g. http://minioHost:9000)
          pattern: ^https?://.*
          example: string
        bucket:
          type: string
          title: MinIO bucket name
          description: "Name of the destination MinIO bucket. This value can be a constant or a JavaScript expression that can only be evaluated at init time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`"
          example: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          description: Secret key. This value can be a constant or a JavaScript expression, such as `${C.env.SOME_SECRET}`).
          example: string
        region:
          type: string
          title: Region
          description: Region where the MinIO service/cluster is located
          example: string
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        destPath:
          type: string
          title: Key prefix
          description: Root directory to prepend to path before uploading. Enter a constant, or a JavaScript expression enclosed in quotes or backticks.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing MinIO requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
          - private
          - public-read
          - public-read-write
          - authenticated-read
          - aws-exec-read
          - bucket-owner-read
          - bucket-owner-full-control
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
          - STANDARD
          - REDUCED_REDUNDANCY
          example: STANDARD
        serverSideEncryption:
          type: string
          title: Server-side encryption
          description: Server-side encryption for uploaded objects
          enum:
          - AES256
          example: AES256
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates)
          default: true
          example: true
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the bucket itself
          default: true
          example: true
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and organized. Default is date-based. If blank, Stream will fall back to the event's __partition field value – if present – otherwise to each location's root directory.
          default: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
          example: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
          - json
          - raw
          - parquet
          default: json
          example: json
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
          example: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 32
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 100
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
          example: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 64
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
          example: false
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
          - block
          - drop
          default: block
          example: block
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
          example: 30
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts limit
          description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
          example: 4
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: This value can be a constant or a JavaScript expression (`${C.env.SOME_ACCESS_KEY}`)
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
          - none
          - gzip
          default: gzip
          example: gzip
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
          - best_speed
          - normal
          - best_compression
          default: best_speed
          example: best_speed
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
          example: false
        parquetVersion:
          type: string
          title: Parquet version
          enum:
          - PARQUET_1_0
          - PARQUET_2_4
          - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
          - DATA_PAGE_V1
          - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 10000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: ""
              value:
                type: string
                title: Value
                example: string
            example:
              key: ""
              value: string
          example:
          - key: ""
            value: string
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
          example: false
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
      type: object
      example:
        id: string
        type: minio
        pipeline: string
        systemFields: *id214
        environment: string
        streamtags: *id215
        endpoint: string
        bucket: string
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        stagePath: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath: true
        destPath: string
        signatureVersion: v4
        objectACL: private
        storageClass: STANDARD
        serverSideEncryption: AES256
        reuseConnections: true
        rejectUnauthorized: true
        verifyPermissions: true
        removeEmptyDirs: true
        partitionExpr: "C.Time.strftime(_time ? _time : Date.now()/1000, '%Y/%m/%d')"
        format: json
        baseFileName: "`CriblOut`"
        fileNameSuffix: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB: 32
        maxOpenFiles: 100
        headerLine: ""
        writeHighWaterMark: 64
        onBackpressure: block
        deadletterEnabled: false
        onDiskFullBackpressure: block
        maxFileOpenTimeSec: 300
        maxFileIdleTimeSec: 30
        maxConcurrentFileParts: 4
        description: string
        awsApiKey: string
        awsSecret: string
        compress: gzip
        compressionLevel: best_speed
        automaticSchema: false
        parquetVersion: PARQUET_2_6
        parquetDataPageVersion: DATA_PAGE_V2
        parquetRowGroupLength: 10000
        parquetPageSize: 1MB
        shouldLogInvalidRows: true
        keyValueMetadata:
        - key: ""
          value: string
        enableStatistics: true
        enableWritePageIndex: true
        enablePageChecksum: false
        emptyDirCleanupSec: 300
        deadletterPath: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum: 20
    OutputStatsd:
      required:
      - protocol
      - host
      - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - statsd
          example: statsd
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id216
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id216
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id217 []
          items:
            type: string
            example: string
          example: *id217
        protocol:
          type: string
          default: udp
          enum:
          - udp
          - tcp
          title: Destination protocol
          description: Protocol to use when communicating with the destination.
          example: udp
        host:
          type: string
          title: Host
          description: The hostname of the destination.
          example: string
        port:
          type: number
          title: Port
          minimum: 1
          maximum: 65535
          default: 8125
          description: Destination port.
          example: 8125
        mtu:
          type: number
          default: 512
          minimum: 1
          maximum: 65535
          title: Record size limit (bytes)
          description: When protocol is UDP, specifies the maximum size of packets sent to the destination. Also known as the MTU for the network path to the destination system.
          example: 512
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: When protocol is TCP, specifies how often buffers should be flushed, resulting in records sent to the destination.
          example: 1
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address. Ignored if the destination is an IP address. A value of 0 means every batch sent will incur a DNS lookup.
          example: 0
        description:
          type: string
          title: Description
          example: string
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: "0"
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
          example: 60000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: statsd
        pipeline: string
        systemFields: *id216
        environment: string
        streamtags: *id217
        protocol: udp
        host: string
        port: 8125
        mtu: 512
        flushPeriodSec: 1
        dnsResolvePeriodSec: 0
        description: string
        throttleRatePerSec: "0"
        connectionTimeout: 10000
        writeTimeout: 60000
        onBackpressure: block
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputStatsdExt:
      required:
      - protocol
      - host
      - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - statsd_ext
          example: statsd_ext
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id218
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id218
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id219 []
          items:
            type: string
            example: string
          example: *id219
        protocol:
          type: string
          default: udp
          enum:
          - udp
          - tcp
          title: Destination protocol
          description: Protocol to use when communicating with the destination.
          example: udp
        host:
          type: string
          title: Host
          description: The hostname of the destination.
          example: string
        port:
          type: number
          title: Port
          minimum: 1
          maximum: 65535
          default: 8125
          description: Destination port.
          example: 8125
        mtu:
          type: number
          default: 512
          minimum: 1
          maximum: 65535
          title: Record size limit (bytes)
          description: When protocol is UDP, specifies the maximum size of packets sent to the destination. Also known as the MTU for the network path to the destination system.
          example: 512
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: When protocol is TCP, specifies how often buffers should be flushed, resulting in records sent to the destination.
          example: 1
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address. Ignored if the destination is an IP address. A value of 0 means every batch sent will incur a DNS lookup.
          example: 0
        description:
          type: string
          title: Description
          example: string
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: "0"
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
          example: 60000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: statsd_ext
        pipeline: string
        systemFields: *id218
        environment: string
        streamtags: *id219
        protocol: udp
        host: string
        port: 8125
        mtu: 512
        flushPeriodSec: 1
        dnsResolvePeriodSec: 0
        description: string
        throttleRatePerSec: "0"
        connectionTimeout: 10000
        writeTimeout: 60000
        onBackpressure: block
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputGraphite:
      required:
      - protocol
      - host
      - port
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - graphite
          example: graphite
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id220
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id220
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id221 []
          items:
            type: string
            example: string
          example: *id221
        protocol:
          type: string
          default: udp
          enum:
          - udp
          - tcp
          title: Destination protocol
          description: Protocol to use when communicating with the destination.
          example: udp
        host:
          type: string
          title: Host
          description: The hostname of the destination.
          example: string
        port:
          type: number
          title: Port
          minimum: 1
          maximum: 65535
          default: 8125
          description: Destination port.
          example: 8125
        mtu:
          type: number
          default: 512
          minimum: 1
          maximum: 65535
          title: Record size limit (bytes)
          description: When protocol is UDP, specifies the maximum size of packets sent to the destination. Also known as the MTU for the network path to the destination system.
          example: 512
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: When protocol is TCP, specifies how often buffers should be flushed, resulting in records sent to the destination.
          example: 1
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address. Ignored if the destination is an IP address. A value of 0 means every batch sent will incur a DNS lookup.
          example: 0
        description:
          type: string
          title: Description
          example: string
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: "0"
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
          example: 60000
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: graphite
        pipeline: string
        systemFields: *id220
        environment: string
        streamtags: *id221
        protocol: udp
        host: string
        port: 8125
        mtu: 512
        flushPeriodSec: 1
        dnsResolvePeriodSec: 0
        description: string
        throttleRatePerSec: "0"
        connectionTimeout: 10000
        writeTimeout: 60000
        onBackpressure: block
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputRouter:
      required:
      - rules
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - router
          example: router
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id222
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id222
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id223 []
          items:
            type: string
            example: string
          example: *id223
        rules:
          type: array
          title: Rules
          description: Event routing rules
          minItems: 1
          items:
            type: object
            required:
            - filter
            - output
            properties:
              filter:
                type: string
                title: Filter Expression
                description: JavaScript expression to select events to send to output
                example: string
              output:
                type: string
                title: Output
                description: Output to send matching events to
                example: string
              description:
                type: string
                title: Description
                description: Description of this rule's purpose
                example: string
              final:
                type: boolean
                title: Final
                description: Flag to control whether to stop the event from being checked against other rules
                default: true
                example: true
            example:
              filter: string
              output: string
              description: string
              final: true
          example:
          - filter: string
            output: string
            description: string
            final: true
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: router
        pipeline: string
        systemFields: *id222
        environment: string
        streamtags: *id223
        rules:
        - filter: string
          output: string
          description: string
          final: true
        description: string
    OutputSns:
      required:
      - topicArn
      - messageGroupId
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - sns
          example: sns
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id224
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id224
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id225 []
          items:
            type: string
            example: string
          example: *id225
        topicArn:
          type: string
          title: Topic ARN
          description: "The ARN of the SNS topic to send events to. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. E.g., 'https://host:port/myQueueName'. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`"
          example: string
        messageGroupId:
          type: string
          title: Message Group ID
          description: "Messages in the same group are processed in a FIFO manner. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
          example: string
        maxRetries:
          type: number
          title: Maximum number of retries
          description: Maximum number of retries before the output returns an error. Note that not all errors are retryable. The retries use an exponential backoff policy.
          example: 123.45
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: Region where the SNS is located
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: SNS service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to SNS-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SNS requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for SNS
          description: Use Assume Role credentials to access SNS
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: sns
        pipeline: string
        systemFields: *id224
        environment: string
        streamtags: *id225
        topicArn: string
        messageGroupId: string
        maxRetries: 123.45
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        onBackpressure: block
        description: string
        awsApiKey: string
        awsSecret: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputSqs:
      required:
      - queueName
      - queueType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - sqs
          example: sqs
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id226
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id226
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id227 []
          items:
            type: string
            example: string
          example: *id227
        queueName:
          type: string
          title: Queue Name
          description: "The name, URL, or ARN of the SQS queue to send events to. When a non-AWS URL is specified, format must be: '{url}/myQueueName'. Example: 'https://host:port/myQueueName'. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `https://host:port/myQueue-${C.vars.myVar}`."
          example: string
        queueType:
          title: Queue Type
          type: string
          description: The queue type used (or created). Defaults to Standard.
          enum:
          - standard
          - fifo
          default: standard
          example: standard
        awsAccountId:
          title: AWS account ID
          description: SQS queue owner's AWS account ID. Leave empty if SQS queue is in same AWS account.
          type: string
          example: string
        messageGroupId:
          type: string
          title: Message Group ID
          description: This parameter applies only to FIFO queues. The tag that specifies that a message belongs to a specific message group. Messages that belong to the same message group are processed in a FIFO manner. Use event field __messageGroupId to override this value.
          default: cribl
          example: cribl
        createQueue:
          type: boolean
          title: Create Queue
          description: Create queue if it does not exist.
          default: true
          example: true
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        region:
          type: string
          title: Region
          description: AWS Region where the SQS queue is located. Required, unless the Queue entry is a URL or ARN that includes a Region.
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: SQS service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to SQS-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing SQS requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for SQS
          description: Use Assume Role credentials to access SQS
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        maxQueueSize:
          type: number
          title: Queue size limit
          description: Maximum number of queued batches before blocking.
          default: 100
          minimum: 1
          example: 100
        maxRecordSizeKB:
          type: number
          title: Record size limit (KB)
          description: Maximum size (KB) of batches to send. Per the SQS spec, the max allowed value is 256 KB.
          default: 256
          minimum: 1
          maximum: 256
          example: 256
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Max record size.
          example: 1
        maxInProgress:
          type: number
          title: Concurrent request limit
          description: The maximum number of in-progress API requests before backpressure is applied.
          default: 10
          minimum: 1
          maximum: 100
          example: 10
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: ""
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: sqs
        pipeline: string
        systemFields: *id226
        environment: string
        streamtags: *id227
        queueName: string
        queueType: standard
        awsAccountId: string
        messageGroupId: cribl
        createQueue: true
        awsAuthenticationMethod: auto
        awsSecretKey: string
        region: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        maxQueueSize: 100
        maxRecordSizeKB: 256
        flushPeriodSec: 1
        maxInProgress: 10
        onBackpressure: block
        description: string
        awsApiKey: string
        awsSecret: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputSnmp:
      required:
      - hosts
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - snmp
          example: snmp
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id228
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id228
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id229 []
          items:
            type: string
            example: string
          example: *id229
        hosts:
          type: array
          title: SNMP Trap Destinations
          description: One or more SNMP destinations to forward traps to
          minItems: 1
          items:
            type: object
            required:
            - host
            - port
            properties:
              host:
                type: string
                title: Address
                description: Destination host
                example: string
              port:
                type: number
                title: Port
                maximum: 65535
                description: Destination port, default is 162
                default: 162
                example: 162
            example:
              host: string
              port: 162
          example:
          - host: string
            port: 162
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address. Ignored if all destinations are IP addresses. A value of 0 means every trap sent will incur a DNS lookup.
          example: 0
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: snmp
        pipeline: string
        systemFields: *id228
        environment: string
        streamtags: *id229
        hosts:
        - host: string
          port: 162
        dnsResolvePeriodSec: 0
        description: string
    OutputSumoLogic:
      required:
      - url
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - sumo_logic
          example: sumo_logic
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id230
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id230
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id231 []
          items:
            type: string
            example: string
          example: *id231
        url:
          type: string
          title: API URL
          description: Sumo Logic HTTP collector URL to which events should be sent
          pattern: ^https?://.*
          example: string
        customSource:
          type: string
          title: Custom source name
          description: Override the source name configured on the Sumo Logic HTTP collector. This can also be overridden at the event level with the __sourceName field.
          example: string
        customCategory:
          type: string
          title: Custom source category
          description: Override the source category configured on the Sumo Logic HTTP collector. This can also be overridden at the event level with the __sourceCategory field.
          example: string
        format:
          type: string
          title: Data format
          description: Preserve the raw event format instead of JSONifying it
          enum:
          - json
          - raw
          default: json
          example: json
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 1024
          minimum: 1
          maximum: 1024
          example: 1024
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id232 []
          items:
            type: string
            example: string
          example: *id232
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id233 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id233
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
          example: 123.45
        description:
          type: string
          title: Description
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: sumo_logic
        pipeline: string
        systemFields: *id230
        environment: string
        streamtags: *id231
        url: string
        customSource: string
        customCategory: string
        format: json
        concurrency: 5
        maxPayloadSizeKB: 1024
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id232
        responseRetrySettings: *id233
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        totalMemoryLimitKB: 123.45
        description: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputDatadog:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - datadog
          example: datadog
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id234
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id234
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id235 []
          items:
            type: string
            example: string
          example: *id235
        contentType:
          type: string
          title: Send logs as
          description: The content type to use when sending logs
          enum:
          - text
          - json
          default: json
          example: json
        message:
          type: string
          title: Message field
          description: Name of the event field that contains the message to send. If not specified, Stream sends a JSON representation of the whole event.
          example: string
        source:
          type: string
          title: Source
          description: Name of the source to send with logs. When you send logs as JSON objects, the event's 'source' field (if set) will override this value.
          example: string
        host:
          type: string
          title: Host
          description: Name of the host to send with logs. When you send logs as JSON objects, the event's 'host' field (if set) will override this value.
          example: string
        service:
          type: string
          title: Service
          description: Name of the service to send with logs. When you send logs as JSON objects, the event's '__service' field (if set) will override this value.
          example: string
        tags:
          type: array
          title: Datadog tags
          description: List of tags to send with logs, such as 'env:prod' and 'env_staging:east'
          default: &id236 []
          items:
            type: string
            example: string
          example: *id236
        batchByTags:
          type: boolean
          title: Batch by tags
          description: Batch events by API key and the ddtags field on the event. When disabled, batches events only by API key. If incoming events have high cardinality in the ddtags field, disabling this setting may improve Destination performance.
          default: true
          example: true
        allowApiKeyFromEvents:
          type: boolean
          title: Allow API key from events
          description: Allow API key to be set from the event's '__agent_api_key' field
          default: false
          example: false
        severity:
          type: string
          title: Severity
          description: Default value for message severity. When you send logs as JSON objects, the event's '__severity' field (if set) will override this value.
          enum:
          - emergency
          - alert
          - critical
          - error
          - warning
          - notice
          - info
          - debug
          example: emergency
        site:
          type: string
          title: Datadog site
          description: Datadog site to which events should be sent
          default: us
          enum:
          - us
          - us3
          - us5
          - eu
          - fed1
          - ap1
          - custom
          example: us
        sendCountersAsCount:
          type: boolean
          title: Send counter metrics as 'count'
          description: If not enabled, Datadog will transform 'counter' metrics to 'gauge'. [Learn more about Datadog metrics types.](https://docs.datadoghq.com/metrics/types/?tab=count)
          default: false
          example: false
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id237 []
          items:
            type: string
            example: string
          example: *id237
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id238 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id238
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          example: manual
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
          example: 123.45
        description:
          type: string
          title: Description
          example: string
        customUrl:
          type: string
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        apiKey:
          type: string
          title: API key
          description: Organization's API key in Datadog
          example: string
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: datadog
        pipeline: string
        systemFields: *id234
        environment: string
        streamtags: *id235
        contentType: json
        message: string
        source: string
        host: string
        service: string
        tags: *id236
        batchByTags: true
        allowApiKeyFromEvents: false
        severity: emergency
        site: us
        sendCountersAsCount: false
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id237
        responseRetrySettings: *id238
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        authType: manual
        totalMemoryLimitKB: 123.45
        description: string
        customUrl: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        apiKey: string
        textSecret: string
    OutputGrafanaCloud:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - grafana_cloud
          example: grafana_cloud
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards. These fields are added as dimensions and labels to generated metrics and logs, respectively.
          default: &id239
          - cribl_host
          - cribl_wp
          items:
            type: string
            example: string
          example: *id239
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id240 []
          items:
            type: string
            example: string
          example: *id240
        lokiUrl:
          type: string
          title: Loki URL
          description: The endpoint to send logs to, such as https://logs-prod-us-central1.grafana.net
          pattern: ^https?://
          example: string
        prometheusUrl:
          type: string
          title: Prometheus URL
          description: The remote_write endpoint to send Prometheus metrics to, such as https://prometheus-blocks-prod-us-central1.grafana.net/api/prom/push
          pattern: ^https?://
          example: string
        message:
          type: string
          title: Logs message field
          description: Name of the event field that contains the message to send. If not specified, Stream sends a JSON representation of the whole event.
          example: string
        messageFormat:
          type: string
          title: Message format
          description: Format to use when sending logs to Loki (Protobuf or JSON)
          enum:
          - protobuf
          - json
          default: protobuf
          example: protobuf
        labels:
          type: array
          title: Logs labels
          description: "List of labels to send with logs. Labels define Loki streams, so use static labels to avoid proliferating label value combinations and streams. Can be merged and/or overridden by the event's __labels field. Example: '__labels: {host: \"cribl.io\", level: \"error\"}'"
          minItems: 0
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                default: ""
                example: ""
              value:
                type: string
                title: Value
                example: string
            example:
              name: ""
              value: string
          example:
          - name: ""
            value: string
        metricRenameExpr:
          type: string
          title: Metrics renaming expression
          description: JavaScript expression that can be used to rename metrics. For example, name.replace(/\./g, '_') will replace all '.' characters in a metric's name with the supported '_' character. Use the 'name' global variable to access the metric's name. You can access event fields' values via __e.<fieldName>.
          default: name.replace(/[^a-zA-Z0-9_]/g, '_')
          example: name.replace(/[^a-zA-Z0-9_]/g, '_')
        prometheusAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              enum:
              - none
              - token
              - textSecret
              - basic
              - credentialsSecret
              default: basic
              example: basic
            token:
              type: string
              title: Auth token
              description: "Bearer token to include in the authorization header. In Grafana Cloud, this is generally built by concatenating the username and the API key, separated by a colon. Example: <your-username>:<your-api-key>"
              example: string
            textSecret:
              type: string
              title: Auth token (text secret)
              description: Select or create a stored text secret
              example: string
            username:
              type: string
              title: Username
              description: Username for authentication
              example: string
            password:
              type: string
              title: Password
              description: Password (API key in Grafana Cloud domain) for authentication
              example: string
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
              example: string
          example:
            authType: basic
            token: string
            textSecret: string
            username: string
            password: string
            credentialsSecret: string
        lokiAuth:
          type: object
          properties:
            authType:
              type: string
              title: Authentication type
              enum:
              - none
              - token
              - textSecret
              - basic
              - credentialsSecret
              default: basic
              example: basic
            token:
              type: string
              title: Auth token
              description: "Bearer token to include in the authorization header. In Grafana Cloud, this is generally built by concatenating the username and the API key, separated by a colon. Example: <your-username>:<your-api-key>"
              example: string
            textSecret:
              type: string
              title: Auth token (text secret)
              description: Select or create a stored text secret
              example: string
            username:
              type: string
              title: Username
              description: Username for authentication
              example: string
            password:
              type: string
              title: Password
              description: Password (API key in Grafana Cloud domain) for authentication
              example: string
            credentialsSecret:
              type: string
              title: Credentials secret
              description: Select or create a secret that references your credentials
              example: string
          example:
            authType: basic
            token: string
            textSecret: string
            username: string
            password: string
            credentialsSecret: string
        concurrency:
          type: number
          title: Request concurrency
          description: "Maximum number of ongoing requests before blocking. Warning: Setting this value > 1 can cause Loki and Prometheus to complain about entries being delivered out of order."
          default: 1
          minimum: 1
          maximum: 32
          example: 1
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: "Maximum size, in KB, of the request body. Warning: Setting this too low can increase the number of ongoing requests (depending on the value of 'Request concurrency'); this can cause Loki and Prometheus to complain about entries being delivered out of order."
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: "Maximum number of events to include in the request body. Default is 0 (unlimited). Warning: Setting this too low can increase the number of ongoing requests (depending on the value of 'Request concurrency'); this can cause Loki and Prometheus to complain about entries being delivered out of order."
          default: 0
          minimum: 0
          example: 0
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 15
          title: Flush period (sec)
          description: "Maximum time between requests. Small values could cause the payload size to be smaller than the configured Maximum time between requests. Small values can reduce the payload size below the configured 'Max record size' and 'Max events per request'. Warning: Setting this too low can increase the number of ongoing requests (depending on the value of 'Request concurrency'); this can cause Loki and Prometheus to complain about entries being delivered out of order."
          example: 15
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id241 []
          items:
            type: string
            example: string
          example: *id241
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id242 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id242
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending. Applies only to JSON payloads; the Protobuf variant for both Prometheus and Loki are snappy-compressed by default.
          example: true
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      anyOf:
      - required:
        - lokiUrl
        example: string
      - required:
        - prometheusUrl
        example: string
      example:
        id: string
        type: grafana_cloud
        pipeline: string
        systemFields: *id239
        environment: string
        streamtags: *id240
        lokiUrl: string
        prometheusUrl: string
        message: string
        messageFormat: protobuf
        labels:
        - name: ""
          value: string
        metricRenameExpr: name.replace(/[^a-zA-Z0-9_]/g, '_')
        prometheusAuth:
          authType: basic
          token: string
          textSecret: string
          username: string
          password: string
          credentialsSecret: string
        lokiAuth:
          authType: basic
          token: string
          textSecret: string
          username: string
          password: string
          credentialsSecret: string
        concurrency: 1
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 15
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id241
        responseRetrySettings: *id242
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        description: string
        compress: true
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputLoki:
      required:
      - url
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - loki
          example: loki
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards. These fields are added as labels to generated logs.
          default: &id243
          - cribl_host
          - cribl_wp
          items:
            type: string
            example: string
          example: *id243
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id244 []
          items:
            type: string
            example: string
          example: *id244
        url:
          type: string
          title: Loki URL
          description: The endpoint to send logs to
          pattern: ^https?://.*
          example: string
        message:
          type: string
          title: Logs message field
          description: Name of the event field that contains the message to send. If not specified, Stream sends a JSON representation of the whole event.
          example: string
        messageFormat:
          type: string
          title: Message format
          description: Format to use when sending logs to Loki (Protobuf or JSON)
          enum:
          - protobuf
          - json
          default: protobuf
          example: protobuf
        labels:
          type: array
          title: Logs labels
          description: "List of labels to send with logs. Labels define Loki streams, so use static labels to avoid proliferating label value combinations and streams. Can be merged and/or overridden by the event's __labels field. Example: '__labels: {host: \"cribl.io\", level: \"error\"}'"
          minItems: 0
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                default: ""
                example: ""
              value:
                type: string
                title: Value
                example: string
            example:
              name: ""
              value: string
          example:
          - name: ""
            value: string
        authType:
          type: string
          title: Authentication type
          enum:
          - none
          - token
          - textSecret
          - basic
          - credentialsSecret
          default: none
          example: none
        concurrency:
          type: number
          title: Request concurrency
          description: "Maximum number of ongoing requests before blocking. Warning: Setting this value > 1 can cause Loki to complain about entries being delivered out of order."
          default: 1
          minimum: 1
          maximum: 32
          example: 1
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: "Maximum size, in KB, of the request body. Warning: Setting this too low can increase the number of ongoing requests (depending on the value of 'Request concurrency'); this can cause Loki to complain about entries being delivered out of order."
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: "Maximum number of events to include in the request body. Defaults to 0 (unlimited). Warning: Setting this too low can increase the number of ongoing requests (depending on the value of 'Request concurrency'); this can cause Loki to complain about entries being delivered out of order."
          default: 0
          minimum: 0
          example: 0
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 15
          title: Flush period (sec)
          description: "Maximum time between requests. Small values could cause the payload size to be smaller than the configured Maximum time between requests. Small values can reduce the payload size below the configured 'Max record size' and 'Max events per request'. Warning: Setting this too low can increase the number of ongoing requests (depending on the value of 'Request concurrency'); this can cause Loki to complain about entries being delivered out of order."
          example: 15
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id245 []
          items:
            type: string
            example: string
          example: *id245
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id246 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id246
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
          example: 123.45
        description:
          type: string
          title: Description
          example: string
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        token:
          type: string
          title: Auth token
          description: "Bearer token to include in the authorization header. In Grafana Cloud, this is generally built by concatenating the username and the API key, separated by a colon. Example: <your-username>:<your-api-key>"
          example: string
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: string
        username:
          type: string
          title: Username
          description: Username for authentication
          example: string
        password:
          type: string
          title: Password
          description: Password (API key in Grafana Cloud domain) for authentication
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: loki
        pipeline: string
        systemFields: *id243
        environment: string
        streamtags: *id244
        url: string
        message: string
        messageFormat: protobuf
        labels:
        - name: ""
          value: string
        authType: none
        concurrency: 1
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 15
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id245
        responseRetrySettings: *id246
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        totalMemoryLimitKB: 123.45
        description: string
        compress: true
        token: string
        textSecret: string
        username: string
        password: string
        credentialsSecret: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputPrometheus:
      required:
      - url
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - prometheus
          example: prometheus
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards. These fields are added as dimensions to generated metrics.
          default: &id247
          - cribl_host
          - cribl_wp
          items:
            type: string
            example: string
          example: *id247
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id248 []
          items:
            type: string
            example: string
          example: *id248
        url:
          type: string
          title: Remote Write URL
          description: The endpoint to send metrics to
          pattern: ^https?://.*
          example: string
        metricRenameExpr:
          type: string
          title: Metric renaming expression
          description: JavaScript expression that can be used to rename metrics. For example, name.replace(/\./g, '_') will replace all '.' characters in a metric's name with the supported '_' character. Use the 'name' global variable to access the metric's name. You can access event fields' values via __e.<fieldName>.
          default: name.replace(/[^a-zA-Z0-9_]/g, '_')
          example: name.replace(/[^a-zA-Z0-9_]/g, '_')
        sendMetadata:
          type: boolean
          title: Send metadata
          description: Generate and send metadata (`type` and `metricFamilyName`) requests
          default: true
          example: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id249 []
          items:
            type: string
            example: string
          example: *id249
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id250 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id250
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          type: string
          title: Authentication type
          description: Remote Write authentication type
          enum:
          - none
          - basic
          - credentialsSecret
          - token
          - textSecret
          - oauth
          default: none
          example: none
        description:
          type: string
          title: Description
          example: string
        metricsFlushPeriodSec:
          type: number
          default: 60
          title: Metadata flush period (sec)
          description: How frequently metrics metadata is sent out. Value cannot be smaller than the base Flush period set above.
          example: 60
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        username:
          type: string
          title: Username
          example: string
        password:
          type: string
          title: Password
          example: string
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: string
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: string
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: string
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: string
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
          example: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: string
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: string
              value:
                type: string
                title: Value
                description: OAuth header value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
      type: object
      example:
        id: string
        type: prometheus
        pipeline: string
        systemFields: *id247
        environment: string
        streamtags: *id248
        url: string
        metricRenameExpr: name.replace(/[^a-zA-Z0-9_]/g, '_')
        sendMetadata: true
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id249
        responseRetrySettings: *id250
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        authType: none
        description: string
        metricsFlushPeriodSec: 60
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        username: string
        password: string
        token: string
        credentialsSecret: string
        textSecret: string
        loginUrl: string
        secretParamName: string
        secret: string
        tokenAttributeName: string
        authHeaderExpr: "`Bearer ${token}`"
        tokenTimeoutSecs: 3600
        oauthParams:
        - name: string
          value: string
        oauthHeaders:
        - name: string
          value: string
    OutputRing:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - ring
          example: ring
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id251
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id251
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id252 []
          items:
            type: string
            example: string
          example: *id252
        format:
          type: string
          title: Data format
          description: Format of the output data.
          enum:
          - json
          - raw
          default: json
          example: json
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JS expression to define how files are partitioned and organized. If left blank, Cribl Stream will fallback on event.__partition.
          example: string
        maxDataSize:
          type: string
          title: Data size limit
          description: "Maximum disk space allowed to be consumed (examples: 420MB, 4GB). When limit is reached, older data will be deleted."
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1GB
          example: 1GB
        maxDataTime:
          title: Data age limit
          type: string
          description: "Maximum amount of time to retain data (examples: 2h, 4d). When limit is reached, older data will be deleted."
          pattern: \d+[smhd]$
          default: 24h
          example: 24h
        compress:
          type: string
          title: Data compression format
          enum:
          - none
          - gzip
          default: gzip
          example: gzip
        destPath:
          type: string
          title: Path location
          description: Path to use to write metrics. Defaults to $CRIBL_HOME/state/<id>
          example: string
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: ring
        pipeline: string
        systemFields: *id251
        environment: string
        streamtags: *id252
        format: json
        partitionExpr: string
        maxDataSize: 1GB
        maxDataTime: 24h
        compress: gzip
        destPath: string
        onBackpressure: block
        description: string
    OutputOpenTelemetry:
      required:
      - endpoint
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - open_telemetry
          example: open_telemetry
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id253
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id253
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id254 []
          items:
            type: string
            example: string
          example: *id254
        protocol:
          type: string
          title: Protocol
          description: Select a transport option for OpenTelemetry
          enum:
          - grpc
          - http
          default: grpc
          example: grpc
        endpoint:
          type: string
          title: Endpoint
          description: The endpoint where OTel events will be sent. Enter any valid URL or an IP address (IPv4 or IPv6; enclose IPv6 addresses in square brackets). Unspecified ports will default to 4317, unless the endpoint is an HTTPS-based URL or TLS is enabled, in which case 443 will be used.
          example: string
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when structuring data to send
          enum:
          - 0.10.0
          - 1.3.1
          default: 0.10.0
          example: 0.10.0
        compress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
          enum:
          - none
          - deflate
          - gzip
          default: gzip
          example: gzip
        httpCompress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
          enum:
          - none
          - gzip
          default: gzip
          example: gzip
        authType:
          type: string
          title: Authentication type
          description: OpenTelemetry authentication type
          enum:
          - none
          - basic
          - credentialsSecret
          - token
          - textSecret
          - oauth
          default: none
          example: none
        httpTracesEndpointOverride:
          type: string
          title: Traces endpoint override
          description: If you want to send traces to the default `{endpoint}/v1/traces` endpoint, leave this field empty; otherwise, specify the desired endpoint
          example: string
        httpMetricsEndpointOverride:
          type: string
          title: Metrics endpoint override
          description: If you want to send metrics to the default `{endpoint}/v1/metrics` endpoint, leave this field empty; otherwise, specify the desired endpoint
          example: string
        httpLogsEndpointOverride:
          type: string
          title: Logs endpoint override
          description: If you want to send logs to the default `{endpoint}/v1/logs` endpoint, leave this field empty; otherwise, specify the desired endpoint
          example: string
        metadata:
          type: array
          title: Metadata
          description: List of key-value pairs to send with each gRPC request. Value supports JavaScript expressions that are evaluated just once, when the destination gets started. To pass credentials as metadata, use 'C.Secret'.
          minItems: 0
          items:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: ""
              value:
                type: string
                title: Value
                example: string
            example:
              key: ""
              value: string
          example:
          - key: ""
            value: string
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
          example: 10000
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often the sender should ping the peer to keep the connection open
          minimum: 1
          default: 30
          example: 30
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        username:
          type: string
          title: Username
          example: string
        password:
          type: string
          title: Password
          example: string
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: string
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: string
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: string
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: string
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
          example: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: string
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: string
              value:
                type: string
                title: Value
                description: OAuth header value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id255 []
          items:
            type: string
            example: string
          example: *id255
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id256 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id256
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            rejectUnauthorized: true
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: open_telemetry
        pipeline: string
        systemFields: *id253
        environment: string
        streamtags: *id254
        protocol: grpc
        endpoint: string
        otlpVersion: 0.10.0
        compress: gzip
        httpCompress: gzip
        authType: none
        httpTracesEndpointOverride: string
        httpMetricsEndpointOverride: string
        httpLogsEndpointOverride: string
        metadata:
        - key: ""
          value: string
        concurrency: 5
        maxPayloadSizeKB: 4096
        timeoutSec: 30
        flushPeriodSec: 1
        failedRequestLoggingMode: none
        connectionTimeout: 10000
        keepAliveTime: 30
        keepAlive: true
        onBackpressure: block
        description: string
        username: string
        password: string
        token: string
        credentialsSecret: string
        textSecret: string
        loginUrl: string
        secretParamName: string
        secret: string
        tokenAttributeName: string
        authHeaderExpr: "`Bearer ${token}`"
        tokenTimeoutSecs: 3600
        oauthParams:
        - name: string
          value: string
        oauthHeaders:
        - name: string
          value: string
        rejectUnauthorized: true
        useRoundRobinDns: false
        extraHttpHeaders:
        - name: string
          value: string
        safeHeaders: *id255
        responseRetrySettings: *id256
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        tls:
          disabled: true
          rejectUnauthorized: true
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputServiceNow:
      required:
      - endpoint
      - protocol
      - otlpVersion
      - tokenSecret
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - service_now
          example: service_now
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id257
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id257
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id258 []
          items:
            type: string
            example: string
          example: *id258
        endpoint:
          type: string
          title: Endpoint
          description: The endpoint where ServiceNow events will be sent. Enter any valid URL or an IP address (IPv4 or IPv6; enclose IPv6 addresses in square brackets)
          default: ingest.lightstep.com:443
          example: ingest.lightstep.com:443
        tokenSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: string
        authTokenName:
          type: string
          title: Auth token name
          default: lightstep-access-token
          example: lightstep-access-token
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when structuring data to send
          enum:
          - 1.3.1
          default: 1.3.1
          example: 1.3.1
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 2048
          minimum: 1024
          maximum: 10240
          example: 2048
        protocol:
          type: string
          title: Protocol
          description: Select a transport option for OpenTelemetry
          enum:
          - grpc
          - http
          default: grpc
          example: grpc
        compress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
          enum:
          - none
          - deflate
          - gzip
          default: gzip
          example: gzip
        httpCompress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
          enum:
          - none
          - gzip
          default: gzip
          example: gzip
        httpTracesEndpointOverride:
          type: string
          title: Traces endpoint override
          description: If you want to send traces to the default `{endpoint}/v1/traces` endpoint, leave this field empty; otherwise, specify the desired endpoint
          example: string
        httpMetricsEndpointOverride:
          type: string
          title: Metrics endpoint override
          description: If you want to send metrics to the default `{endpoint}/v1/metrics` endpoint, leave this field empty; otherwise, specify the desired endpoint
          example: string
        httpLogsEndpointOverride:
          type: string
          title: Logs endpoint override
          description: If you want to send logs to the default `{endpoint}/v1/logs` endpoint, leave this field empty; otherwise, specify the desired endpoint
          example: string
        metadata:
          type: array
          title: Metadata
          description: List of key-value pairs to send with each gRPC request. Value supports JavaScript expressions that are evaluated just once, when the destination gets started. To pass credentials as metadata, use 'C.Secret'.
          minItems: 0
          items:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: ""
              value:
                type: string
                title: Value
                example: string
            example:
              key: ""
              value: string
          example:
          - key: ""
            value: string
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
          example: 10000
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often the sender should ping the peer to keep the connection open
          minimum: 1
          default: 30
          example: 30
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
          example: true
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id259 []
          items:
            type: string
            example: string
          example: *id259
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id260 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id260
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            rejectUnauthorized: true
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: service_now
        pipeline: string
        systemFields: *id257
        environment: string
        streamtags: *id258
        endpoint: ingest.lightstep.com:443
        tokenSecret: string
        authTokenName: lightstep-access-token
        otlpVersion: 1.3.1
        maxPayloadSizeKB: 2048
        protocol: grpc
        compress: gzip
        httpCompress: gzip
        httpTracesEndpointOverride: string
        httpMetricsEndpointOverride: string
        httpLogsEndpointOverride: string
        metadata:
        - key: ""
          value: string
        concurrency: 5
        timeoutSec: 30
        flushPeriodSec: 1
        failedRequestLoggingMode: none
        connectionTimeout: 10000
        keepAliveTime: 30
        keepAlive: true
        onBackpressure: block
        description: string
        rejectUnauthorized: true
        useRoundRobinDns: false
        extraHttpHeaders:
        - name: string
          value: string
        safeHeaders: *id259
        responseRetrySettings: *id260
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        tls:
          disabled: true
          rejectUnauthorized: true
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputDataset:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - dataset
          example: dataset
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id261
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id261
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id262 []
          items:
            type: string
            example: string
          example: *id262
        messageField:
          type: string
          title: Message field
          description: Name of the event field that contains the message or attributes to send. If not specified, all of the event's non-internal fields will be sent as attributes.
          example: string
        excludeFields:
          type: array
          title: Exclude fields
          description: Fields to exclude from the event if the Message field is either unspecified or refers to an object. Ignored if the Message field is a string. If empty, we send all non-internal fields.
          default: &id263
          - sev
          - _time
          - ts
          - thread
          items:
            type: string
            example: string
          example: *id263
        serverHostField:
          type: string
          title: Server/host field
          description: Name of the event field that contains the `serverHost` identifier. If not specified, defaults to `cribl_<outputId>`.
          example: string
        timestampField:
          type: string
          title: Timestamp field
          description: Name of the event field that contains the timestamp. If not specified, defaults to `ts`, `_time`, or `Date.now()`, in that order.
          example: string
        defaultSeverity:
          type: string
          title: Severity
          description: Default value for event severity. If the `sev` or `__severity` fields are set on an event, the first one matching will override this value.
          default: info
          enum:
          - finest
          - finer
          - fine
          - info
          - warning
          - error
          - fatal
          example: info
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id264
          - httpStatus: 429
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id264
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        site:
          type: string
          title: DataSet site
          description: DataSet site to which events should be sent
          default: us
          enum:
          - us
          - eu
          - custom
          example: us
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 6144
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id265 []
          items:
            type: string
            example: string
          example: *id265
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Enter API key directly, or select a stored secret
          example: manual
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
          example: 123.45
        description:
          type: string
          title: Description
          example: string
        customUrl:
          type: string
          pattern: ^https?://.*
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        apiKey:
          type: string
          title: API key
          description: A 'Log Write Access' API key for the DataSet account
          example: string
        textSecret:
          type: string
          title: API key (text secret)
          description: Select or create a stored text secret
          example: string
      type: object
      example:
        id: string
        type: dataset
        pipeline: string
        systemFields: *id261
        environment: string
        streamtags: *id262
        messageField: string
        excludeFields: *id263
        serverHostField: string
        timestampField: string
        defaultSeverity: info
        responseRetrySettings: *id264
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        site: us
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id265
        onBackpressure: block
        authType: manual
        totalMemoryLimitKB: 123.45
        description: string
        customUrl: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        apiKey: string
        textSecret: string
    OutputCriblTcp:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - cribl_tcp
          example: cribl_tcp
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id266
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id266
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id267 []
          items:
            type: string
            example: string
          example: *id267
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Use load-balanced destinations
          default: true
          example: true
        compression:
          type: string
          default: gzip
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the data before sending
          example: gzip
        logFailedRequests:
          type: boolean
          title: Log failed requests to disk
          description: Use to troubleshoot issues with sending data
          default: false
          example: false
        throttleRatePerSec:
          type: string
          title: Throttling
          description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
          pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
          default: "0"
          example: "0"
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
          example: 10000
        writeTimeout:
          type: number
          title: Write timeout
          description: Amount of time (milliseconds) to wait for a write to complete before assuming connection is dead
          default: 60000
          example: 60000
        tokenTTLMinutes:
          type: number
          title: Auth Token TTL minutes
          default: 60
          minimum: 1
          maximum: 60
          description: The number of minutes before the internally generated authentication token expires, valid values between 1 and 60
          example: 60
        excludeFields:
          type: array
          title: Exclude fields
          description: "Fields to exclude from the event. By default, all internal fields except `__output` are sent. Example: `cribl_pipe`, `c*`. Wildcards supported."
          default: &id268
          - __kube_*
          - __metadata
          - __winEvent
          items:
            type: string
            example: string
          example: *id268
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        host:
          type: string
          title: Address
          description: The hostname of the receiver
          example: string
        port:
          type: number
          title: Port
          maximum: 65535
          description: The port to connect to on the provided host
          default: 10300
          example: 10300
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
          example: false
        hosts:
          type: array
          title: Destinations
          description: Set of hosts to load-balance data to
          minItems: 1
          items:
            type: object
            required:
            - host
            - port
            properties:
              host:
                type: string
                title: Address
                description: The hostname of the receiver
                example: string
              port:
                type: number
                title: Port
                maximum: 65535
                description: The port to connect to on the provided host
                default: 10300
                example: 10300
              tls:
                type: string
                title: TLS
                description: Whether to inherit TLS configs from group setting or disable TLS
                enum:
                - inherit
                - off
                default: inherit
                example: inherit
              servername:
                type: string
                title: TLS Servername
                description: Servername to use if establishing a TLS connection. If not specified, defaults to connection host (if not an IP); otherwise, uses the global TLS settings.
                example: string
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
                example: 1
            example:
              host: string
              port: 10300
              tls: inherit
              servername: string
              weight: 1
          example:
          - host: string
            port: 10300
            tls: inherit
            servername: string
            weight: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
          example: 600
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
          example: 300
        maxConcurrentSenders:
          type: number
          default: 0
          minimum: 0
          title: Connection limit
          description: Maximum number of concurrent connections (per Worker Process). A random set of IPs will be picked on every DNS resolution period. Use 0 for unlimited.
          example: 0
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: cribl_tcp
        pipeline: string
        systemFields: *id266
        environment: string
        streamtags: *id267
        loadBalanced: true
        compression: gzip
        logFailedRequests: false
        throttleRatePerSec: "0"
        tls:
          disabled: true
          rejectUnauthorized: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        connectionTimeout: 10000
        writeTimeout: 60000
        tokenTTLMinutes: 60
        excludeFields: *id268
        onBackpressure: block
        description: string
        host: string
        port: 10300
        excludeSelf: false
        hosts:
        - host: string
          port: 10300
          tls: inherit
          servername: string
          weight: 1
        dnsResolvePeriodSec: 600
        loadBalanceStatsPeriodSec: 300
        maxConcurrentSenders: 0
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputCriblHttp:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - cribl_http
          example: cribl_http
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id269
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id269
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id270 []
          items:
            type: string
            example: string
          example: *id270
        loadBalanced:
          type: boolean
          title: Load balancing
          description: For optimal performance, enable load balancing even if you have one hostname, as it can expand to multiple IPs. If this setting is disabled, consider enabling round-robin DNS.
          default: true
          example: true
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            rejectUnauthorized:
              type: boolean
              title: Validate server certs
              description: >-
                Reject certificates that are not authorized by a CA in the CA
                certificate path, or by another 
                                    trusted CA (such as the system's). Defaults to Enabled. Overrides the toggle from Advanced Settings, when also present.
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            rejectUnauthorized: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        tokenTTLMinutes:
          type: number
          title: Auth Token TTL minutes
          default: 60
          minimum: 1
          maximum: 60
          description: The number of minutes before the internally generated authentication token expires. Valid values are between 1 and 60.
          example: 60
        excludeFields:
          type: array
          title: Exclude fields
          description: "Fields to exclude from the event. By default, all internal fields except `__output` are sent. Example: `cribl_pipe`, `c*`. Wildcards supported."
          default: &id271
          - __kube_*
          - __metadata
          - __winEvent
          items:
            type: string
            example: string
          example: *id271
        compression:
          type: string
          default: gzip
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the data before sending
          example: gzip
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id272 []
          items:
            type: string
            example: string
          example: *id272
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id273 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id273
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        url:
          type: string
          title: Cribl endpoint
          description: URL of a Cribl Worker to send events to, such as http://localhost:10200
          pattern: ^https?://.*
          example: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
          example: false
        urls:
          type: array
          title: Cribl Worker endpoints
          description: ""
          minItems: 1
          items:
            type: object
            required:
            - url
            properties:
              url:
                type: string
                title: Cribl Endpoint
                description: URL of a Cribl Worker to send events to, such as http://localhost:10200
                pattern: ^https?://.*
                example: string
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
                example: 1
            example:
              url: string
              weight: 1
          example:
          - url: string
            weight: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
          example: 600
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
          example: 300
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: cribl_http
        pipeline: string
        systemFields: *id269
        environment: string
        streamtags: *id270
        loadBalanced: true
        tls:
          disabled: true
          rejectUnauthorized: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        tokenTTLMinutes: 60
        excludeFields: *id271
        compression: gzip
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        failedRequestLoggingMode: none
        safeHeaders: *id272
        responseRetrySettings: *id273
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        description: string
        url: string
        useRoundRobinDns: false
        excludeSelf: false
        urls:
        - url: string
          weight: 1
        dnsResolvePeriodSec: 600
        loadBalanceStatsPeriodSec: 300
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputHumioHec:
      required:
      - format
      - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - humio_hec
          example: humio_hec
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id274
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id274
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id275 []
          items:
            type: string
            example: string
          example: *id275
        url:
          type: string
          title: LogScale endpoint
          description: "URL to a CrowdStrike Falcon LogScale endpoint to send events to. Examples: https://cloud.us.humio.com/api/v1/ingest/hec for JSON and https://cloud.us.humio.com/api/v1/ingest/hec/raw for raw"
          default: https://cloud.us.humio.com/api/v1/ingest/hec
          pattern: ^https?://.*
          example: https://cloud.us.humio.com/api/v1/ingest/hec
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 32768
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: true
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id276 []
          items:
            type: string
            example: string
          example: *id276
        format:
          title: Request format
          type: string
          enum:
          - JSON
          - raw
          default: JSON
          description: When set to JSON, the event is automatically formatted with required fields before sending. When set to Raw, only the event's `_raw` value is sent.
          example: JSON
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          example: manual
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id277 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id277
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        token:
          type: string
          title: LogScale auth token
          description: CrowdStrike Falcon LogScale authentication token
          example: string
        textSecret:
          type: string
          title: LogScale auth token (text secret)
          description: Select or create a stored text secret
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: humio_hec
        pipeline: string
        systemFields: *id274
        environment: string
        streamtags: *id275
        url: https://cloud.us.humio.com/api/v1/ingest/hec
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: true
        failedRequestLoggingMode: none
        safeHeaders: *id276
        format: JSON
        authType: manual
        responseRetrySettings: *id277
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        description: string
        token: string
        textSecret: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputCrowdstrikeNextGenSiem:
      required:
      - format
      - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - crowdstrike_next_gen_siem
          example: crowdstrike_next_gen_siem
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id278
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id278
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id279 []
          items:
            type: string
            example: string
          example: *id279
        url:
          type: string
          title: Next-Gen SIEM endpoint
          description: >-
            URL provided from a CrowdStrike data connector. 

            Example: https://ingest.<region>.crowdstrike.com/api/ingest/hec/<connection-id>/v1/services/collector
          pattern: ^https?://.*
          example: string
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 32768
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: true
          example: true
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id280 []
          items:
            type: string
            example: string
          example: *id280
        format:
          title: Request format
          type: string
          enum:
          - JSON
          - raw
          default: raw
          description: When set to JSON, the event is automatically formatted with required fields before sending. When set to Raw, only the event's `_raw` value is sent.
          example: raw
        authType:
          title: Authentication method
          type: string
          enum:
          - manual
          - secret
          default: manual
          description: Select Manual to enter an auth token directly, or select Secret to use a text secret to authenticate
          example: manual
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id281 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id281
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        token:
          type: string
          title: Next-Gen SIEM authentication token
          example: string
        textSecret:
          type: string
          title: Next-Gen SIEM authentication token (text secret)
          description: Select or create a stored text secret
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: crowdstrike_next_gen_siem
        pipeline: string
        systemFields: *id278
        environment: string
        streamtags: *id279
        url: string
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: true
        failedRequestLoggingMode: none
        safeHeaders: *id280
        format: raw
        authType: manual
        responseRetrySettings: *id281
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        description: string
        token: string
        textSecret: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputDlS3:
      required:
      - bucket
      - stagePath
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - dl_s3
          example: dl_s3
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id282
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id282
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id283 []
          items:
            type: string
            example: string
          example: *id283
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`"
          example: string
        region:
          type: string
          title: Region
          description: Region where the S3 bucket is located
          example: string
        awsSecretKey:
          type: string
          title: Secret key
          description: "Secret key. This value can be a constant or a JavaScript expression. Example: `${C.env.SOME_SECRET}`)"
          example: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        destPath:
          type: string
          title: Key prefix
          description: "Prefix to append to files before uploading. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at init time. Example referencing a Global Variable: `myKeyPrefix-${C.vars.myVar}`"
          default: ""
          example: ""
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
          - private
          - public-read
          - public-read-write
          - authenticated-read
          - aws-exec-read
          - bucket-owner-read
          - bucket-owner-full-control
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
          - STANDARD
          - REDUCED_REDUNDANCY
          - STANDARD_IA
          - ONEZONE_IA
          - INTELLIGENT_TIERING
          - GLACIER
          - GLACIER_IR
          - DEEP_ARCHIVE
          example: STANDARD
        serverSideEncryption:
          type: string
          title: Server-side encryption for uploaded objects
          enum:
          - AES256
          - aws:kms
          example: AES256
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
          example: string
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        format:
          type: string
          title: Data format
          description: Format of the output data
          enum:
          - json
          - raw
          - parquet
          default: json
          example: json
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
          example: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 32
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 100
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
          example: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 64
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
          example: false
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
          - block
          - drop
          default: block
          example: block
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
          example: 30
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts upload limit
          description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
          example: 4
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the bucket itself
          default: true
          example: true
        maxClosingFilesToBackpressure:
          type: number
          title: Staging file limit
          description: Maximum number of files that can be waiting for upload before backpressure is applied
          default: 100
          minimum: 10
          maximum: 4200
          example: 100
        partitioningFields:
          type: array
          title: Partition by fields
          description: List of fields to partition the path by, in addition to time, which is included automatically. The effective partition will be YYYY/MM/DD/HH/<list/of/fields>.
          default: &id284 []
          items:
            type: string
            example: string
          example: *id284
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: This value can be a constant or a JavaScript expression (`${C.env.SOME_ACCESS_KEY}`)
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        compress:
          type: string
          title: Compression
          description: Data compression format to apply to HTTP content before it is delivered
          enum:
          - none
          - gzip
          default: gzip
          example: gzip
        compressionLevel:
          type: string
          title: Compression level
          description: Compression level to apply before moving files to final destination
          enum:
          - best_speed
          - normal
          - best_compression
          default: best_speed
          example: best_speed
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
          example: false
        parquetVersion:
          type: string
          title: Parquet version
          enum:
          - PARQUET_1_0
          - PARQUET_2_4
          - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
          - DATA_PAGE_V1
          - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 10000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: ""
              value:
                type: string
                title: Value
                example: string
            example:
              key: ""
              value: string
          example:
          - key: ""
            value: string
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
          example: false
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
      type: object
      example:
        id: string
        type: dl_s3
        pipeline: string
        systemFields: *id282
        environment: string
        streamtags: *id283
        bucket: string
        region: string
        awsSecretKey: string
        awsAuthenticationMethod: auto
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        stagePath: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath: true
        destPath: ""
        objectACL: private
        storageClass: STANDARD
        serverSideEncryption: AES256
        kmsKeyId: string
        removeEmptyDirs: true
        format: json
        baseFileName: "`CriblOut`"
        fileNameSuffix: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB: 32
        maxOpenFiles: 100
        headerLine: ""
        writeHighWaterMark: 64
        onBackpressure: block
        deadletterEnabled: false
        onDiskFullBackpressure: block
        maxFileOpenTimeSec: 300
        maxFileIdleTimeSec: 30
        maxConcurrentFileParts: 4
        verifyPermissions: true
        maxClosingFilesToBackpressure: 100
        partitioningFields: *id284
        description: string
        awsApiKey: string
        awsSecret: string
        compress: gzip
        compressionLevel: best_speed
        automaticSchema: false
        parquetVersion: PARQUET_2_6
        parquetDataPageVersion: DATA_PAGE_V2
        parquetRowGroupLength: 10000
        parquetPageSize: 1MB
        shouldLogInvalidRows: true
        keyValueMetadata:
        - key: ""
          value: string
        enableStatistics: true
        enableWritePageIndex: true
        enablePageChecksum: false
        emptyDirCleanupSec: 300
        deadletterPath: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum: 20
    OutputSecurityLake:
      required:
      - bucket
      - stagePath
      - region
      - accountId
      - customSource
      - assumeRoleArn
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - security_lake
          example: security_lake
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards. These fields are added as dimensions and labels to generated metrics and logs, respectively.
          default: &id285
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id285
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id286 []
          items:
            type: string
            example: string
          example: *id286
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`"
          example: string
        region:
          type: string
          title: Region
          description: Region where the Amazon Security Lake is located.
          example: string
        awsSecretKey:
          type: string
          title: Secret key
          example: string
        awsAuthenticationMethod:
          type: string
          title: Authentication method
          description: AWS authentication method. Choose Auto to use IAM roles.
          default: auto
          enum:
          - auto
          - manual
          - secret
          example: auto
        endpoint:
          type: string
          title: Endpoint
          description: Amazon Security Lake service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to Amazon Security Lake-compatible endpoint.
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing Amazon Security Lake requests
          default: v4
          enum:
          - v2
          - v4
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          example: 3600
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          example: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          example: true
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
          - private
          - public-read
          - public-read-write
          - authenticated-read
          - aws-exec-read
          - bucket-owner-read
          - bucket-owner-full-control
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
          - STANDARD
          - REDUCED_REDUNDANCY
          - STANDARD_IA
          - ONEZONE_IA
          - INTELLIGENT_TIERING
          - GLACIER
          - GLACIER_IR
          - DEEP_ARCHIVE
          example: STANDARD
        serverSideEncryption:
          type: string
          title: Server-side encryption for uploaded objects
          enum:
          - AES256
          - aws:kms
          example: AES256
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
          example: string
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          example: true
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
          example: "`CriblOut`"
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          example: 32
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
          example: 100
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
          example: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          example: 64
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          default: block
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
          example: false
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
          - block
          - drop
          default: block
          example: block
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
          example: 30
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts upload limit
          description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
          default: 4
          minimum: 1
          maximum: 10
          example: 4
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the bucket itself
          default: true
          example: true
        maxClosingFilesToBackpressure:
          type: number
          title: Staging file limit
          description: Maximum number of files that can be waiting for upload before backpressure is applied
          default: 100
          minimum: 10
          maximum: 4200
          example: 100
        accountId:
          type: string
          title: Account ID
          description: ID of the AWS account whose data the Destination will write to Security Lake. This should have been configured when creating the Amazon Security Lake custom source.
          example: string
        customSource:
          type: string
          title: Custom source name
          description: Name of the custom source configured in Amazon Security Lake
          example: string
        automaticSchema:
          type: boolean
          title: Automatic schema
          default: false
          description: Automatically calculate the schema based on the events of each Parquet file generated
          example: false
        parquetVersion:
          type: string
          title: Parquet version
          enum:
          - PARQUET_1_0
          - PARQUET_2_4
          - PARQUET_2_6
          default: PARQUET_2_6
          description: Determines which data types are supported and how they are represented
          example: PARQUET_2_6
        parquetDataPageVersion:
          type: string
          title: Data page version
          enum:
          - DATA_PAGE_V1
          - DATA_PAGE_V2
          default: DATA_PAGE_V2
          description: Serialization format of data pages. Note that some reader implementations use Data page V2's attributes to work more efficiently, while others ignore it.
          example: DATA_PAGE_V2
        parquetRowGroupLength:
          type: number
          title: Group row limit
          description: The number of rows that every group will contain. The final group can contain a smaller number of rows.
          default: 10000
          minimum: 1
          maximum: 67108864
          example: 10000
        parquetPageSize:
          type: string
          title: Page size
          description: Target memory size for page segments, such as 1MB or 128MB. Generally, lower values improve reading speed, while higher values improve compression.
          pattern: ^\d+\s*(?:[kK][bB]|[mM][bB]|[gG][bB]|[tT][bB])?$
          default: 1MB
          example: 1MB
        shouldLogInvalidRows:
          type: boolean
          title: Log invalid rows
          description: Log up to 3 rows that @{product} skips due to data mismatch
          example: true
        keyValueMetadata:
          type: array
          title: Metadata (optional)
          description: 'The metadata of files the Destination writes will include the properties you add here as key-value pairs. Useful for tagging. Examples: "key":"OCSF Event Class", "value":"9001"'
          minItems: 0
          items:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: ""
              value:
                type: string
                title: Value
                example: string
            example:
              key: ""
              value: string
          example:
          - key: ""
            value: string
        enableStatistics:
          type: boolean
          title: Write statistics
          default: true
          description: Statistics profile an entire file in terms of minimum/maximum values within data, numbers of nulls, etc. You can use Parquet tools to view statistics.
          example: true
        enableWritePageIndex:
          type: boolean
          title: Write page indexes
          default: true
          description: One page index contains statistics for one data page. Parquet readers use statistics to enable page skipping.
          example: true
        enablePageChecksum:
          type: boolean
          title: Write page checksum
          default: false
          description: Parquet tools can use the checksum of a Parquet page to verify data integrity
          example: false
        description:
          type: string
          title: Description
          example: string
        awsApiKey:
          type: string
          title: Access key
          description: This value can be a constant or a JavaScript expression (`${C.env.SOME_ACCESS_KEY}`)
          example: string
        awsSecret:
          type: string
          title: Secret key pair
          description: Select or create a stored secret that references your access key and secret key
          example: string
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          example: 300
        parquetSchema:
          type: string
          title: Parquet schema
          description: To add a new schema, navigate to Processing > Knowledge > Parquet Schemas
          minLength: 1
          example: string
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          example: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
          example: 20
      type: object
      example:
        id: string
        type: security_lake
        pipeline: string
        systemFields: *id285
        environment: string
        streamtags: *id286
        bucket: string
        region: string
        awsSecretKey: string
        awsAuthenticationMethod: auto
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        stagePath: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath: true
        objectACL: private
        storageClass: STANDARD
        serverSideEncryption: AES256
        kmsKeyId: string
        removeEmptyDirs: true
        baseFileName: "`CriblOut`"
        maxFileSizeMB: 32
        maxOpenFiles: 100
        headerLine: ""
        writeHighWaterMark: 64
        onBackpressure: block
        deadletterEnabled: false
        onDiskFullBackpressure: block
        maxFileOpenTimeSec: 300
        maxFileIdleTimeSec: 30
        maxConcurrentFileParts: 4
        verifyPermissions: true
        maxClosingFilesToBackpressure: 100
        accountId: string
        customSource: string
        automaticSchema: false
        parquetVersion: PARQUET_2_6
        parquetDataPageVersion: DATA_PAGE_V2
        parquetRowGroupLength: 10000
        parquetPageSize: 1MB
        shouldLogInvalidRows: true
        keyValueMetadata:
        - key: ""
          value: string
        enableStatistics: true
        enableWritePageIndex: true
        enablePageChecksum: false
        description: string
        awsApiKey: string
        awsSecret: string
        emptyDirCleanupSec: 300
        parquetSchema: string
        deadletterPath: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum: 20
    OutputCriblLake:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: test_lake_output
        type:
          type: string
          enum:
          - cribl_lake
          example: cribl_lake
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          x-speakeasy-ignore: true
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id287
          - cribl_pipe
          items:
            type: string
            example: string
          x-speakeasy-ignore: true
          example: *id287
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          x-speakeasy-ignore: true
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id288 []
          items:
            type: string
            example: string
          x-speakeasy-ignore: true
          example: *id288
        bucket:
          type: string
          title: S3 bucket name
          description: "Name of the destination S3 bucket. Must be a JavaScript expression (which can evaluate to a constant value), enclosed in quotes or backticks. Can be evaluated only at initialization time. Example referencing a Global Variable: `myBucket-${C.vars.myVar}`"
          x-speakeasy-ignore: true
          example: string
        region:
          type: string
          title: Region
          description: Region where the S3 bucket is located
          x-speakeasy-ignore: true
          example: string
        awsSecretKey:
          type: string
          title: Secret key
          description: "Secret key. This value can be a constant or a JavaScript expression. Example: `${C.env.SOME_SECRET}`)"
          x-speakeasy-ignore: true
          example: string
        endpoint:
          type: string
          title: Endpoint
          description: S3 service endpoint. If empty, defaults to the AWS Region-specific endpoint. Otherwise, it must point to S3-compatible endpoint.
          x-speakeasy-ignore: true
          example: string
        signatureVersion:
          type: string
          title: Signature version
          description: Signature version to use for signing S3 requests
          default: v4
          enum:
          - v2
          - v4
          x-speakeasy-ignore: true
          example: v4
        reuseConnections:
          type: boolean
          title: Reuse connections
          description: Reuse connections between requests, which can improve performance
          default: true
          x-speakeasy-ignore: true
          example: true
        rejectUnauthorized:
          type: boolean
          title: Reject unauthorized certificates
          description: Reject certificates that cannot be verified against a valid CA, such as self-signed certificates
          default: true
          x-speakeasy-ignore: true
          example: true
        enableAssumeRole:
          type: boolean
          title: Enable for S3
          description: Use Assume Role credentials to access S3
          default: false
          x-speakeasy-ignore: true
          example: false
        assumeRoleArn:
          type: string
          title: AssumeRole ARN
          description: Amazon Resource Name (ARN) of the role to assume
          pattern: "^arn:"
          minLength: 20
          x-speakeasy-ignore: true
          example: string
        assumeRoleExternalId:
          type: string
          title: External ID
          description: External ID to use when assuming role
          x-speakeasy-ignore: true
          example: string
        durationSeconds:
          type: number
          title: Duration (seconds)
          description: Duration of the assumed role's session, in seconds. Minimum is 900 (15 minutes), default is 3600 (1 hour), and maximum is 43200 (12 hours).
          minimum: 900
          maximum: 43200
          default: 3600
          x-speakeasy-ignore: true
          example: 3600
        stagePath:
          type: string
          title: Staging location
          description: Filesystem location in which to buffer files, before compressing and moving to final destination. Use performant and stable storage.
          default: $CRIBL_HOME/state/outputs/staging
          x-speakeasy-ignore: true
          example: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath:
          type: boolean
          title: Add output ID
          description: Add the Output ID value to staging location
          default: true
          x-speakeasy-ignore: true
          example: true
        destPath:
          type: string
          title: Lake dataset
          description: Lake dataset to send the data to.
          example: test_lake_dataset
        objectACL:
          type: string
          title: Object ACL
          description: Object ACL to assign to uploaded objects
          default: private
          enum:
          - private
          - public-read
          - public-read-write
          - authenticated-read
          - aws-exec-read
          - bucket-owner-read
          - bucket-owner-full-control
          x-speakeasy-ignore: true
          example: private
        storageClass:
          type: string
          title: Storage class
          description: Storage class to select for uploaded objects
          enum:
          - STANDARD
          - REDUCED_REDUNDANCY
          - STANDARD_IA
          - ONEZONE_IA
          - INTELLIGENT_TIERING
          - GLACIER
          - GLACIER_IR
          - DEEP_ARCHIVE
          x-speakeasy-ignore: true
          example: STANDARD
        serverSideEncryption:
          type: string
          title: Server-side encryption for uploaded objects
          enum:
          - AES256
          - aws:kms
          x-speakeasy-ignore: true
          example: AES256
        kmsKeyId:
          type: string
          title: KMS key ID
          description: ID or ARN of the KMS customer-managed key to use for encryption
          x-speakeasy-ignore: true
          example: string
        removeEmptyDirs:
          type: boolean
          title: Remove empty staging directories
          description: Remove empty staging directories after moving files
          default: true
          x-speakeasy-ignore: true
          example: true
        baseFileName:
          type: string
          title: File name prefix expression
          description: JavaScript expression to define the output filename prefix (can be constant)
          default: "`CriblOut`"
          x-speakeasy-ignore: true
          example: "`CriblOut`"
        fileNameSuffix:
          type: string
          title: File name suffix expression
          description: JavaScript expression to define the output filename suffix (can be constant).  The `__format` variable refers to the value of the `Data format` field (`json` or `raw`).  The `__compression` field refers to the kind of compression being used (`none` or `gzip`).
          default: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
          x-speakeasy-ignore: true
          example: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB:
          type: number
          title: File size limit (MB)
          description: Maximum uncompressed output file size. Files of this size will be closed and moved to final output location.
          default: 32
          maximum: 1024
          minimum: 5
          x-speakeasy-ignore: true
          example: 32
        maxOpenFiles:
          type: number
          title: Open file limit
          description: Maximum number of files to keep open concurrently. When exceeded, @{product} will close the oldest open files and move them to the final output location.
          default: 100
          minimum: 10
          maximum: 2000
          x-speakeasy-ignore: true
          example: 100
        headerLine:
          type: string
          title: Header line
          description: If set, this line will be written to the beginning of each output file
          default: ""
          x-speakeasy-ignore: true
          example: ""
        writeHighWaterMark:
          type: number
          title: Writing high watermark (KB)
          description: Buffer size used to write to a file
          default: 64
          maximum: 4096
          minimum: 16
          x-speakeasy-ignore: true
          example: 64
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          default: block
          x-speakeasy-ignore: true
          example: block
        deadletterEnabled:
          type: boolean
          default: false
          title: Enable dead-lettering
          description: If a file fails to move to its final destination after the maximum number of retries, move it to a designated directory to prevent further errors
          x-speakeasy-ignore: true
          example: false
        onDiskFullBackpressure:
          type: string
          title: Disk space protection
          description: How to handle events when disk space is below the global 'Min free disk space' limit
          enum:
          - block
          - drop
          default: block
          x-speakeasy-ignore: true
          example: block
        maxFileOpenTimeSec:
          type: number
          title: File open time limit (sec)
          description: Maximum amount of time to write to a file. Files open for longer than this will be closed and moved to final output location.
          default: 300
          minimum: 10
          maximum: 86400
          x-speakeasy-ignore: true
          example: 300
        maxFileIdleTimeSec:
          type: number
          title: Idle time limit (sec)
          description: Maximum amount of time to keep inactive files open. Files open for longer than this will be closed and moved to final output location.
          default: 30
          minimum: 5
          maximum: 86400
          x-speakeasy-ignore: true
          example: 30
        verifyPermissions:
          type: boolean
          title: Verify if bucket exists
          description: Disable if you can access files within the bucket but not the bucket itself
          default: true
          x-speakeasy-ignore: true
          example: true
        maxClosingFilesToBackpressure:
          type: number
          title: Staging file limit
          description: Maximum number of files that can be waiting for upload before backpressure is applied
          default: 100
          minimum: 10
          maximum: 4200
          x-speakeasy-ignore: true
          example: 100
        awsAuthenticationMethod:
          type: string
          default: auto
          enum:
          - auto
          - auto_rpc
          - manual
          x-speakeasy-ignore: true
          example: auto
        format:
          type: string
          enum:
          - json
          - parquet
          - ddss
          x-speakeasy-ignore: true
          example: json
        maxConcurrentFileParts:
          type: number
          title: Concurrent file parts limit
          description: Maximum number of parts to upload in parallel per file. Minimum part size is 5MB.
          default: 1
          minimum: 1
          maximum: 10
          x-speakeasy-ignore: true
          example: 1
        description:
          type: string
          title: Description
          example: "Cribl Lake destination"
        emptyDirCleanupSec:
          type: number
          title: Staging cleanup period
          description: How frequently, in seconds, to clean up empty directories
          default: 300
          minimum: 10
          maximum: 86400
          x-speakeasy-ignore: true
          example: 300
        deadletterPath:
          type: string
          title: Dead-letter location
          description: Storage location for files that fail to reach their final destination after maximum retries are exceeded
          default: $CRIBL_HOME/state/outputs/dead-letter
          x-speakeasy-ignore: true
          example: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum:
          type: number
          title: Retry limit
          description: The maximum number of times a file will attempt to move to its final destination before being dead-lettered
          default: 20
          minimum: 1
          x-speakeasy-ignore: true
          example: 20
      type: object
      example:
        id: string
        type: cribl_lake
        pipeline: string
        systemFields: *id287
        environment: string
        streamtags: *id288
        bucket: string
        region: string
        awsSecretKey: string
        endpoint: string
        signatureVersion: v4
        reuseConnections: true
        rejectUnauthorized: true
        enableAssumeRole: false
        assumeRoleArn: string
        assumeRoleExternalId: string
        durationSeconds: 3600
        stagePath: $CRIBL_HOME/state/outputs/staging
        addIdToStagePath: true
        destPath: string
        objectACL: private
        storageClass: STANDARD
        serverSideEncryption: AES256
        kmsKeyId: string
        removeEmptyDirs: true
        baseFileName: "`CriblOut`"
        fileNameSuffix: '`.${C.env["CRIBL_WORKER_ID"]}.${__format}${__compression === "gzip" ? ".gz" : ""}`'
        maxFileSizeMB: 32
        maxOpenFiles: 100
        headerLine: ""
        writeHighWaterMark: 64
        onBackpressure: block
        deadletterEnabled: false
        onDiskFullBackpressure: block
        maxFileOpenTimeSec: 300
        maxFileIdleTimeSec: 30
        verifyPermissions: true
        maxClosingFilesToBackpressure: 100
        awsAuthenticationMethod: auto
        format: json
        maxConcurrentFileParts: 1
        description: string
        emptyDirCleanupSec: 300
        deadletterPath: $CRIBL_HOME/state/outputs/dead-letter
        maxRetryNum: 20
    OutputDiskSpool:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - disk_spool
          example: disk_spool
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id289
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id289
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id290 []
          items:
            type: string
            example: string
          example: *id290
        timeWindow:
          type: string
          title: Bucket time span
          description: Time period for grouping spooled events. Default is 10m.
          default: 10m
          example: 10m
        maxDataSize:
          type: string
          title: Data size limit
          description: "Maximum disk space that can be consumed before older buckets are deleted. Examples: 420MB, 4GB. Default is 1GB."
          pattern: ^\d+(\.\d+)?\s*(?:[kmgKMG](b|B))?$
          default: 1GB
          example: 1GB
        maxDataTime:
          title: Data age limit
          type: string
          description: "Maximum amount of time to retain data before older buckets are deleted. Examples: 2h, 4d. Default is 24h."
          pattern: \d+[smhd]$
          default: 24h
          example: 24h
        compress:
          type: string
          title: Compression
          description: Data compression format. Default is gzip.
          enum:
          - none
          - gzip
          default: gzip
          example: gzip
        partitionExpr:
          type: string
          title: Partitioning expression
          description: JavaScript expression defining how files are partitioned and organized within the time-buckets. If blank, the event's __partition property is used and otherwise, events go directly into the time-bucket directory.
          example: string
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: disk_spool
        pipeline: string
        systemFields: *id289
        environment: string
        streamtags: *id290
        timeWindow: 10m
        maxDataSize: 1GB
        maxDataTime: 24h
        compress: gzip
        partitionExpr: string
        description: string
    OutputClickHouse:
      required:
      - database
      - tableName
      - url
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - click_house
          example: click_house
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id291
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id291
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id292 []
          items:
            type: string
            example: string
          example: *id292
        url:
          type: string
          title: URL
          description: "URL of the ClickHouse instance. Example: http://localhost:8123/"
          example: string
        authType:
          type: string
          title: Authentication type
          description: ""
          enum:
          - none
          - basic
          - credentialsSecret
          - sslUserCertificate
          - token
          - textSecret
          - oauth
          default: none
          example: none
        database:
          type: string
          title: ClickHouse database
          example: string
        tableName:
          type: string
          title: ClickHouse table
          description: Name of the ClickHouse table where data will be inserted. Name can contain letters (A-Z, a-z), numbers (0-9), and the character "_", and must start with either a letter or the character "_".
          pattern: ^[a-zA-Z_][0-9a-zA-Z_]*$
          example: string
        format:
          type: string
          title: Format
          description: Data format to use when sending data to ClickHouse. Defaults to JSON Compact.
          enum:
          - json-compact-each-row-with-names
          - json-each-row
          default: json-compact-each-row-with-names
          example: json-compact-each-row-with-names
        mappingType:
          type: string
          title: Mapping type
          description: How event fields are mapped to ClickHouse columns.
          enum:
          - automatic
          - custom
          default: automatic
          example: automatic
        asyncInserts:
          type: boolean
          title: Async inserts
          description: Collect data into batches for later processing. Disable to write to a ClickHouse table immediately.
          default: false
          example: false
        tls:
          type: object
          title: TLS settings (client side)
          properties:
            disabled:
              type: boolean
              title: Disabled
              default: true
              example: true
            servername:
              type: string
              title: Server name (SNI)
              description: Server name for the SNI (Server Name Indication) TLS extension. It must be a host name, and not an IP address.
              example: string
            certificateName:
              type: string
              title: Certificate
              description: The name of the predefined certificate
              example: string
            caPath:
              type: string
              title: CA certificate path
              description: Path on client in which to find CA certificates to verify the server's cert. PEM format. Can reference $ENV_VARS.
              example: string
            privKeyPath:
              type: string
              title: Private key path (mutual auth)
              description: Path on client in which to find the private key to use. PEM format. Can reference $ENV_VARS.
              example: string
            certPath:
              type: string
              title: Certificate path (mutual auth)
              description: Path on client in which to find certificates to use. PEM format. Can reference $ENV_VARS.
              example: string
            passphrase:
              type: string
              title: Passphrase
              description: Passphrase to use to decrypt private key
              example: string
            minVersion:
              type: string
              title: Minimum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
            maxVersion:
              type: string
              title: Maximum TLS version
              enum:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
              - TLSv1.3
              example: TLSv1
          example:
            disabled: true
            servername: string
            certificateName: string
            caPath: string
            privKeyPath: string
            certPath: string
            passphrase: string
            minVersion: TLSv1
            maxVersion: TLSv1
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 10240
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id293 []
          items:
            type: string
            example: string
          example: *id293
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id294 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id294
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        dumpFormatErrorsToDisk:
          type: boolean
          title: Log last schema mismatch
          description: Log the most recent event that fails to match the table schema
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        username:
          type: string
          title: Username
          example: string
        password:
          type: string
          title: Password
          example: string
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: string
        credentialsSecret:
          type: string
          title: Credentials secret
          description: Select or create a secret that references your credentials
          example: string
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: string
        loginUrl:
          type: string
          title: Login URL
          description: URL for OAuth
          pattern: ^https?://.*
          example: string
        secretParamName:
          type: string
          title: OAuth Secret parameter name
          description: Secret parameter name to pass in request body
          example: string
        secret:
          type: string
          title: OAuth secret
          description: Secret parameter value to pass in request body
          example: string
        tokenAttributeName:
          type: string
          title: Token attribute name
          description: Name of the auth token attribute in the OAuth response. Can be top-level (e.g., 'token'); or nested, using a period (e.g., 'data.token').
          example: string
        authHeaderExpr:
          type: string
          title: Authorize expression
          description: "JavaScript expression to compute the Authorization header value to pass in requests. The value `${token}` is used to reference the token obtained from authentication, e.g.: `Bearer ${token}`."
          default: "`Bearer ${token}`"
          example: "`Bearer ${token}`"
        tokenTimeoutSecs:
          type: number
          title: Refresh interval (secs.)
          description: How often the OAuth token should be refreshed.
          minimum: 1
          maximum: 300000
          default: 3600
          example: 3600
        oauthParams:
          type: array
          title: OAuth parameters
          description: Additional parameters to send in the OAuth login request. @{product} will combine the secret with these parameters, and will send the URL-encoded result in a POST request to the endpoint specified in the 'Login URL'. We'll automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth parameter name
                example: string
              value:
                type: string
                title: Value
                description: OAuth parameter value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        oauthHeaders:
          type: array
          title: OAuth headers
          description: Additional headers to send in the OAuth login request. @{product} will automatically add the content-type header 'application/x-www-form-urlencoded' when sending this request.
          items:
            type: object
            required:
            - name
            - value
            properties:
              name:
                type: string
                title: Name
                description: OAuth header name
                example: string
              value:
                type: string
                title: Value
                description: OAuth header value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        sqlUsername:
          type: string
          title: Username
          description: Username for certificate authentication
          example: string
        waitForAsyncInserts:
          type: boolean
          title: Wait for async inserts
          description: Cribl will wait for confirmation that data has been fully inserted into the ClickHouse database before proceeding. Disabling this option can increase throughput, but Cribl won’t be able to verify data has been completely inserted.
          default: true
          example: true
        excludeMappingFields:
          type: array
          title: Exclude fields
          description: Fields to exclude from sending to ClickHouse
          minItems: 0
          default: &id295 []
          items:
            type: string
            minLength: 0
            example: string
          example: *id295
        describeTable:
          type: string
          title: Retrieve table columns
          description: Retrieves the table schema from ClickHouse and populates the Column Mapping table
          example: string
        columnMappings:
          type: array
          title: Column Mapping
          description: ""
          items:
            type: object
            required:
            - columnName
            - columnValueExpression
            properties:
              columnName:
                type: string
                title: Column name
                description: Name of the column in ClickHouse that will store field value
                example: string
              columnType:
                type: string
                title: Column type
                description: Type of the column in the ClickHouse database
                example: string
              columnValueExpression:
                type: string
                title: Column value
                description: JavaScript expression to compute value to be inserted into ClickHouse table
                example: string
            example:
              columnName: string
              columnType: string
              columnValueExpression: string
          example:
          - columnName: string
            columnType: string
            columnValueExpression: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: click_house
        pipeline: string
        systemFields: *id291
        environment: string
        streamtags: *id292
        url: string
        authType: none
        database: string
        tableName: string
        format: json-compact-each-row-with-names
        mappingType: automatic
        asyncInserts: false
        tls:
          disabled: true
          servername: string
          certificateName: string
          caPath: string
          privKeyPath: string
          certPath: string
          passphrase: string
          minVersion: TLSv1
          maxVersion: TLSv1
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id293
        responseRetrySettings: *id294
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        dumpFormatErrorsToDisk: false
        onBackpressure: block
        description: string
        username: string
        password: string
        token: string
        credentialsSecret: string
        textSecret: string
        loginUrl: string
        secretParamName: string
        secret: string
        tokenAttributeName: string
        authHeaderExpr: "`Bearer ${token}`"
        tokenTimeoutSecs: 3600
        oauthParams:
        - name: string
          value: string
        oauthHeaders:
        - name: string
          value: string
        sqlUsername: string
        waitForAsyncInserts: true
        excludeMappingFields: *id295
        describeTable: string
        columnMappings:
        - columnName: string
          columnType: string
          columnValueExpression: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputXsiam:
      required:
      - id
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - xsiam
          example: xsiam
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id296
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id296
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id297 []
          items:
            type: string
            example: string
          example: *id297
        loadBalanced:
          type: boolean
          title: Load balancing
          description: Enable for optimal performance. Even if you have one hostname, it can expand to multiple IPs. If disabled, consider enabling round-robin DNS.
          default: false
          example: false
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 10000
          minimum: 100
          maximum: 10000
          example: 10000
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          example: 0
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id298 []
          items:
            type: string
            example: string
          example: *id298
        authType:
          title: Authentication method
          type: string
          enum:
          - token
          - secret
          default: token
          description: Enter a token directly, or provide a secret referencing a token
          example: token
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id299 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id299
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        throttleRateReqPerSec:
          type: integer
          title: Throttle request rate limit
          description: Maximum number of requests to limit to per second
          maximum: 2000
          default: 400
          example: 400
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
          example: 123.45
        description:
          type: string
          title: Description
          example: string
        url:
          type: string
          title: XSIAM endpoint
          description: XSIAM endpoint URL to send events to, such as https://api-{tenant external URL}/logs/v1/event
          default: http://localhost:8088/logs/v1/event
          pattern: ^https?://.*
          example: http://localhost:8088/logs/v1/event
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        excludeSelf:
          type: boolean
          default: false
          title: Exclude current host IPs
          description: Exclude all IPs of the current host from the list of any resolved hostnames
          example: false
        urls:
          type: array
          title: XSIAM Endpoints
          description: ""
          minItems: 1
          items:
            type: object
            required:
            - url
            properties:
              url:
                example: string
              weight:
                type: number
                title: Load Weight
                description: Assign a weight (>0) to each endpoint to indicate its traffic-handling capability
                minimum: 0
                default: 1
                example: 1
            example:
              url: string
              weight: 1
          example:
          - url: string
            weight: 1
        dnsResolvePeriodSec:
          type: number
          default: 600
          minimum: 0
          maximum: 86400
          title: DNS resolution period (seconds)
          description: The interval in which to re-resolve any hostnames and pick up destinations from A records
          example: 600
        loadBalanceStatsPeriodSec:
          type: number
          default: 300
          minimum: 10
          title: Load balance stats period (seconds)
          description: How far back in time to keep traffic stats for load balancing purposes
          example: 300
        token:
          type: string
          title: Auth token
          description: XSIAM authentication token
          example: string
        textSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: xsiam
        pipeline: string
        systemFields: *id296
        environment: string
        streamtags: *id297
        loadBalanced: false
        concurrency: 5
        maxPayloadSizeKB: 10000
        maxPayloadEvents: 0
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        failedRequestLoggingMode: none
        safeHeaders: *id298
        authType: token
        responseRetrySettings: *id299
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        throttleRateReqPerSec: 400
        onBackpressure: block
        totalMemoryLimitKB: 123.45
        description: string
        url: http://localhost:8088/logs/v1/event
        useRoundRobinDns: false
        excludeSelf: false
        urls:
        - url: string
          weight: 1
        dnsResolvePeriodSec: 600
        loadBalanceStatsPeriodSec: 300
        token: string
        textSecret: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    OutputNetflow:
      required:
      - hosts
      - type
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - netflow
          example: netflow
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id300
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id300
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id301 []
          items:
            type: string
            example: string
          example: *id301
        hosts:
          type: array
          title: NetFlow Destinations
          description: One or more NetFlow destinations to forward events to
          minItems: 1
          items:
            type: object
            required:
            - host
            - port
            properties:
              host:
                type: string
                title: Address
                description: Destination host
                example: string
              port:
                type: number
                title: Port
                maximum: 65535
                description: Destination port, default is 2055
                default: 2055
                example: 2055
            example:
              host: string
              port: 2055
          example:
          - host: string
            port: 2055
        dnsResolvePeriodSec:
          type: number
          default: 0
          minimum: 0
          maximum: 86400
          title: DNS resolution period (sec)
          description: How often to resolve the destination hostname to an IP address. Ignored if all destinations are IP addresses. A value of 0 means every datagram sent will incur a DNS lookup.
          example: 0
        description:
          type: string
          title: Description
          example: string
      type: object
      example:
        id: string
        type: netflow
        pipeline: string
        systemFields: *id300
        environment: string
        streamtags: *id301
        hosts:
        - host: string
          port: 2055
        dnsResolvePeriodSec: 0
        description: string
    OutputDynatraceHttp:
      required:
      - format
      - endpoint
      - telemetryType
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - dynatrace_http
          example: dynatrace_http
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id302
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id302
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id303 []
          items:
            type: string
            example: string
          example: *id303
        method:
          type: string
          title: Method
          description: The method to use when sending events
          enum:
          - POST
          - PUT
          - PATCH
          default: POST
          example: POST
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
          example: true
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit (KB)
          description: Maximum size, in KB, of the request body
          default: 4096
          minimum: 1024
          maximum: 5000
          example: 4096
        maxPayloadEvents:
          type: number
          title: Events-per-request limit
          description: Maximum number of events to include in the request body. Default is 0 (unlimited).
          default: 0
          minimum: 0
          maximum: 50000
          example: 0
        compress:
          type: boolean
          default: true
          title: Compress
          description: Compress the payload body before sending
          example: true
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events. You can also add headers dynamically on a per-event basis in the __headers field, as explained in [Cribl Docs](https://docs.cribl.io/stream/destinations-webhook/#internal-fields).
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id304 []
          items:
            type: string
            example: string
          example: *id304
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id305 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id305
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        authType:
          type: string
          title: Authentication type
          enum:
          - token
          - textSecret
          default: token
          example: token
        format:
          type: string
          title: Format
          description: How to format events before sending. Defaults to JSON. Plaintext is not currently supported.
          enum:
          - json_array
          - plaintext
          default: json_array
          example: json_array
        endpoint:
          type: string
          title: Endpoint
          enum:
          - cloud
          - activeGate
          - manual
          default: cloud
          example: cloud
        telemetryType:
          type: string
          title: Telemetry type
          enum:
          - logs
          - metrics
          default: logs
          example: logs
        totalMemoryLimitKB:
          type: number
          title: Buffer memory limit (KB)
          description: Maximum total size of the batches waiting to be sent. If left blank, defaults to 5 times the max body size (if set). If 0, no limit is enforced.
          minimum: 0
          example: 123.45
        description:
          type: string
          title: Description
          example: string
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
        token:
          type: string
          title: Token
          description: Bearer token to include in the authorization header
          example: string
        textSecret:
          type: string
          title: Token (text secret)
          description: Select or create a stored text secret
          example: string
        environmentId:
          type: string
          title: Environment ID
          description: ID of the environment to send to
          example: string
        activeGateDomain:
          type: string
          description: ActiveGate domain with Log analytics collector module enabled. For example https://{activeGate-domain}:9999/e/{environment-id}/api/v2/logs/ingest.
          title: ActiveGate domain
          example: string
        url:
          title: URL
          type: string
          description: URL to send events to. Can be overwritten by an event's __url field.
          pattern: ^https?://.*
          example: string
      type: object
      example:
        id: string
        type: dynatrace_http
        pipeline: string
        systemFields: *id302
        environment: string
        streamtags: *id303
        method: POST
        keepAlive: true
        concurrency: 5
        maxPayloadSizeKB: 4096
        maxPayloadEvents: 0
        compress: true
        rejectUnauthorized: true
        timeoutSec: 30
        flushPeriodSec: 1
        extraHttpHeaders:
        - name: string
          value: string
        useRoundRobinDns: false
        failedRequestLoggingMode: none
        safeHeaders: *id304
        responseRetrySettings: *id305
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        onBackpressure: block
        authType: token
        format: json_array
        endpoint: cloud
        telemetryType: logs
        totalMemoryLimitKB: 123.45
        description: string
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
        token: string
        textSecret: string
        environmentId: string
        activeGateDomain: string
        url: string
    OutputDynatraceOtlp:
      required:
      - endpoint
      - endpointType
      - protocol
      - otlpVersion
      - tokenSecret
      properties:
        id:
          type: string
          title: Output ID
          description: Unique ID for this output
          example: string
        type:
          type: string
          enum:
          - dynatrace_otlp
          example: dynatrace_otlp
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to process data before sending out to this output
          example: string
        systemFields:
          type: array
          title: System fields
          description: Fields to automatically add to events, such as cribl_pipe. Supports wildcards.
          default: &id306
          - cribl_pipe
          items:
            type: string
            example: string
          example: *id306
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id307 []
          items:
            type: string
            example: string
          example: *id307
        protocol:
          type: string
          title: Protocol
          description: Select a transport option for Dynatrace
          enum:
          - http
          default: http
          example: http
        endpoint:
          type: string
          title: Endpoint
          description: The endpoint where Dynatrace events will be sent. Enter any valid URL or an IP address (IPv4 or IPv6; enclose IPv6 addresses in square brackets)
          default: https://{your-environment-id}.live.dynatrace.com/api/v2/otlp
          example: https://{your-environment-id}.live.dynatrace.com/api/v2/otlp
        otlpVersion:
          type: string
          title: OTLP version
          description: The version of OTLP Protobuf definitions to use when structuring data to send
          enum:
          - 1.3.1
          default: 1.3.1
          example: 1.3.1
        compress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
          enum:
          - none
          - deflate
          - gzip
          default: gzip
          example: gzip
        httpCompress:
          type: string
          title: Compression
          description: Type of compression to apply to messages sent to the OpenTelemetry endpoint
          enum:
          - none
          - gzip
          default: gzip
          example: gzip
        httpTracesEndpointOverride:
          type: string
          title: Traces endpoint override
          description: If you want to send traces to the default `{endpoint}/v1/traces` endpoint, leave this field empty; otherwise, specify the desired endpoint
          example: string
        httpMetricsEndpointOverride:
          type: string
          title: Metrics endpoint override
          description: If you want to send metrics to the default `{endpoint}/v1/metrics` endpoint, leave this field empty; otherwise, specify the desired endpoint
          example: string
        httpLogsEndpointOverride:
          type: string
          title: Logs endpoint override
          description: If you want to send logs to the default `{endpoint}/v1/logs` endpoint, leave this field empty; otherwise, specify the desired endpoint
          example: string
        metadata:
          type: array
          title: Metadata
          description: List of key-value pairs to send with each gRPC request. Value supports JavaScript expressions that are evaluated just once, when the destination gets started. To pass credentials as metadata, use 'C.Secret'.
          minItems: 0
          items:
            type: object
            required:
            - key
            - value
            properties:
              key:
                type: string
                title: Key
                default: ""
                example: ""
              value:
                type: string
                title: Value
                example: string
            example:
              key: ""
              value: string
          example:
          - key: ""
            value: string
        concurrency:
          type: number
          title: Request concurrency
          description: Maximum number of ongoing requests before blocking
          default: 5
          minimum: 1
          maximum: 32
          example: 5
        maxPayloadSizeKB:
          type: number
          title: Body size limit
          description: Maximum size (in KB) of the request body. The maximum payload size is 4 MB. If this limit is exceeded, the entire OTLP message is dropped
          default: 2048
          minimum: 1024
          maximum: 4096
          example: 2048
        timeoutSec:
          type: number
          default: 30
          minimum: 1
          maximum: 9007199254740991
          title: Request timeout
          description: Amount of time, in seconds, to wait for a request to complete before canceling it
          example: 30
        flushPeriodSec:
          type: number
          default: 1
          title: Flush period (sec)
          description: Maximum time between requests. Small values could cause the payload size to be smaller than the configured Body size limit.
          example: 1
        failedRequestLoggingMode:
          type: string
          title: Failed request logging mode
          description: Data to log when a request fails. All headers are redacted by default, unless listed as safe headers below.
          enum:
          - payload
          - payloadAndHeaders
          - none
          default: none
          example: none
        connectionTimeout:
          type: number
          title: Connection timeout
          description: Amount of time (milliseconds) to wait for the connection to establish before retrying
          default: 10000
          example: 10000
        keepAliveTime:
          type: number
          title: Keep alive time (seconds)
          description: How often the sender should ping the peer to keep the connection open
          minimum: 1
          default: 30
          example: 30
        keepAlive:
          type: boolean
          title: Keep alive
          description: Disable to close the connection immediately after sending the outgoing request
          default: true
          example: true
        endpointType:
          type: string
          title: Endpoint type
          description: Select the type of Dynatrace endpoint configured
          enum:
          - saas
          - ag
          default: saas
          example: saas
        tokenSecret:
          type: string
          title: Auth token (text secret)
          description: Select or create a stored text secret
          example: string
        authTokenName:
          type: string
          title: Api-Token name
          default: Authorization
          example: Authorization
        onBackpressure:
          type: string
          title: Backpressure behavior
          description: How to handle events when all receivers are exerting backpressure
          enum:
          - block
          - drop
          - queue
          default: block
          example: block
        description:
          type: string
          title: Description
          example: string
        rejectUnauthorized:
          type: boolean
          default: true
          title: Validate server certs
          description: >-
            Reject certificates not authorized by a CA in the CA certificate
            path or by another trusted CA (such as the system's). 
                    Enabled by default. When this setting is also present in TLS Settings (Client Side), 
                    that value will take precedence.
          example: true
        useRoundRobinDns:
          type: boolean
          title: Round-robin DNS
          description: Enable round-robin DNS lookup. When a DNS server returns multiple addresses, @{product} will cycle through them in the order returned. For optimal performance, consider enabling this setting for non-load balanced destinations.
          default: false
          example: false
        extraHttpHeaders:
          type: array
          title: Extra HTTP headers
          description: Headers to add to all events
          items:
            type: object
            required:
            - value
            properties:
              name:
                type: string
                title: Field Name
                example: string
              value:
                type: string
                title: Field Value
                example: string
            example:
              name: string
              value: string
          example:
          - name: string
            value: string
        safeHeaders:
          type: array
          title: Safe headers
          description: List of headers that are safe to log in plain text
          default: &id308 []
          items:
            type: string
            example: string
          example: *id308
        responseRetrySettings:
          type: array
          title: Settings for failed HTTP requests
          description: Automatically retry after unsuccessful response status codes, such as 429 (Too Many Requests) or 503 (Service Unavailable)
          minItems: 0
          default: &id309 []
          items:
            type: object
            required:
            - httpStatus
            properties:
              httpStatus:
                type: number
                title: HTTP status code
                description: The HTTP response status code that will trigger retries
                minimum: 100
                maximum: 599
                example: 123.45
              initialBackoff:
                type: number
                title: Pre-backoff interval (ms)
                description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
                minimum: 0
                maximum: 600000
                default: 1000
                example: 1000
              backoffRate:
                type: number
                title: Backoff multiplier
                description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
                minimum: 1
                maximum: 20
                default: 2
                example: 2
              maxBackoff:
                type: number
                title: Backoff limit (ms)
                description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
                minimum: 10000
                maximum: 180000
                default: 10000
                example: 10000
            example:
              httpStatus: 123.45
              initialBackoff: 1000
              backoffRate: 2
              maxBackoff: 10000
          example: *id309
        timeoutRetrySettings:
          type: object
          required:
          - timeoutRetry
          properties:
            timeoutRetry:
              type: boolean
              title: Retry timed-out HTTP requests
              default: false
              example: false
            initialBackoff:
              type: number
              title: Pre-backoff interval (ms)
              description: How long, in milliseconds, Cribl Stream should wait before initiating backoff. Maximum interval is 600,000 ms (10 minutes).
              minimum: 0
              maximum: 600000
              default: 1000
              example: 1000
            backoffRate:
              type: number
              title: Backoff multiplier
              description: Base for exponential backoff. A value of 2 (default) means Cribl Stream will retry after 2 seconds, then 4 seconds, then 8 seconds, etc.
              minimum: 1
              maximum: 20
              default: 2
              example: 2
            maxBackoff:
              type: number
              title: Backoff limit (ms)
              description: The maximum backoff interval, in milliseconds, Cribl Stream should apply. Default (and minimum) is 10,000 ms (10 seconds); maximum is 180,000 ms (180 seconds).
              minimum: 10000
              maximum: 180000
              default: 10000
              example: 10000
          example:
            timeoutRetry: false
            initialBackoff: 1000
            backoffRate: 2
            maxBackoff: 10000
        responseHonorRetryAfterHeader:
          type: boolean
          title: Honor Retry-After header
          description: Honor any Retry-After header that specifies a delay (in seconds) no longer than 180 seconds after the retry request. @{product} limits the delay to 180 seconds, even if the Retry-After header specifies a longer delay. When enabled, takes precedence over user-configured retry options. When disabled, all Retry-After headers are ignored.
          default: false
          example: false
        pqMaxFileSize:
          type: string
          title: File size limit
          description: The maximum size to store in each queue file before closing and optionally compressing (KB, MB, etc.)
          pattern: ^\d+\s*(?:\w{2})?$
          default: 1 MB
          example: 1 MB
        pqMaxSize:
          type: string
          title: Queue size limit
          description: The maximum disk space that the queue can consume (as an average per Worker Process) before queueing stops. Enter a numeral with units of KB, MB, etc.
          pattern: ^\d+\s*(?:\w{2})?$
          default: 5GB
          example: 5GB
        pqPath:
          type: string
          default: $CRIBL_HOME/state/queues
          title: Queue file path
          description: "The location for the persistent queue files. To this field's value, the system will append: /<worker-id>/<output-id>."
          example: $CRIBL_HOME/state/queues
        pqCompress:
          type: string
          default: none
          enum:
          - none
          - gzip
          title: Compression
          description: Codec to use to compress the persisted data
          example: none
        pqOnBackpressure:
          type: string
          default: block
          enum:
          - block
          - drop
          title: Queue-full behavior
          description: How to handle events when the queue is exerting backpressure (full capacity or low disk). 'Block' is the same behavior as non-PQ blocking. 'Drop new data' throws away incoming data, while leaving the contents of the PQ unchanged.
          example: block
        pqMode:
          title: Mode
          description: In Error mode, PQ writes events to the filesystem if the Destination is unavailable. In Backpressure mode, PQ writes events to the filesystem when it detects backpressure from the Destination. In Always On mode, PQ always writes events to the filesystem.
          type: string
          default: error
          enum:
          - error
          - backpressure
          - always
          example: error
        pqControls:
          type: object
          title: ""
          example: {}
      type: object
      example:
        id: string
        type: dynatrace_otlp
        pipeline: string
        systemFields: *id306
        environment: string
        streamtags: *id307
        protocol: http
        endpoint: https://{your-environment-id}.live.dynatrace.com/api/v2/otlp
        otlpVersion: 1.3.1
        compress: gzip
        httpCompress: gzip
        httpTracesEndpointOverride: string
        httpMetricsEndpointOverride: string
        httpLogsEndpointOverride: string
        metadata:
        - key: ""
          value: string
        concurrency: 5
        maxPayloadSizeKB: 2048
        timeoutSec: 30
        flushPeriodSec: 1
        failedRequestLoggingMode: none
        connectionTimeout: 10000
        keepAliveTime: 30
        keepAlive: true
        endpointType: saas
        tokenSecret: string
        authTokenName: Authorization
        onBackpressure: block
        description: string
        rejectUnauthorized: true
        useRoundRobinDns: false
        extraHttpHeaders:
        - name: string
          value: string
        safeHeaders: *id308
        responseRetrySettings: *id309
        timeoutRetrySettings:
          timeoutRetry: false
          initialBackoff: 1000
          backoffRate: 2
          maxBackoff: 10000
        responseHonorRetryAfterHeader: false
        pqMaxFileSize: 1 MB
        pqMaxSize: 5GB
        pqPath: $CRIBL_HOME/state/queues
        pqCompress: none
        pqOnBackpressure: block
        pqMode: error
        pqControls: {}
    Output:
      oneOf:
      - $ref: "#/components/schemas/OutputDefault"
      - $ref: "#/components/schemas/OutputWebhook"
      - $ref: "#/components/schemas/OutputSentinel"
      - $ref: "#/components/schemas/OutputDevnull"
      - $ref: "#/components/schemas/OutputSyslog"
      - $ref: "#/components/schemas/OutputSplunk"
      - $ref: "#/components/schemas/OutputSplunkLb"
      - $ref: "#/components/schemas/OutputSplunkHec"
      - $ref: "#/components/schemas/OutputTcpjson"
      - $ref: "#/components/schemas/OutputWavefront"
      - $ref: "#/components/schemas/OutputSignalfx"
      - $ref: "#/components/schemas/OutputFilesystem"
      - $ref: "#/components/schemas/OutputS3"
      - $ref: "#/components/schemas/OutputAzureBlob"
      - $ref: "#/components/schemas/OutputAzureDataExplorer"
      - $ref: "#/components/schemas/OutputAzureLogs"
      - $ref: "#/components/schemas/OutputKinesis"
      - $ref: "#/components/schemas/OutputHoneycomb"
      - $ref: "#/components/schemas/OutputAzureEventhub"
      - $ref: "#/components/schemas/OutputGoogleChronicle"
      - $ref: "#/components/schemas/OutputGoogleCloudStorage"
      - $ref: "#/components/schemas/OutputGoogleCloudLogging"
      - $ref: "#/components/schemas/OutputGooglePubsub"
      - $ref: "#/components/schemas/OutputExabeam"
      - $ref: "#/components/schemas/OutputKafka"
      - $ref: "#/components/schemas/OutputConfluentCloud"
      - $ref: "#/components/schemas/OutputMsk"
      - $ref: "#/components/schemas/OutputElastic"
      - $ref: "#/components/schemas/OutputElasticCloud"
      - $ref: "#/components/schemas/OutputNewrelic"
      - $ref: "#/components/schemas/OutputNewrelicEvents"
      - $ref: "#/components/schemas/OutputInfluxdb"
      - $ref: "#/components/schemas/OutputCloudwatch"
      - $ref: "#/components/schemas/OutputMinio"
      - $ref: "#/components/schemas/OutputStatsd"
      - $ref: "#/components/schemas/OutputStatsdExt"
      - $ref: "#/components/schemas/OutputGraphite"
      - $ref: "#/components/schemas/OutputRouter"
      - $ref: "#/components/schemas/OutputSns"
      - $ref: "#/components/schemas/OutputSqs"
      - $ref: "#/components/schemas/OutputSnmp"
      - $ref: "#/components/schemas/OutputSumoLogic"
      - $ref: "#/components/schemas/OutputDatadog"
      - $ref: "#/components/schemas/OutputGrafanaCloud"
      - $ref: "#/components/schemas/OutputLoki"
      - $ref: "#/components/schemas/OutputPrometheus"
      - $ref: "#/components/schemas/OutputRing"
      - $ref: "#/components/schemas/OutputOpenTelemetry"
      - $ref: "#/components/schemas/OutputServiceNow"
      - $ref: "#/components/schemas/OutputDataset"
      - $ref: "#/components/schemas/OutputCriblTcp"
      - $ref: "#/components/schemas/OutputCriblHttp"
      - $ref: "#/components/schemas/OutputHumioHec"
      - $ref: "#/components/schemas/OutputCrowdstrikeNextGenSiem"
      - $ref: "#/components/schemas/OutputDlS3"
      - $ref: "#/components/schemas/OutputSecurityLake"
      - $ref: "#/components/schemas/OutputCriblLake"
      - $ref: "#/components/schemas/OutputDiskSpool"
      - $ref: "#/components/schemas/OutputClickHouse"
      - $ref: "#/components/schemas/OutputXsiam"
      - $ref: "#/components/schemas/OutputNetflow"
      - $ref: "#/components/schemas/OutputDynatraceHttp"
      - $ref: "#/components/schemas/OutputDynatraceOtlp"
    OutputSamplesResponse:
      type: object
      properties:
        events:
          type: array
          items:
            type: object
            additionalProperties: true
            example:
              additionalProp1: string
          example:
          - additionalProp1: string
      required:
      - events
      example:
        events:
        - additionalProp1: string
    OutputTestResponse:
      type: object
      properties:
        details:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        error:
          type: string
          example: string
        outputId:
          type: string
          example: string
        success:
          type: boolean
          example: true
        successDetail:
          type: string
          example: string
      required:
      - outputId
      - success
      example:
        details:
          additionalProp1: string
        error: string
        outputId: string
        success: true
        successDetail: string
    CriblEvent:
      type: object
      properties:
        _raw:
          type: string
          example: string
      required:
      - _raw
      example:
        _raw: string
    OutputTestRequest:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/CriblEvent"
          example:
          - 
      required:
      - events
      example:
        events:
        - 
    SchemaLibEntry:
      type: object
      required:
      - id
      - schema
      properties:
        id:
          type: string
          title: ID
          example: string
        description:
          type: string
          title: Description
          example: string
        schema:
          type: string
          title: Schema
          description: JSON schema matching standards of draft version 2019-09
          example: string
      example:
        id: string
        description: string
        schema: string
    PipelineFunctionConf:
      type: object
      required:
      - id
      - conf
      additionalProperties: false
      properties:
        filter:
          title: Filter
          description: Filter that selects data to be fed through this Function
          type: string
          default: "true"
          example: "true"
        id:
          title: ID
          description: Function ID
          type: string
          example: string
        description:
          title: Description
          description: Simple description of this step
          type: string
          example: string
        disabled:
          title: Disabled
          description: If true, data will not be pushed through this function
          type: boolean
          example: true
        final:
          title: Final
          description: If enabled, stops the results of this Function from being passed to the downstream Functions
          type: boolean
          example: true
        conf:
          type: object
          title: Function-specific configs
          additionalProperties: true
          example:
            additionalProp1: string
        groupId:
          title: Group ID
          description: Group ID
          type: string
          example: string
      example:
        filter: "true"
        id: string
        description: string
        disabled: true
        final: true
        conf:
          additionalProp1: string
        groupId: string
    Pipeline:
      title: Pipeline Settings
      type: object
      required:
      - conf
      - id
      properties:
        id:
          title: ID
          type: string
          example: string
        conf:
          type: object
          additionalProperties: false
          properties:
            asyncFuncTimeout:
              type: integer
              title: Async function timeout (ms)
              description: Time (in ms) to wait for an async function to complete processing of a data item
              minimum: 0
              maximum: 10000
              example: 123
            output:
              type: string
              title: Output event destination
              description: The output destination for events processed by this Pipeline
              default: default
              example: default
            description:
              title: Description
              type: string
              example: string
            streamtags:
              type: array
              title: Tags
              description: Tags for filtering and grouping in @{product}
              default: &id310 []
              items:
                type: string
                example: string
              example: *id310
            functions:
              title: Functions
              description: List of Functions to pass data through
              type: array
              items:
                $ref: "#/components/schemas/PipelineFunctionConf"
              example:
              - 
            groups:
              type: object
              additionalProperties:
                type: object
                required:
                - name
                properties:
                  name:
                    type: string
                    title: Group Name
                    example: string
                  description:
                    type: string
                    title: Description
                    description: Short description of this group
                    example: string
                  disabled:
                    type: boolean
                    title: Disabled
                    description: Whether this group is disabled
                    example: true
                example:
                  name: string
                  description: string
                  disabled: true
              example:
                additionalProp1:
                  name: string
                  description: string
                  disabled: true
          example:
            asyncFuncTimeout: 123
            output: default
            description: string
            streamtags: *id310
            functions:
            - 
            groups:
              additionalProp1:
                name: string
                description: string
                disabled: true
      example:
        id: string
        conf:
          asyncFuncTimeout: 123
          output: default
          description: string
          streamtags: *id310
          functions:
          - 
          groups:
            additionalProp1:
              name: string
              description: string
              disabled: true
    ProfilerItem:
      type: object
      properties:
        createTime:
          type: number
          example: 123.45
        id:
          type: string
          example: string
        size:
          type: number
          example: 123.45
        workerId:
          type: string
          example: string
      required:
      - id
      example:
        createTime: 123.45
        id: string
        size: 123.45
        workerId: string
    RoutesRoute:
      type: object
      additionalProperties: true
      required:
      - pipeline
      - name
      properties:
        id:
          type: string
          title: Route ID
          readOnly: true
          example: string
        name:
          type: string
          title: Route name
          example: string
        disabled:
          type: boolean
          title: Disabled
          description: Disable this routing rule
          example: true
        filter:
          type: string
          title: Filter
          description: JavaScript expression to select data to route
          default: "true"
          example: "true"
        pipeline:
          type: string
          title: Pipeline
          description: Pipeline to send the matching data to
          example: string
        enableOutputExpression:
          type: boolean
          title: Enable expression
          description: Enable to use a JavaScript expression that evaluates to the name of the Description below
          default: false
          example: false
        output:
          example: string
        outputExpression:
          example: string
        description:
          type: string
          title: Description
          example: string
        final:
          title: Final
          description: Flag to control whether the event gets consumed by this Route (Final), or cloned into it
          type: boolean
          default: true
          example: true
      example:
        id: string
        name: string
        disabled: true
        filter: "true"
        pipeline: string
        enableOutputExpression: false
        output: string
        outputExpression: string
        description: string
        final: true
        additionalProp1: string
    Routes:
      type: object
      additionalProperties: false
      required:
      - routes
      properties:
        id:
          type: string
          title: ID
          description: Routes ID
          example: string
        routes:
          type: array
          title: Route
          description: Pipeline routing rules
          items:
            $ref: "#/components/schemas/RoutesRoute"
          example:
          - 
        groups:
          type: object
          additionalProperties:
            type: object
            required:
            - name
            properties:
              name:
                type: string
                title: Group Name
                example: string
              description:
                type: string
                title: Description
                description: Short description of this group
                example: string
              disabled:
                type: boolean
                title: Disabled
                description: Whether this group is disabled
                example: true
            example:
              name: string
              description: string
              disabled: true
          example:
            additionalProp1:
              name: string
              description: string
              disabled: true
        comments:
          type: array
          title: Comments
          description: Comments
          items:
            type: object
            properties:
              comment:
                type: string
                title: Comment
                description: Optional, short description of this Route's purpose
                example: string
            additionalProperties: true
            example:
              comment: string
              additionalProp1: string
          example:
          - comment: string
            additionalProp1: string
      example:
        id: string
        routes:
        - 
        groups:
          additionalProp1:
            name: string
            description: string
            disabled: true
        comments:
        - comment: string
          additionalProp1: string
    RouteCloneConf:
      type: object
      example: {}
    RouteConf:
      type: object
      properties:
        clones:
          type: array
          items:
            $ref: "#/components/schemas/RouteCloneConf"
          example:
          - 
        context:
          type: string
          example: string
        description:
          type: string
          example: string
        disabled:
          type: boolean
          example: true
        enableOutputExpression:
          type: boolean
          example: true
        filter:
          type: string
          example: string
        final:
          type: boolean
          example: true
        groupId:
          type: string
          example: string
        id:
          type: string
          example: string
        name:
          type: string
          example: string
        output:
          type: string
          example: string
        outputExpression:
          type: string
          example: string
        pipeline:
          type: string
          example: string
      required:
      - final
      - id
      - name
      - pipeline
      example:
        clones:
        - 
        context: string
        description: string
        disabled: true
        enableOutputExpression: true
        filter: string
        final: true
        groupId: string
        id: string
        name: string
        output: string
        outputExpression: string
        pipeline: string
    RouteDefinitions:
      type: array
      items:
        $ref: "#/components/schemas/RouteConf"
      example:
      - 
    SecretType:
      type: string
      enum:
      - text
      - keypair
      - credentials
      example: text
    RestSecret:
      type: object
      properties:
        apiKey:
          type: string
          example: string
        description:
          type: string
          example: string
        id:
          type: string
          example: string
        password:
          type: string
          example: string
        secretKey:
          type: string
          example: string
        secretType:
          $ref: "#/components/schemas/SecretType"
        tags:
          type: string
          example: string
        username:
          type: string
          example: string
        value:
          type: string
          example: string
      required:
      - id
      - secretType
      example:
        apiKey: string
        description: string
        id: string
        password: string
        secretKey: string
        tags: string
        username: string
        value: string
    InputStatus:
      type: object
      properties:
        id:
          type: string
          example: string
        status:
          type: object
          properties:
            health:
              type: string
              enum:
              - Green
              - Yellow
              - Red
              example: Green
            metrics:
              type: object
              additionalProperties: true
              example:
                additionalProp1: string
            timestamp:
              type: number
              example: 123.45
            useStatusFromLB:
              type: boolean
              example: true
          required:
          - health
          - metrics
          - timestamp
          example:
            health: Green
            metrics:
              additionalProp1: string
            timestamp: 123.45
            useStatusFromLB: true
      required:
      - id
      - status
      example:
        id: string
        status:
          health: Green
          metrics:
            additionalProp1: string
          timestamp: 123.45
          useStatusFromLB: true
    OutputStatus:
      type: object
      properties:
        id:
          type: string
          example: string
        status:
          type: object
          properties:
            health:
              type: string
              enum:
              - Green
              - Yellow
              - Red
              example: Green
            metrics:
              type: object
              additionalProperties: true
              example:
                additionalProp1: string
            timestamp:
              type: number
              example: 123.45
            useStatusFromLB:
              type: boolean
              example: true
          required:
          - health
          - metrics
          - timestamp
          example:
            health: Green
            metrics:
              additionalProp1: string
            timestamp: 123.45
            useStatusFromLB: true
      required:
      - id
      - status
      example:
        id: string
        status:
          health: Green
          metrics:
            additionalProp1: string
          timestamp: 123.45
          useStatusFromLB: true
    AppScopeProcessingStatus:
      type: string
      nullable: true
      enum:
      - normal
      - attaching
      - attach_failed
      - updating
      - update_failed
      - detaching
      - detached
      - detach_failed
      example: normal
    AppScopeProcessStatus:
      type: string
      nullable: true
      enum:
      - green
      - yellow
      - red
      example: green
    AppScopeProcess:
      type: object
      properties:
        cfg:
          $ref: "#/components/schemas/AppscopeConfigWithCustom"
        config_id:
          type: string
          example: string
        id:
          type: string
          example: string
        interfaces:
          type: array
          items:
            type: object
            properties:
              config:
                type: string
                example: string
              connected:
                type: boolean
                example: true
              name:
                type: string
                example: string
            example:
              config: string
              connected: true
              name: string
          example:
          - config: string
            connected: true
            name: string
        lastError:
          type: string
          example: string
        process:
          type: object
          properties:
            hostPid:
              type: number
              example: 123.45
            id:
              type: string
              example: string
            machine_id:
              type: string
              example: string
            pid:
              type: number
              example: 123.45
            uuid:
              type: string
              example: string
          required:
          - pid
          example:
            hostPid: 123.45
            id: string
            machine_id: string
            pid: 123.45
            uuid: string
        processingStatus:
          $ref: "#/components/schemas/AppScopeProcessingStatus"
        source_id:
          type: string
          example: string
        status:
          $ref: "#/components/schemas/AppScopeProcessStatus"
      required:
      - id
      example:
        config_id: string
        id: string
        interfaces:
        - config: string
          connected: true
          name: string
        lastError: string
        process:
          hostPid: 123.45
          id: string
          machine_id: string
          pid: 123.45
          uuid: string
        source_id: string
    EdgeFileInspectResponse:
      type: object
      example: {}
    SymLinkInfo:
      type: object
      properties:
        symLinkTarget:
          type: string
          example: string
        symLinkTargetAbsolutePath:
          type: string
          example: string
        symLinkTargetIsDirectory:
          type: boolean
          example: true
        symLinkTargetIsFile:
          type: boolean
          example: true
      required:
      - symLinkTarget
      - symLinkTargetAbsolutePath
      example:
        symLinkTarget: string
        symLinkTargetAbsolutePath: string
        symLinkTargetIsDirectory: true
        symLinkTargetIsFile: true
    FilesystemEntry:
      type: object
      properties:
        mode:
          type: string
          example: string
        name:
          type: string
          example: string
        stats:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        symLinkInfo:
          $ref: "#/components/schemas/SymLinkInfo"
        type:
          type: string
          example: string
      required:
      - name
      - type
      example:
        mode: string
        name: string
        stats:
          additionalProp1: string
        type: string
    EdgeMapQueryResult:
      type: object
      properties:
        __worker_info:
          type: object
          properties:
            hostname:
              type: string
              example: string
          required:
          - hostname
          example:
            hostname: string
        __worker_node:
          type: string
          example: string
      required:
      - __worker_info
      - __worker_node
      example:
        __worker_info:
          hostname: string
        __worker_node: string
    AwsMetadata:
      type: object
      properties:
        hostname:
          type: string
          example: string
        identity:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        public_ipv4:
          type: string
          example: string
        roles:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        security_groups:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        tags:
          type: object
          example: {}
        version:
          type: number
          example: 123.45
      required:
      - version
      example:
        hostname: string
        identity:
          additionalProp1: string
        public_ipv4: string
        roles:
        - string
        security_groups:
        - string
        tags: {}
        version: 123.45
    CriblMetadata:
      type: object
      properties:
        config_version:
          type: string
          example: string
        group:
          type: string
          example: string
        install_type:
          type: string
          example: string
        mode:
          type: string
          example: string
        tags:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        version:
          type: string
          example: string
      required:
      - mode
      - version
      example:
        config_version: string
        group: string
        install_type: string
        mode: string
        tags:
        - string
        version: string
    EnvMetadata:
      type: object
      example: {}
    NetworkInterfaces:
      type: object
      example: {}
    OsMetadata:
      type: object
      properties:
        arch:
          type: string
          example: string
        cpu_count:
          type: number
          example: 123.45
        cpu_speed_mhz:
          type: number
          example: 123.45
        cpu_type:
          type: string
          example: string
        gid:
          type: number
          example: 123.45
        homedir:
          type: string
          example: string
        hostname:
          type: string
          example: string
        interfaces:
          $ref: "#/components/schemas/NetworkInterfaces"
        machine_id:
          type: string
          example: string
        memory:
          type: number
          example: 123.45
        os_id:
          type: string
          example: string
        os_name:
          type: string
          example: string
        os_version:
          type: string
          example: string
        os_version_id:
          type: string
          example: string
        platform:
          type: string
          example: string
        release:
          type: string
          example: string
        timezone:
          type: string
          example: string
        timezone_offset:
          type: string
          example: string
        uid:
          type: number
          example: 123.45
        username:
          type: string
          example: string
      required:
      - arch
      - cpu_count
      - cpu_speed_mhz
      - cpu_type
      - gid
      - homedir
      - hostname
      - interfaces
      - machine_id
      - memory
      - os_id
      - os_name
      - os_version
      - os_version_id
      - platform
      - release
      - timezone
      - timezone_offset
      - uid
      - username
      example:
        arch: string
        cpu_count: 123.45
        cpu_speed_mhz: 123.45
        cpu_type: string
        gid: 123.45
        homedir: string
        hostname: string
        machine_id: string
        memory: 123.45
        os_id: string
        os_name: string
        os_version: string
        os_version_id: string
        platform: string
        release: string
        timezone: string
        timezone_offset: string
        uid: 123.45
        username: string
    KubeMetadata:
      type: object
      properties:
        cluster:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        container:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        namespace:
          type: string
          example: string
        node:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        pod:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        source:
          type: string
          example: string
      required:
      - namespace
      - source
      example:
        cluster:
          additionalProp1: string
        container:
          additionalProp1: string
        namespace: string
        node:
          additionalProp1: string
        pod:
          additionalProp1: string
        source: string
    Metadata:
      type: object
      properties:
        aws:
          $ref: "#/components/schemas/AwsMetadata"
        cribl:
          $ref: "#/components/schemas/CriblMetadata"
        env:
          $ref: "#/components/schemas/EnvMetadata"
        hostOs:
          $ref: "#/components/schemas/OsMetadata"
        kube:
          $ref: "#/components/schemas/KubeMetadata"
        os:
          $ref: "#/components/schemas/OsMetadata"
        timestamp:
          type: number
          example: 123.45
      required:
      - timestamp
      example:
        timestamp: 123.45
    SampleFile:
      type: object
      properties:
        bytes:
          type: string
          example: string
        bytesRead:
          type: number
          example: 123.45
        length:
          type: number
          example: 123.45
      required:
      - bytes
      - bytesRead
      - length
      example:
        bytes: string
        bytesRead: 123.45
        length: 123.45
    CrudEntityBase:
      type: object
      properties:
        id:
          type: string
          example: string
      required:
      - id
      example:
        id: string
    MultiFactorAuthSchema:
      type: object
      properties:
        accessControlAllowOrigin:
          type: string
          example: string
        allowLogin:
          type: boolean
          example: true
        apiServerUrl:
          type: string
          example: string
        disabled:
          type: boolean
          example: true
        type:
          type: string
          enum:
          - piv
          example: piv
        usernameField:
          type: string
          example: string
        usernameRegex:
          type: string
          example: string
      required:
      - accessControlAllowOrigin
      - allowLogin
      - apiServerUrl
      - disabled
      - type
      - usernameField
      - usernameRegex
      example:
        accessControlAllowOrigin: string
        allowLogin: true
        apiServerUrl: string
        disabled: true
        type: piv
        usernameField: string
        usernameRegex: string
    LoginInfo:
      type: object
      required:
      - username
      - password
      properties:
        username:
          type: string
          example: string
        password:
          type: string
          example: string
      example:
        username: string
        password: string
    AuthToken:
      type: object
      required:
      - token
      properties:
        token:
          type: string
          example: string
      example:
        token: string
    RedirectInfo:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          example: string
        redirectUrl:
          type: string
          example: string
        token:
          type: string
          example: string
      example:
        name: string
        redirectUrl: string
        token: string
    AuthPolicyEntry:
      type: object
      properties:
        actions:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        object:
          type: string
          example: string
      required:
      - actions
      - object
      example:
        actions:
        - string
        object: string
    CaptureParams:
      type: object
      properties:
        duration:
          type: number
          example: 123.45
        filter:
          type: string
          example: string
        level:
          type: number
          example: 123.45
        maxEvents:
          type: number
          example: 123.45
        stepDuration:
          type: number
          example: 123.45
        workerId:
          type: string
          example: string
        workerThreshold:
          type: number
          example: 123.45
      required:
      - duration
      - filter
      - level
      - maxEvents
      example:
        duration: 123.45
        filter: string
        level: 123.45
        maxEvents: 123.45
        stepDuration: 123.45
        workerId: string
        workerThreshold: 123.45
    ChangelogState:
      type: object
      properties:
        lastViewedCurrent:
          type: string
          example: string
        lastViewedUpgrade:
          type: string
          example: string
      example:
        lastViewedCurrent: string
        lastViewedUpgrade: string
    ClickHouseDescriptionColumn:
      type: object
      properties:
        name:
          type: string
          example: string
        type:
          type: string
          example: string
      required:
      - name
      - type
      example:
        name: string
        type: string
    ClickHouseDescriptionResult:
      type: object
      properties:
        description:
          type: array
          items:
            $ref: "#/components/schemas/ClickHouseDescriptionColumn"
          example:
          - 
        errorMsg:
          type: string
          example: string
        success:
          type: boolean
          example: true
      required:
      - success
      example:
        description:
        - 
        errorMsg: string
        success: true
    HTTPOutAuthConfig:
      type: object
      properties:
        disabled:
          type: boolean
          example: true
        password:
          type: string
          example: string
        token:
          type: string
          example: string
        username:
          type: string
          example: string
      example:
        disabled: true
        password: string
        token: string
        username: string
    CrudPolicy:
      type: object
      properties:
        Create:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
          example:
          - 
        Delete:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
          example:
          - 
        List:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
          example:
          - 
        Read:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
          example:
          - 
        Replace:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
          example:
          - 
        Update:
          type: array
          items:
            $ref: "#/components/schemas/AuthPolicyEntry"
          example:
          - 
      required:
      - Create
      - Delete
      - List
      - Read
      - Replace
      - Update
      example:
        Create:
        - 
        Delete:
        - 
        List:
        - 
        Read:
        - 
        Replace:
        - 
        Update:
        - 
    Expression:
      $ref: "#/components/schemas/CrudPolicy"
    NameValue:
      type: object
      properties:
        name:
          type: string
          example: string
        value:
          $ref: "#/components/schemas/Expression"
      required:
      - name
      - value
      example:
        name: string
    HTTPOutExtraParamConfig:
      type: object
      properties:
        name:
          type: string
          example: string
        value:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
      required:
      - name
      - value
      example:
        name: string
        value:
          additionalProp1: string
    Format:
      type: string
      enum:
      - json-compact-each-row-with-names
      - json-each-row
      example: json-compact-each-row-with-names
    MappingType:
      type: string
      enum:
      - automatic
      - custom
      example: automatic
    HTTPOutResponseRetryConfig:
      type: object
      properties:
        backoffRate:
          type: number
          example: 123.45
        httpStatus:
          type: number
          example: 123.45
        initialBackoff:
          type: number
          example: 123.45
        maxBackoff:
          type: number
          example: 123.45
      example:
        backoffRate: 123.45
        httpStatus: 123.45
        initialBackoff: 123.45
        maxBackoff: 123.45
    RetryBackoffOptions:
      type: object
      properties:
        backoffRate:
          type: number
          example: 123.45
        initialBackoff:
          type: number
          example: 123.45
        maxBackoff:
          type: number
          example: 123.45
      example:
        backoffRate: 123.45
        initialBackoff: 123.45
        maxBackoff: 123.45
    TLSClientParams:
      type: object
      properties:
        caPath:
          type: string
          example: string
        certPath:
          type: string
          example: string
        checkServerIdentity:
          type: object
          example: {}
        disabled:
          type: boolean
          example: true
        passphrase:
          type: string
          example: string
        privKeyPath:
          type: string
          example: string
        rejectUnauthorized:
          type: boolean
          example: true
        servername:
          type: string
          example: string
      required:
      - disabled
      example:
        caPath: string
        certPath: string
        checkServerIdentity: {}
        disabled: true
        passphrase: string
        privKeyPath: string
        rejectUnauthorized: true
        servername: string
    CHOutConfig:
      type: object
      properties:
        asyncInserts:
          type: boolean
          example: true
        auth:
          $ref: "#/components/schemas/HTTPOutAuthConfig"
        authType:
          type: string
          enum:
          - token
          - none
          - textSecret
          - basic
          - credentialsSecret
          - secret
          - manual
          - manualAPIKey
          - sslUserCertificate
          example: token
        columnMappings:
          type: array
          items:
            type: object
            properties:
              columnName:
                type: string
                example: string
              columnType:
                type: string
                example: string
              columnValueExpression:
                type: string
                example: string
            required:
            - columnName
            - columnType
            - columnValueExpression
            example:
              columnName: string
              columnType: string
              columnValueExpression: string
          example:
          - columnName: string
            columnType: string
            columnValueExpression: string
        compress:
          type: boolean
          example: true
        concurrency:
          type: number
          example: 123.45
        database:
          type: string
          example: string
        dumpFormatErrorsToDisk:
          type: boolean
          example: true
        excludeMappingFields:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        extraHttpHeaders:
          type: array
          items:
            $ref: "#/components/schemas/NameValue"
          example:
          - 
        extraParams:
          type: array
          items:
            $ref: "#/components/schemas/HTTPOutExtraParamConfig"
          example:
          - 
        failedRequestLoggingMode:
          type: string
          example: string
        flushPeriodSec:
          type: number
          example: 123.45
        format:
          $ref: "#/components/schemas/Format"
        keepAlive:
          type: boolean
          example: true
        loadBalanced:
          type: boolean
          example: true
        mappingType:
          $ref: "#/components/schemas/MappingType"
        maxConnectionReuseSec:
          type: number
          example: 123.45
        maxPayloadEvents:
          type: number
          example: 123.45
        maxPayloadSizeKB:
          type: number
          example: 123.45
        maxSockets:
          type: number
          example: 123.45
        method:
          type: string
          example: string
        password:
          type: string
          example: string
        rejectUnauthorized:
          type: boolean
          example: true
        responseHonorRetryAfterHeader:
          type: boolean
          example: true
        responseRetrySettings:
          type: array
          items:
            $ref: "#/components/schemas/HTTPOutResponseRetryConfig"
          example:
          - 
        safeHeaders:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        sqlUsername:
          type: string
          example: string
        tableName:
          type: string
          example: string
        tableNameExpression:
          type: string
          example: string
        timeoutRetrySettings:
          $ref: "#/components/schemas/RetryBackoffOptions"
        timeoutSec:
          type: number
          example: 123.45
        tls:
          $ref: "#/components/schemas/TLSClientParams"
        token:
          type: string
          example: string
        totalMemoryLimitKB:
          type: number
          example: 123.45
        url:
          type: string
          example: string
        urls:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        useRoundRobinDns:
          type: boolean
          example: true
        username:
          type: string
          example: string
        waitForAsyncInserts:
          type: boolean
          example: true
      required:
      - asyncInserts
      - database
      - flushPeriodSec
      - format
      - loadBalanced
      - mappingType
      - tableName
      - url
      example:
        asyncInserts: true
        authType: token
        columnMappings:
        - columnName: string
          columnType: string
          columnValueExpression: string
        compress: true
        concurrency: 123.45
        database: string
        dumpFormatErrorsToDisk: true
        excludeMappingFields:
        - string
        extraHttpHeaders:
        - 
        extraParams:
        - 
        failedRequestLoggingMode: string
        flushPeriodSec: 123.45
        keepAlive: true
        loadBalanced: true
        maxConnectionReuseSec: 123.45
        maxPayloadEvents: 123.45
        maxPayloadSizeKB: 123.45
        maxSockets: 123.45
        method: string
        password: string
        rejectUnauthorized: true
        responseHonorRetryAfterHeader: true
        responseRetrySettings:
        - 
        safeHeaders:
        - string
        sqlUsername: string
        tableName: string
        tableNameExpression: string
        timeoutSec: 123.45
        token: string
        totalMemoryLimitKB: 123.45
        url: string
        urls:
        - string
        useRoundRobinDns: true
        username: string
        waitForAsyncInserts: true
    CluiType:
      type: string
      enum:
      - input
      - output
      - route
      - pipeline
      - knowledge
      - collector
      - pack
      - monitoring
      example: input
    CluiItem:
      type: object
      properties:
        category:
          type: string
          enum:
          - link
          example: link
        groupId:
          type: string
          example: string
        id:
          type: string
          example: string
        name:
          type: string
          example: string
        packId:
          type: string
          example: string
        subType:
          type: string
          example: string
        type:
          $ref: "#/components/schemas/CluiType"
      required:
      - category
      - type
      example:
        category: link
        groupId: string
        id: string
        name: string
        packId: string
        subType: string
    TcpOutCompression:
      type: string
      nullable: true
      enum:
      - gzip
      - none
      example: gzip
    ConfigBundles:
      type: object
      properties:
        remoteUrl:
          type: string
          example: string
      required:
      - remoteUrl
      example:
        remoteUrl: string
    FailoverConfigs:
      type: object
      properties:
        missedHBLimit:
          type: number
          example: 123.45
        period:
          type: string
          example: string
        volume:
          type: string
          example: string
      required:
      - volume
      example:
        missedHBLimit: 123.45
        period: string
        volume: string
    SocksProxyOpts:
      type: object
      properties:
        disabled:
          type: boolean
          example: true
        host:
          type: string
          example: string
        password:
          type: string
          example: string
        port:
          type: number
          example: 123.45
        type:
          type: number
          example: 123.45
        userId:
          type: string
          example: string
      required:
      - host
      - port
      example:
        disabled: true
        host: string
        password: string
        port: 123.45
        type: 123.45
        userId: string
    ResiliencyType:
      type: string
      enum:
      - none
      - failover
      example: none
    CloudWorkspaceSchema:
      type: object
      properties:
        authToken:
          type: string
          example: string
        compression:
          $ref: "#/components/schemas/TcpOutCompression"
        configBundles:
          $ref: "#/components/schemas/ConfigBundles"
        configHelperSocketDir:
          type: string
          example: string
        connectionTimeout:
          type: number
          example: 123.45
        disableSNIRouting:
          type: boolean
          example: true
        disabled:
          type: boolean
          example: true
        failover:
          $ref: "#/components/schemas/FailoverConfigs"
        forwardToLeaderApi:
          type: boolean
          example: true
        host:
          type: string
          example: string
        ipWhitelistRegex:
          type: string
          example: string
        maxActiveCxn:
          type: number
          example: 123.45
        maxBufferBytes:
          type: number
          example: 123.45
        port:
          type: number
          example: 123.45
        protocol:
          type: string
          example: string
        proxy:
          $ref: "#/components/schemas/SocksProxyOpts"
        resiliency:
          $ref: "#/components/schemas/ResiliencyType"
        subscriptionAgreement:
          type: boolean
          example: true
        tls:
          type: object
          properties:
            caPath:
              type: string
              example: string
            certPath:
              type: string
              example: string
            certificateName:
              type: string
              example: string
            checkServerIdentity:
              type: object
              example: {}
            commonNameRegex:
              type: object
              additionalProperties: true
              example:
                additionalProp1: string
            disabled:
              type: boolean
              example: true
            passphrase:
              type: string
              example: string
            privKeyPath:
              type: string
              example: string
            rejectUnauthorized:
              type: boolean
              example: true
            requestCert:
              type: boolean
              example: true
            servername:
              type: string
              example: string
          required:
          - disabled
          example:
            caPath: string
            certPath: string
            certificateName: string
            checkServerIdentity: {}
            commonNameRegex:
              additionalProp1: string
            disabled: true
            passphrase: string
            privKeyPath: string
            rejectUnauthorized: true
            requestCert: true
            servername: string
        writeTimeout:
          type: number
          example: 123.45
      required:
      - disabled
      - host
      - port
      - subscriptionAgreement
      example:
        authToken: string
        configHelperSocketDir: string
        connectionTimeout: 123.45
        disableSNIRouting: true
        disabled: true
        forwardToLeaderApi: true
        host: string
        ipWhitelistRegex: string
        maxActiveCxn: 123.45
        maxBufferBytes: 123.45
        port: 123.45
        protocol: string
        subscriptionAgreement: true
        tls:
          caPath: string
          certPath: string
          certificateName: string
          checkServerIdentity: {}
          commonNameRegex:
            additionalProp1: string
          disabled: true
          passphrase: string
          privKeyPath: string
          rejectUnauthorized: true
          requestCert: true
          servername: string
        writeTimeout: 123.45
    MasterSchema:
      type: object
      properties:
        authToken:
          type: string
          example: string
        compression:
          $ref: "#/components/schemas/TcpOutCompression"
        configBundles:
          $ref: "#/components/schemas/ConfigBundles"
        configHelperSocketDir:
          type: string
          example: string
        connectionTimeout:
          type: number
          example: 123.45
        disableSNIRouting:
          type: boolean
          example: true
        failover:
          $ref: "#/components/schemas/FailoverConfigs"
        forwardToLeaderApi:
          type: boolean
          example: true
        host:
          type: string
          example: string
        ipWhitelistRegex:
          type: string
          example: string
        maxActiveCxn:
          type: number
          example: 123.45
        maxBufferBytes:
          type: number
          example: 123.45
        port:
          type: number
          example: 123.45
        protocol:
          type: string
          example: string
        proxy:
          $ref: "#/components/schemas/SocksProxyOpts"
        resiliency:
          $ref: "#/components/schemas/ResiliencyType"
        tls:
          type: object
          properties:
            caPath:
              type: string
              example: string
            certPath:
              type: string
              example: string
            certificateName:
              type: string
              example: string
            checkServerIdentity:
              type: object
              example: {}
            commonNameRegex:
              type: object
              additionalProperties: true
              example:
                additionalProp1: string
            disabled:
              type: boolean
              example: true
            passphrase:
              type: string
              example: string
            privKeyPath:
              type: string
              example: string
            rejectUnauthorized:
              type: boolean
              example: true
            requestCert:
              type: boolean
              example: true
            servername:
              type: string
              example: string
          required:
          - disabled
          example:
            caPath: string
            certPath: string
            certificateName: string
            checkServerIdentity: {}
            commonNameRegex:
              additionalProp1: string
            disabled: true
            passphrase: string
            privKeyPath: string
            rejectUnauthorized: true
            requestCert: true
            servername: string
        writeTimeout:
          type: number
          example: 123.45
      required:
      - host
      - port
      example:
        authToken: string
        configHelperSocketDir: string
        connectionTimeout: 123.45
        disableSNIRouting: true
        forwardToLeaderApi: true
        host: string
        ipWhitelistRegex: string
        maxActiveCxn: 123.45
        maxBufferBytes: 123.45
        port: 123.45
        protocol: string
        tls:
          caPath: string
          certPath: string
          certificateName: string
          checkServerIdentity: {}
          commonNameRegex:
            additionalProp1: string
          disabled: true
          passphrase: string
          privKeyPath: string
          rejectUnauthorized: true
          requestCert: true
          servername: string
        writeTimeout: 123.45
    AppMode:
      type: string
      enum:
      - single
      - master
      - worker
      - edge
      - managed-edge
      - outpost
      example: single
    InstanceSettingsSchema:
      oneOf:
      - type: object
        properties:
          cloudWorkspace:
            $ref: "#/components/schemas/CloudWorkspaceSchema"
          envRegex:
            type: string
            example: string
          group:
            type: string
            example: string
          id:
            type: string
            example: string
          master:
            $ref: "#/components/schemas/MasterSchema"
          mode:
            $ref: "#/components/schemas/AppMode"
          reportedDeploymentId:
            type: string
            example: string
          tags:
            type: array
            items:
              type: string
              example: string
            example:
            - string
        required:
        - id
        - mode
        example:
          envRegex: string
          group: string
          id: string
          reportedDeploymentId: string
          tags:
          - string
      - type: object
        properties:
          bootstrapHost:
            type: string
            example: string
          id:
            type: string
            example: string
        example:
          bootstrapHost: string
          id: string
      example:
        envRegex: string
        group: string
        id: string
        reportedDeploymentId: string
        tags:
        - string
    LookupVersions:
      type: object
      example: {}
    HBLeaderInfo:
      type: object
      properties:
        host:
          type: string
          example: string
        port:
          type: number
          example: 123.45
        servername:
          type: string
          example: string
        tls:
          type: boolean
          example: true
      required:
      - host
      - port
      example:
        host: string
        port: 123.45
        servername: string
        tls: true
    HBCriblInfo:
      type: object
      properties:
        config:
          type: object
          properties:
            featuresRev:
              type: string
              example: string
            hbPeriodSeconds:
              type: number
              example: 123.45
            logStreamEnv:
              type: string
              example: string
            policyRev:
              type: string
              example: string
            version:
              type: string
              example: string
          example:
            featuresRev: string
            hbPeriodSeconds: 123.45
            logStreamEnv: string
            policyRev: string
            version: string
        deploymentId:
          type: string
          example: string
        distMode:
          $ref: "#/components/schemas/AppMode"
        edgeNodes:
          type: number
          example: 123.45
        group:
          type: string
          example: string
        guid:
          type: string
          example: string
        installType:
          type: string
          example: string
        lookupVersions:
          $ref: "#/components/schemas/LookupVersions"
        master:
          $ref: "#/components/schemas/HBLeaderInfo"
        pid:
          type: number
          example: 123.45
        startTime:
          type: number
          example: 123.45
        tags:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        version:
          type: string
          example: string
      required:
      - config
      - distMode
      - group
      - guid
      - startTime
      - tags
      example:
        config:
          featuresRev: string
          hbPeriodSeconds: 123.45
          logStreamEnv: string
          policyRev: string
          version: string
        deploymentId: string
        edgeNodes: 123.45
        group: string
        guid: string
        installType: string
        pid: 123.45
        startTime: 123.45
        tags:
        - string
        version: string
    HeartbeatMetadata:
      type: object
      properties:
        aws:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            region:
              type: string
              example: string
            tags:
              type: object
              example: {}
            type:
              type: string
              example: string
            zone:
              type: string
              example: string
          required:
          - enabled
          - region
          - type
          - zone
          example:
            enabled: true
            region: string
            tags: {}
            type: string
            zone: string
        hostOs:
          type: object
          properties:
            addresses:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            enabled:
              type: boolean
              example: true
            id:
              type: string
              example: string
            version:
              type: string
              example: string
          required:
          - addresses
          - enabled
          - id
          - version
          example:
            addresses:
            - string
            enabled: true
            id: string
            version: string
        kube:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            namespace:
              type: string
              example: string
            node:
              type: string
              example: string
            owner:
              type: object
              properties:
                kind:
                  type: string
                  example: string
                name:
                  type: string
                  example: string
              required:
              - kind
              - name
              example:
                kind: string
                name: string
            pod:
              type: string
              example: string
            source:
              type: string
              example: string
          required:
          - enabled
          - namespace
          - node
          - pod
          - source
          example:
            enabled: true
            namespace: string
            node: string
            owner:
              kind: string
              name: string
            pod: string
            source: string
        os:
          type: object
          properties:
            addresses:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            enabled:
              type: boolean
              example: true
            id:
              type: string
              example: string
            version:
              type: string
              example: string
          required:
          - addresses
          - enabled
          - id
          - version
          example:
            addresses:
            - string
            enabled: true
            id: string
            version: string
      example:
        aws:
          enabled: true
          region: string
          tags: {}
          type: string
          zone: string
        hostOs:
          addresses:
          - string
          enabled: true
          id: string
          version: string
        kube:
          enabled: true
          namespace: string
          node: string
          owner:
            kind: string
            name: string
          pod: string
          source: string
        os:
          addresses:
          - string
          enabled: true
          id: string
          version: string
    NodeProvidedInfo:
      type: object
      properties:
        architecture:
          type: string
          example: string
        aws:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            region:
              type: string
              example: string
            tags:
              type: object
              example: {}
            type:
              type: string
              example: string
            zone:
              type: string
              example: string
          required:
          - enabled
          - region
          - type
          - zone
          example:
            enabled: true
            region: string
            tags: {}
            type: string
            zone: string
        conn_ip:
          type: string
          example: string
        cpus:
          type: number
          example: 123.45
        cribl:
          $ref: "#/components/schemas/HBCriblInfo"
        freeDiskSpace:
          type: number
          example: 123.45
        hostOs:
          type: object
          properties:
            addresses:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            enabled:
              type: boolean
              example: true
            id:
              type: string
              example: string
            version:
              type: string
              example: string
          required:
          - addresses
          - enabled
          - id
          - version
          example:
            addresses:
            - string
            enabled: true
            id: string
            version: string
        hostname:
          type: string
          example: string
        isSaasWorker:
          type: boolean
          example: true
        kube:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            namespace:
              type: string
              example: string
            node:
              type: string
              example: string
            owner:
              type: object
              properties:
                kind:
                  type: string
                  example: string
                name:
                  type: string
                  example: string
              required:
              - kind
              - name
              example:
                kind: string
                name: string
            pod:
              type: string
              example: string
            source:
              type: string
              example: string
          required:
          - enabled
          - namespace
          - node
          - pod
          - source
          example:
            enabled: true
            namespace: string
            node: string
            owner:
              kind: string
              name: string
            pod: string
            source: string
        localTime:
          type: number
          example: 123.45
        metadata:
          $ref: "#/components/schemas/HeartbeatMetadata"
        node:
          type: string
          example: string
        os:
          oneOf:
          - type: object
            properties:
              addresses:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              enabled:
                type: boolean
                example: true
              id:
                type: string
                example: string
              version:
                type: string
                example: string
            required:
            - addresses
            - enabled
            - id
            - version
            example:
              addresses:
              - string
              enabled: true
              id: string
              version: string
          - type: object
            properties:
              addresses:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
            required:
            - addresses
            example:
              addresses:
              - string
          example:
            addresses:
            - string
            enabled: true
            id: string
            version: string
        platform:
          type: string
          example: string
        release:
          type: string
          example: string
        totalDiskSpace:
          type: number
          example: 123.45
        totalmem:
          type: number
          example: 123.45
      required:
      - architecture
      - cpus
      - cribl
      - freeDiskSpace
      - hostname
      - node
      - platform
      - release
      - totalDiskSpace
      - totalmem
      example:
        architecture: string
        aws:
          enabled: true
          region: string
          tags: {}
          type: string
          zone: string
        conn_ip: string
        cpus: 123.45
        freeDiskSpace: 123.45
        hostOs:
          addresses:
          - string
          enabled: true
          id: string
          version: string
        hostname: string
        isSaasWorker: true
        kube:
          enabled: true
          namespace: string
          node: string
          owner:
            kind: string
            name: string
          pod: string
          source: string
        localTime: 123.45
        node: string
        os:
          addresses:
          - string
          enabled: true
          id: string
          version: string
        platform: string
        release: string
        totalDiskSpace: 123.45
        totalmem: 123.45
    NodeActiveUpgradeStatus:
      type: integer
      enum:
      - 0
      - 1
      - 2
      example: 0
    NodeFailedUpgradeStatus:
      type: integer
      enum:
      - 0
      - 1
      example: 0
    NodeSkippedUpgradeStatus:
      type: integer
      enum:
      - 0
      - 1
      - 2
      - 3
      example: 0
    NodeUpgradeState:
      type: integer
      enum:
      - 0
      - 1
      - 2
      - 3
      example: 0
    NodeUpgradeStatus:
      type: object
      properties:
        active:
          $ref: "#/components/schemas/NodeActiveUpgradeStatus"
        failed:
          $ref: "#/components/schemas/NodeFailedUpgradeStatus"
        skipped:
          $ref: "#/components/schemas/NodeSkippedUpgradeStatus"
        state:
          $ref: "#/components/schemas/NodeUpgradeState"
        timestamp:
          type: number
          example: 123.45
      required:
      - state
      - timestamp
      example:
        timestamp: 123.45
    MasterWorkerEntry:
      type: object
      properties:
        deployable:
          type: boolean
          example: true
        firstMsgTime:
          type: number
          example: 123.45
        group:
          type: string
          example: string
        id:
          type: string
          example: string
        info:
          $ref: "#/components/schemas/NodeProvidedInfo"
        lastMetrics:
          type: object
          example: {}
        lastMsgTime:
          type: number
          example: 123.45
        metadata:
          $ref: "#/components/schemas/HeartbeatMetadata"
        nodeUpgradeStatus:
          $ref: "#/components/schemas/NodeUpgradeStatus"
        status:
          type: string
          example: string
        type:
          type: string
          enum:
          - info
          - req
          - resp
          example: info
        workerProcesses:
          type: number
          example: 123.45
        workers:
          type: object
          properties:
            count:
              type: number
              example: 123.45
          required:
          - count
          example:
            count: 123.45
      required:
      - firstMsgTime
      - group
      - id
      - info
      - lastMsgTime
      - workerProcesses
      example:
        deployable: true
        firstMsgTime: 123.45
        group: string
        id: string
        lastMetrics: {}
        lastMsgTime: 123.45
        status: string
        type: info
        workerProcesses: 123.45
        workers:
          count: 123.45
    RestartResponse:
      type: object
      properties:
        id:
          type: string
          example: string
        message:
          type: string
          example: string
        status:
          type: string
          enum:
          - Error
          - Restarting
          example: Error
      required:
      - id
      - status
      example:
        id: string
        message: string
        status: Error
    DistributedSummary:
      type: object
      properties:
        groups:
          type: object
          properties:
            count:
              type: number
              example: 123.45
            destinations:
              type: number
              example: 123.45
            pipelines:
              type: number
              example: 123.45
            routes:
              type: number
              example: 123.45
            sources:
              type: number
              example: 123.45
          required:
          - count
          - destinations
          - pipelines
          - routes
          - sources
          example:
            count: 123.45
            destinations: 123.45
            pipelines: 123.45
            routes: 123.45
            sources: 123.45
        workers:
          type: object
          properties:
            alive:
              type: number
              example: 123.45
            confVersions:
              type: number
              example: 123.45
            count:
              type: number
              example: 123.45
            groups:
              type: number
              example: 123.45
            softwareVersions:
              type: number
              example: 123.45
            unhealthy:
              type: number
              example: 123.45
          required:
          - alive
          - confVersions
          - count
          - groups
          - softwareVersions
          - unhealthy
          example:
            alive: 123.45
            confVersions: 123.45
            count: 123.45
            groups: 123.45
            softwareVersions: 123.45
            unhealthy: 123.45
      required:
      - groups
      - workers
      example:
        groups:
          count: 123.45
          destinations: 123.45
          pipelines: 123.45
          routes: 123.45
          sources: 123.45
        workers:
          alive: 123.45
          confVersions: 123.45
          count: 123.45
          groups: 123.45
          softwareVersions: 123.45
          unhealthy: 123.45
    DistributedUpgradeRequest:
      type: object
      additionalProperties: false
      properties:
        packageUrls:
          title: Custom Path
          description: Provide your own URLs or local paths for platform-specific Cribl packages
          type: array
          items:
            type: object
            required:
            - packageUrl
            properties:
              packageUrl:
                type: string
                title: Platform-Specific Package Location
                description: Package HTTP URL or local path
                pattern: (\d+)\.(\d+)\.?(\d+)?-?([-.a-zA-Z0-9]*)-([a-z0-9]{8})-(linux|darwin|win32)-([0-9a-zA-Z]+)
                minLength: 1
                example: string
              packageHashUrl:
                type: string
                title: Package Hash Location
                description: Package's MD5 or SHA256 hash HTTP URL or local path
                pattern: (\d+)\.(\d+)\.?(\d+)?-?([-.a-zA-Z0-9]*)-([a-z0-9]{8})-(linux|darwin|win32)-([0-9a-zA-Z]+)\.(tgz|msi)?\.(md5|sha256)
                minLength: 1
                example: string
            example:
              packageUrl: string
              packageHashUrl: string
          example:
          - packageUrl: string
            packageHashUrl: string
        upgradePercentage:
          type: number
          title: Percentage of workers to upgrade
          description: Percentage of the total worker nodes on the group to run the upgrade on
          minimum: 0.00001
          maximum: 1
          default: 1
          example: 1
        workerRetries:
          type: number
          title: Worker node connect retry count
          description: Number of times to retry conncecting to a worker node before marking the upgrade as failed.
          minimum: 1
          default: 5
          example: 5
        workerRetryDelay:
          type: number
          title: Worker node connect retry delay
          description: Delay between retries
          minimum: 100
          default: 1000
          example: 1000
        upgradeMode:
          type: string
          title: Upgrade mode
          enum:
          - rolling
          - regular
          - batch
          example: rolling
        versionTo:
          type: string
          title: Exact version to match
          example: string
      example:
        packageUrls:
        - packageUrl: string
          packageHashUrl: string
        upgradePercentage: 1
        workerRetries: 5
        workerRetryDelay: 1000
        upgradeMode: rolling
        versionTo: string
    ExprLibEntry:
      type: object
      properties:
        context:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        evalType:
          type: string
          example: string
        expr:
          type: string
          description: JavaScript expression to evaluate
          example: string
        id:
          type: string
          example: string
        pack:
          type: string
          example: string
        result:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        unprotected:
          type: boolean
          example: true
      required:
      - expr
      - id
      example:
        context:
          additionalProp1: string
        evalType: string
        expr: string
        id: string
        pack: string
        result:
          additionalProp1: string
        unprotected: true
    Function:
      type: object
      properties:
        __conf:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        __filename:
          type: string
          example: string
        disabled:
          type: boolean
          example: true
        group:
          type: string
          example: string
        id:
          type: string
          example: string
        initTime:
          type: number
          example: 123.45
        loadTime:
          type: number
          example: 123.45
        modTime:
          type: number
          example: 123.45
        name:
          type: string
          example: string
        uischema:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        version:
          type: string
          example: string
      required:
      - __conf
      - __filename
      - disabled
      - group
      - id
      - initTime
      - loadTime
      - modTime
      - name
      - uischema
      - version
      example:
        __conf:
          additionalProp1: string
        __filename: string
        disabled: true
        group: string
        id: string
        initTime: 123.45
        loadTime: 123.45
        modTime: 123.45
        name: string
        uischema:
          additionalProp1: string
        version: string
    Condition:
      $ref: "#/components/schemas/Function"
    HealthStatus:
      type: object
      required:
      - status
      - startTime
      properties:
        role:
          type: string
          enum:
          - primary
          - standby
          example: primary
        status:
          type: string
          enum:
          - healthy
          - shutting down
          - standby
          example: healthy
        startTime:
          type: number
          example: 123.45
      example:
        role: primary
        status: healthy
        startTime: 123.45
    JobState:
      type: object
      properties:
        id:
          type: string
          example: string
        state:
          type: string
          example: string
      required:
      - id
      - state
      example:
        id: string
        state: string
    RunnableJobCollection:
      required:
      - collector
      - run
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
          example: string
        description:
          type: string
          title: Description
          example: string
        type:
          type: string
          title: Job type
          enum:
          - collection
          - executor
          - scheduledSearch
          example: collection
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
          example: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
          minItems: 0
          default: &id311 []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
            example: string
          example: *id311
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
          default: false
          example: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "*/5 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be running at any time
              default: 1
              minimum: 1
              example: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
              default: true
              example: true
            resumeMissed:
              example: string
            run:
              type: object
              title: Run settings
              required:
              - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 1
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                  - error
                  - warn
                  - info
                  - debug
                  - silly
                  default: info
                  example: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                  default: list
                  example: list
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  example: relative
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 123.45
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 123.45
                timestampTimezone:
                  example: string
                timeWarning:
                  type: object
                  properties: {}
                  example: {}
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events being collected
                  default: "true"
                  example: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: >-
                    Limits the bundle size for small tasks. For example,
                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 1MB
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: >-
                    Limits the bundle size for files above the lower task
                    bundle size. For example, if your upper bundle size is
                    10MB,
                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 10MB
              example:
                rescheduleDroppedTasks: true
                maxTaskReschedule: 1
                logLevel: info
                jobTimeout: "0"
                mode: list
                timeRangeType: relative
                earliest: 123.45
                latest: 123.45
                timestampTimezone: string
                timeWarning: {}
                expression: "true"
                minTaskSize: 1MB
                maxTaskSize: 10MB
          example:
            enabled: true
            cronSchedule: "*/5 * * * *"
            maxConcurrentRuns: 1
            skippable: true
            resumeMissed: string
            run:
              rescheduleDroppedTasks: true
              maxTaskReschedule: 1
              logLevel: info
              jobTimeout: "0"
              mode: list
              timeRangeType: relative
              earliest: 123.45
              latest: 123.45
              timestampTimezone: string
              timeWarning: {}
              expression: "true"
              minTaskSize: 1MB
              maxTaskSize: 10MB
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id312 []
          items:
            type: string
            example: string
          example: *id312
        workerAffinity:
          type: boolean
          title: Worker affinity
          description: If enabled, tasks are created and run by the same Worker Node
          default: false
          example: false
        collector:
          type: object
          required:
          - type
          - conf
          properties:
            type:
              type: string
              title: Collector type
              description: The type of collector to run
              example: string
            conf:
              type: object
              title: Collector-specific settings
              properties: {}
              example: {}
            destructive:
              type: boolean
              title: Destructive
              description: Delete any files collected (where applicable)
              default: false
              example: false
            encoding:
              type: string
              title: Encoding
              description: Character encoding to use when parsing ingested data. When not set, @{product} will default to UTF-8 but may incorrectly interpret multi-byte characters.
              example: string
          example:
            type: string
            conf: {}
            destructive: false
            encoding: string
        input:
          type: object
          properties:
            type:
              type: string
              enum:
              - collection
              default: collection
              example: collection
            breakerRulesets:
              type: array
              title: Event Breaker rulesets
              description: A list of event-breaking rulesets that will be applied, in order, to the input data stream
              items:
                type: string
                example: string
              example:
              - string
            staleChannelFlushMs:
              type: number
              title: Event Breaker buffer timeout (ms)
              description: How long (in milliseconds) the Event Breaker will wait for new data to be sent to a specific channel before flushing the data stream out, as is, to the Pipelines
              default: 10000
              minimum: 10
              maximum: 43200000
              example: 10000
            sendToRoutes:
              type: boolean
              title: Send to Routes
              description: Send events to normal routing and event processing. Disable to select a specific Pipeline/Destination combination.
              default: true
              example: true
            preprocess:
              type: object
              required:
              - disabled
              properties:
                disabled:
                  type: boolean
                  title: Disabled
                  default: true
                  example: true
                command:
                  type: string
                  title: Command
                  description: Command to feed the data through (via stdin) and process its output (stdout)
                  example: string
                args:
                  type: array
                  title: Arguments
                  description: Arguments to be added to the custom command
                  items:
                    type: string
                    example: string
                  example:
                  - string
              example:
                disabled: true
                command: string
                args:
                - string
            throttleRatePerSec:
              type: string
              title: Throttling
              description: "Rate (in bytes per second) to throttle while writing to an output. Accepts values with multiple-byte units, such as KB, MB, and GB. (Example: 42 MB) Default value of 0 specifies no throttling."
              pattern: ^[\d.]+(\s[KMGTPEZYkmgtpezy][Bb])?$
              default: "0"
              example: "0"
            metadata:
              type: array
              title: Fields
              description: Fields to add to events from this input
              items:
                type: object
                required:
                - name
                - value
                properties:
                  name:
                    type: string
                    title: Field Name
                    example: string
                  value:
                    type: string
                    title: Value
                    description: JavaScript expression to compute field's value, enclosed in quotes or backticks. (Can evaluate to a constant.)
                    example: string
                example:
                  name: string
                  value: string
              example:
              - name: string
                value: string
            pipeline:
              type: string
              title: Pipeline
              description: Pipeline to process results
              example: string
            output:
              type: string
              title: Destination
              description: Destination to send results to
              example: string
          example:
            type: collection
            breakerRulesets:
            - string
            staleChannelFlushMs: 10000
            sendToRoutes: true
            preprocess:
              disabled: true
              command: string
              args:
              - string
            throttleRatePerSec: "0"
            metadata:
            - name: string
              value: string
            pipeline: string
            output: string
        run:
          type: object
          required:
          - mode
          properties:
            rescheduleDroppedTasks:
              type: boolean
              title: Reschedule tasks
              description: Reschedule tasks that failed with non-fatal errors
              default: true
              example: true
            maxTaskReschedule:
              type: number
              title: Task reschedule limit
              description: Maximum number of times a task can be rescheduled
              default: 1
              minimum: 1
              example: 1
            logLevel:
              type: string
              title: Log level
              description: Level at which to set task logging
              enum:
              - error
              - warn
              - info
              - debug
              - silly
              default: info
              example: info
            jobTimeout:
              title: Job timeout
              type: string
              description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
              pattern: \d+[sm]?$
              default: "0"
              example: "0"
            mode:
              type: string
              title: Mode
              description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
              default: list
              enum:
              - list
              - preview
              - run
              example: list
            timeRangeType:
              type: string
              title: Time range
              default: relative
              enum:
              - absolute
              - relative
              example: relative
            earliest:
              type: number
              title: Earliest
              description: Earliest time to collect data for the selected timezone
              example: 123.45
            latest:
              type: number
              title: Latest
              description: Latest time to collect data for the selected timezone
              example: 123.45
            timestampTimezone:
              type: string
              title: Range timezone
              description: Timezone to use for Earliest and Latest times
              default: UTC
              example: UTC
            timeWarning:
              type: object
              properties: {}
              example: {}
            expression:
              type: string
              title: Filter
              description: A filter for tokens in the provided collect path and/or the events being collected
              default: "true"
              example: "true"
            minTaskSize:
              type: string
              title: Lower task bundle size
              description: >-
                Limits the bundle size for small tasks. For example,
                        if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
              default: 1MB
              pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
              example: 1MB
            maxTaskSize:
              type: string
              title: Upper task bundle size
              description: >-
                Limits the bundle size for files above the lower task bundle
                size. For example, if your upper bundle size is 10MB,
                        you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
              default: 10MB
              pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
              example: 10MB
            discoverToRoutes:
              type: boolean
              title: Send to Routes
              description: Send discover results to Routes
              default: false
              example: false
            capture:
              type: object
              title: Capture Settings
              properties:
                duration:
                  type: number
                  title: Capture time (sec)
                  description: Amount of time to keep capture open, in seconds
                  default: 60
                  example: 60
                maxEvents:
                  type: number
                  title: Capture up to N events
                  description: Maximum number of events to capture
                  minimum: 1
                  maximum: 10000
                  default: 100
                  example: 100
                level:
                  type: string
                  title: Where to capture
                  enum:
                  - "0"
                  - "1"
                  - "2"
                  - "3"
                  default: "0"
                  example: "0"
              example:
                duration: 60
                maxEvents: 100
                level: "0"
          example:
            rescheduleDroppedTasks: true
            maxTaskReschedule: 1
            logLevel: info
            jobTimeout: "0"
            mode: list
            timeRangeType: relative
            earliest: 123.45
            latest: 123.45
            timestampTimezone: UTC
            timeWarning: {}
            expression: "true"
            minTaskSize: 1MB
            maxTaskSize: 10MB
            discoverToRoutes: false
            capture:
              duration: 60
              maxEvents: 100
              level: "0"
      type: object
      example:
        id: string
        description: string
        type: collection
        ttl: 4h
        ignoreGroupJobsLimit: false
        removeFields: *id311
        resumeOnBoot: false
        environment: string
        schedule:
          enabled: true
          cronSchedule: "*/5 * * * *"
          maxConcurrentRuns: 1
          skippable: true
          resumeMissed: string
          run:
            rescheduleDroppedTasks: true
            maxTaskReschedule: 1
            logLevel: info
            jobTimeout: "0"
            mode: list
            timeRangeType: relative
            earliest: 123.45
            latest: 123.45
            timestampTimezone: string
            timeWarning: {}
            expression: "true"
            minTaskSize: 1MB
            maxTaskSize: 10MB
        streamtags: *id312
        workerAffinity: false
        collector:
          type: string
          conf: {}
          destructive: false
          encoding: string
        input:
          type: collection
          breakerRulesets:
          - string
          staleChannelFlushMs: 10000
          sendToRoutes: true
          preprocess:
            disabled: true
            command: string
            args:
            - string
          throttleRatePerSec: "0"
          metadata:
          - name: string
            value: string
          pipeline: string
          output: string
        run:
          rescheduleDroppedTasks: true
          maxTaskReschedule: 1
          logLevel: info
          jobTimeout: "0"
          mode: list
          timeRangeType: relative
          earliest: 123.45
          latest: 123.45
          timestampTimezone: UTC
          timeWarning: {}
          expression: "true"
          minTaskSize: 1MB
          maxTaskSize: 10MB
          discoverToRoutes: false
          capture:
            duration: 60
            maxEvents: 100
            level: "0"
    RunnableJobExecutor:
      required:
      - executor
      - run
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
          example: string
        description:
          type: string
          title: Description
          example: string
        type:
          type: string
          title: Job type
          enum:
          - collection
          - executor
          - scheduledSearch
          example: collection
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
          example: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
          minItems: 0
          default: &id313 []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
            example: string
          example: *id313
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
          default: false
          example: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "*/5 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be running at any time
              default: 1
              minimum: 1
              example: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
              default: true
              example: true
            resumeMissed:
              example: string
            run:
              type: object
              title: Run settings
              required:
              - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 1
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                  - error
                  - warn
                  - info
                  - debug
                  - silly
                  default: info
                  example: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                  default: list
                  example: list
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  example: relative
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 123.45
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 123.45
                timestampTimezone:
                  example: string
                timeWarning:
                  type: object
                  properties: {}
                  example: {}
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events being collected
                  default: "true"
                  example: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: >-
                    Limits the bundle size for small tasks. For example,
                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 1MB
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: >-
                    Limits the bundle size for files above the lower task
                    bundle size. For example, if your upper bundle size is
                    10MB,
                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 10MB
              example:
                rescheduleDroppedTasks: true
                maxTaskReschedule: 1
                logLevel: info
                jobTimeout: "0"
                mode: list
                timeRangeType: relative
                earliest: 123.45
                latest: 123.45
                timestampTimezone: string
                timeWarning: {}
                expression: "true"
                minTaskSize: 1MB
                maxTaskSize: 10MB
          example:
            enabled: true
            cronSchedule: "*/5 * * * *"
            maxConcurrentRuns: 1
            skippable: true
            resumeMissed: string
            run:
              rescheduleDroppedTasks: true
              maxTaskReschedule: 1
              logLevel: info
              jobTimeout: "0"
              mode: list
              timeRangeType: relative
              earliest: 123.45
              latest: 123.45
              timestampTimezone: string
              timeWarning: {}
              expression: "true"
              minTaskSize: 1MB
              maxTaskSize: 10MB
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id314 []
          items:
            type: string
            example: string
          example: *id314
        executor:
          type: object
          required:
          - type
          properties:
            type:
              type: string
              title: Executor type
              description: The type of executor to run
              example: string
            storeTaskResults:
              type: boolean
              title: Store task results
              description: Determines whether or not to write task results to disk
              default: true
              example: true
            conf:
              type: object
              title: Executor-specific settings
              properties: {}
              example: {}
          example:
            type: string
            storeTaskResults: true
            conf: {}
        run:
          type: object
          properties:
            rescheduleDroppedTasks:
              type: boolean
              title: Reschedule tasks
              description: Reschedule tasks that failed with non-fatal errors
              default: true
              example: true
            maxTaskReschedule:
              type: number
              title: Task reschedule limit
              description: Maximum number of times a task can be rescheduled
              default: 1
              minimum: 1
              example: 1
            logLevel:
              type: string
              title: Log level
              description: Level at which to set task logging
              enum:
              - error
              - warn
              - info
              - debug
              - silly
              default: info
              example: info
            jobTimeout:
              title: Job timeout
              type: string
              description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
              pattern: \d+[sm]?$
              default: "0"
              example: "0"
          example:
            rescheduleDroppedTasks: true
            maxTaskReschedule: 1
            logLevel: info
            jobTimeout: "0"
      type: object
      example:
        id: string
        description: string
        type: collection
        ttl: 4h
        ignoreGroupJobsLimit: false
        removeFields: *id313
        resumeOnBoot: false
        environment: string
        schedule:
          enabled: true
          cronSchedule: "*/5 * * * *"
          maxConcurrentRuns: 1
          skippable: true
          resumeMissed: string
          run:
            rescheduleDroppedTasks: true
            maxTaskReschedule: 1
            logLevel: info
            jobTimeout: "0"
            mode: list
            timeRangeType: relative
            earliest: 123.45
            latest: 123.45
            timestampTimezone: string
            timeWarning: {}
            expression: "true"
            minTaskSize: 1MB
            maxTaskSize: 10MB
        streamtags: *id314
        executor:
          type: string
          storeTaskResults: true
          conf: {}
        run:
          rescheduleDroppedTasks: true
          maxTaskReschedule: 1
          logLevel: info
          jobTimeout: "0"
    RunnableJobScheduledSearch:
      required:
      - savedQueryId
      - type
      properties:
        id:
          type: string
          title: Job ID
          pattern: ^[a-zA-Z0-9_-]+$
          description: Unique ID for this Job
          example: string
        description:
          type: string
          title: Description
          example: string
        type:
          type: string
          title: Job type
          enum:
          - collection
          - executor
          - scheduledSearch
          example: collection
        ttl:
          type: string
          title: Time to live
          description: Time to keep the job's artifacts on disk after job completion. This also affects how long a job is listed in the Job Inspector.
          pattern: \d+[smh]$
          default: 4h
          example: 4h
        ignoreGroupJobsLimit:
          type: boolean
          title: Ignore Group job limits
          description: When enabled, this job's artifacts are not counted toward the Worker Group's finished job artifacts limit. Artifacts will be removed only after the Collector's configured time to live.
          default: false
          example: false
        removeFields:
          type: array
          title: Remove Discover fields
          description: List of fields to remove from Discover results. Wildcards (for example, aws*) are allowed. This is useful when discovery returns sensitive fields that should not be exposed in the Jobs user interface.
          minItems: 0
          default: &id315 []
          items:
            type: string
            title: Items
            description: List of fields to remove from Discover results
            example: string
          example: *id315
        resumeOnBoot:
          type: boolean
          title: Resume job on boot
          description: Resume the ad hoc job if a failure condition causes Stream to restart during job execution
          default: false
          example: false
        environment:
          type: string
          title: Environment
          description: Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere.
          example: string
        schedule:
          type: object
          title: Schedule
          description: Configuration for a scheduled job
          properties:
            enabled:
              type: boolean
              title: Enabled
              description: Enable to configure scheduling for this Collector
              example: true
            cronSchedule:
              type: string
              title: Cron schedule
              description: A cron schedule on which to run this job
              default: "*/5 * * * *"
              example: "*/5 * * * *"
            maxConcurrentRuns:
              type: number
              title: Concurrent run limit
              description: The maximum number of instances of this scheduled job that may be running at any time
              default: 1
              minimum: 1
              example: 1
            skippable:
              type: boolean
              title: Skippable
              description: Skippable jobs can be delayed, up to their next run time, if the system is hitting concurrency limits
              default: true
              example: true
            resumeMissed:
              example: string
            run:
              type: object
              title: Run settings
              required:
              - mode
              properties:
                rescheduleDroppedTasks:
                  type: boolean
                  title: Reschedule tasks
                  description: Reschedule tasks that failed with non-fatal errors
                  default: true
                  example: true
                maxTaskReschedule:
                  type: number
                  title: Task reschedule limit
                  description: Maximum number of times a task can be rescheduled
                  default: 1
                  minimum: 1
                  example: 1
                logLevel:
                  type: string
                  title: Log level
                  description: Level at which to set task logging
                  enum:
                  - error
                  - warn
                  - info
                  - debug
                  - silly
                  default: info
                  example: info
                jobTimeout:
                  title: Job timeout
                  type: string
                  description: "Maximum time the job is allowed to run. Time unit defaults to seconds if not specified (examples: 30, 45s, 15m). Enter 0 for unlimited time."
                  pattern: \d+[sm]?$
                  default: "0"
                  example: "0"
                mode:
                  type: string
                  title: Mode
                  description: Job run mode. Preview will either return up to N matching results, or will run until capture time T is reached. Discovery will gather the list of files to turn into streaming tasks, without running the data collection job. Full Run will run the collection job.
                  default: list
                  example: list
                timeRangeType:
                  type: string
                  title: Time range
                  default: relative
                  example: relative
                earliest:
                  type: number
                  title: Earliest
                  description: Earliest time to collect data for the selected timezone
                  example: 123.45
                latest:
                  type: number
                  title: Latest
                  description: Latest time to collect data for the selected timezone
                  example: 123.45
                timestampTimezone:
                  example: string
                timeWarning:
                  type: object
                  properties: {}
                  example: {}
                expression:
                  type: string
                  title: Filter
                  description: A filter for tokens in the provided collect path and/or the events being collected
                  default: "true"
                  example: "true"
                minTaskSize:
                  type: string
                  title: Lower task bundle size
                  description: >-
                    Limits the bundle size for small tasks. For example,
                            if your lower bundle size is 1MB, you can bundle up to five 200KB files into one task.
                  default: 1MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 1MB
                maxTaskSize:
                  type: string
                  title: Upper task bundle size
                  description: >-
                    Limits the bundle size for files above the lower task
                    bundle size. For example, if your upper bundle size is
                    10MB,
                            you can bundle up to five 2MB files into one task. Files greater than this size will be assigned to individual tasks.
                  default: 10MB
                  pattern: ^((\d*\.?\d+)((KB|MB|GB|TB|PB|EB|ZB|YB|kb|mb|gb|tb|pb|eb|zb|yb){1}))$
                  example: 10MB
              example:
                rescheduleDroppedTasks: true
                maxTaskReschedule: 1
                logLevel: info
                jobTimeout: "0"
                mode: list
                timeRangeType: relative
                earliest: 123.45
                latest: 123.45
                timestampTimezone: string
                timeWarning: {}
                expression: "true"
                minTaskSize: 1MB
                maxTaskSize: 10MB
          example:
            enabled: true
            cronSchedule: "*/5 * * * *"
            maxConcurrentRuns: 1
            skippable: true
            resumeMissed: string
            run:
              rescheduleDroppedTasks: true
              maxTaskReschedule: 1
              logLevel: info
              jobTimeout: "0"
              mode: list
              timeRangeType: relative
              earliest: 123.45
              latest: 123.45
              timestampTimezone: string
              timeWarning: {}
              expression: "true"
              minTaskSize: 1MB
              maxTaskSize: 10MB
        streamtags:
          type: array
          title: Tags
          description: Tags for filtering and grouping in @{product}
          default: &id316 []
          items:
            type: string
            example: string
          example: *id316
        savedQueryId:
          type: string
          title: ID of the SavedQuery
          description: Identifies which search query to run
          example: string
      type: object
      example:
        id: string
        description: string
        type: collection
        ttl: 4h
        ignoreGroupJobsLimit: false
        removeFields: *id315
        resumeOnBoot: false
        environment: string
        schedule:
          enabled: true
          cronSchedule: "*/5 * * * *"
          maxConcurrentRuns: 1
          skippable: true
          resumeMissed: string
          run:
            rescheduleDroppedTasks: true
            maxTaskReschedule: 1
            logLevel: info
            jobTimeout: "0"
            mode: list
            timeRangeType: relative
            earliest: 123.45
            latest: 123.45
            timestampTimezone: string
            timeWarning: {}
            expression: "true"
            minTaskSize: 1MB
            maxTaskSize: 10MB
        streamtags: *id316
        savedQueryId: string
    RunnableJob:
      oneOf:
      - $ref: "#/components/schemas/RunnableJobCollection"
      - $ref: "#/components/schemas/RunnableJobExecutor"
      - $ref: "#/components/schemas/RunnableJobScheduledSearch"
    State:
      type: object
      additionalProperties: true
      example:
        additionalProp1: string
    JobStatus:
      type: object
      properties:
        reason:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        state:
          $ref: "#/components/schemas/State"
      required:
      - state
      example:
        reason:
          additionalProp1: string
    JobInfo:
      type: object
      properties:
        args:
          $ref: "#/components/schemas/RunnableJob"
        id:
          type: string
          example: string
        keep:
          type: boolean
          example: true
        status:
          $ref: "#/components/schemas/JobStatus"
      required:
      - args
      - id
      - status
      example:
        id: string
        keep: true
    AUTH_PROVIDER:
      type: string
      enum:
      - token
      - aws-iam
      - aws-ec2
      example: token
    SECRET_PROVIDER:
      type: string
      enum:
      - local
      - vault
      - aws-kms
      example: local
    AWSKMSServiceConfig:
      type: object
      properties:
        kmsKeyArn:
          type: string
          example: string
        region:
          type: string
          example: string
      required:
      - kmsKeyArn
      - region
      example:
        kmsKeyArn: string
        region: string
    VaultKMSTlsClientConfig:
      type: object
      properties:
        caPath:
          type: string
          example: string
        certPath:
          type: string
          example: string
        certificateName:
          type: string
          example: string
        disabled:
          type: boolean
          example: true
        passphrase:
          type: string
          example: string
        privKeyPath:
          type: string
          example: string
        rejectUnauthorized:
          type: boolean
          example: true
        servername:
          type: string
          example: string
      required:
      - disabled
      example:
        caPath: string
        certPath: string
        certificateName: string
        disabled: true
        passphrase: string
        privKeyPath: string
        rejectUnauthorized: true
        servername: string
    KMSProviderConfig:
      type: object
      properties:
        auth:
          oneOf:
          - type: object
            properties:
              assumeRoleArn:
                type: string
                example: string
              assumeRoleExternalId:
                type: string
                example: string
              awsApiKey:
                type: string
                example: string
              awsAuthenticationMethod:
                type: string
                example: string
              awsSecretKey:
                type: string
                example: string
              enableAssumeRole:
                type: boolean
                example: true
              provider:
                $ref: "#/components/schemas/AUTH_PROVIDER"
              token:
                type: string
                example: string
              vaultAWSIAMServerID:
                type: string
                example: string
              vaultRole:
                type: string
                example: string
            required:
            - provider
            - vaultAWSIAMServerID
            example:
              assumeRoleArn: string
              assumeRoleExternalId: string
              awsApiKey: string
              awsAuthenticationMethod: string
              awsSecretKey: string
              enableAssumeRole: true
              token: string
              vaultAWSIAMServerID: string
              vaultRole: string
          - type: object
            properties:
              assumeRoleArn:
                type: string
                example: string
              assumeRoleExternalId:
                type: string
                example: string
              awsApiKey:
                type: string
                example: string
              awsAuthenticationMethod:
                type: string
                example: string
              awsSecretKey:
                type: string
                example: string
              enableAssumeRole:
                type: boolean
                example: true
            example:
              assumeRoleArn: string
              assumeRoleExternalId: string
              awsApiKey: string
              awsAuthenticationMethod: string
              awsSecretKey: string
              enableAssumeRole: true
          example:
            assumeRoleArn: string
            assumeRoleExternalId: string
            awsApiKey: string
            awsAuthenticationMethod: string
            awsSecretKey: string
            enableAssumeRole: true
            token: string
            vaultAWSIAMServerID: string
            vaultRole: string
        enableHealthCheck:
          type: boolean
          example: true
        healthCheckEndpoint:
          type: string
          example: string
        namespace:
          type: string
          example: string
        provider:
          $ref: "#/components/schemas/SECRET_PROVIDER"
        secretDir:
          type: string
          example: string
        service:
          $ref: "#/components/schemas/AWSKMSServiceConfig"
        tls:
          $ref: "#/components/schemas/VaultKMSTlsClientConfig"
        url:
          type: string
          example: string
      required:
      - enableHealthCheck
      - provider
      example:
        auth:
          assumeRoleArn: string
          assumeRoleExternalId: string
          awsApiKey: string
          awsAuthenticationMethod: string
          awsSecretKey: string
          enableAssumeRole: true
          token: string
          vaultAWSIAMServerID: string
          vaultRole: string
        enableHealthCheck: true
        healthCheckEndpoint: string
        namespace: string
        secretDir: string
        url: string
    KMSHealthStatus:
      type: integer
      enum:
      - 0
      - 1
      - 2
      - 3
      example: 0
    KMSHealthTest:
      type: object
      properties:
        details:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        status:
          $ref: "#/components/schemas/KMSHealthStatus"
      required:
      - status
      example:
        details:
          additionalProp1: string
    KMSHealth:
      type: object
      properties:
        auth:
          $ref: "#/components/schemas/KMSHealthTest"
        connection:
          $ref: "#/components/schemas/KMSHealthTest"
        system:
          $ref: "#/components/schemas/KMSHealthTest"
      required:
      - auth
      - connection
      - system
      example: {}
    License:
      type: object
      properties:
        cls:
          type: string
          enum:
          - prod
          - trial
          - free
          example: prod
        email:
          type: string
          example: string
        exp:
          type: number
          example: 123.45
        f_ph:
          type: number
          example: 123.45
        f_phg:
          type: number
          example: 123.45
        guid:
          type: string
          example: string
        iat:
          type: number
          example: 123.45
        id:
          type: string
          example: string
        iss:
          type: string
          example: string
        license:
          type: string
          example: string
        quota:
          type: number
          example: 123.45
        sub:
          type: string
          example: string
        title:
          type: string
          example: string
      required:
      - cls
      - email
      - exp
      - f_ph
      - f_phg
      - guid
      - iat
      - id
      - iss
      - license
      - quota
      - title
      example:
        cls: prod
        email: string
        exp: 123.45
        f_ph: 123.45
        f_phg: 123.45
        guid: string
        iat: 123.45
        id: string
        iss: string
        license: string
        quota: 123.45
        sub: string
        title: string
    LicenseRequest:
      type: object
      properties:
        license:
          type: string
          example: string
      required:
      - license
      example:
        license: string
    DailyUsageMetrics:
      type: object
      properties:
        droppedBytes:
          type: number
          example: 123.45
        endTime:
          type: number
          example: 123.45
        exemptedLicenseInBytes:
          type: number
          example: 123.45
        inBytes:
          type: number
          example: 123.45
        inEvents:
          type: number
          example: 123.45
        inMetricsEvents:
          type: number
          example: 123.45
        outBytes:
          type: number
          example: 123.45
        outEvents:
          type: number
          example: 123.45
        startTime:
          type: number
          example: 123.45
      required:
      - endTime
      - exemptedLicenseInBytes
      - inBytes
      - inEvents
      - outBytes
      - outEvents
      - startTime
      example:
        droppedBytes: 123.45
        endTime: 123.45
        exemptedLicenseInBytes: 123.45
        inBytes: 123.45
        inEvents: 123.45
        inMetricsEvents: 123.45
        outBytes: 123.45
        outEvents: 123.45
        startTime: 123.45
    LoggerEntry:
      type: object
      properties:
        canDelete:
          type: boolean
          example: true
        id:
          type: string
          example: string
        level:
          type: string
          example: string
      required:
      - id
      - level
      example:
        canDelete: true
        id: string
        level: string
    LoggerConfig:
      type: object
      properties:
        channels:
          type: array
          items:
            $ref: "#/components/schemas/LoggerEntry"
          example:
          - 
        defaultRedactFields:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        id:
          type: string
          example: string
        limitRate:
          type: number
          example: 123.45
        maxSizeBytes:
          type: number
          example: 123.45
        redactFields:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        redactLabel:
          type: string
          example: string
      required:
      - channels
      - id
      - limitRate
      - maxSizeBytes
      - redactFields
      - redactLabel
      example:
        channels:
        - 
        defaultRedactFields:
        - string
        id: string
        limitRate: 123.45
        maxSizeBytes: 123.45
        redactFields:
        - string
        redactLabel: string
    LogFileInfo:
      type: object
      properties:
        id:
          type: string
          example: string
        path:
          type: string
          example: string
      required:
      - id
      - path
      example:
        id: string
        path: string
    InstallWarnings:
      example: string
    PackInstallInfo:
      type: object
      properties:
        author:
          type: string
          example: string
        description:
          type: string
          example: string
        displayName:
          type: string
          example: string
        exports:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        id:
          type: string
          example: string
        inputs:
          type: number
          example: 123.45
        isDisabled:
          type: boolean
          example: true
        minLogStreamVersion:
          type: string
          example: string
        outputs:
          type: number
          example: 123.45
        settings:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        source:
          type: string
          example: string
        spec:
          type: string
          example: string
        tags:
          type: object
          properties:
            dataType:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            domain:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            streamtags:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            technology:
              type: array
              items:
                type: string
                example: string
              example:
              - string
          required:
          - dataType
          - domain
          - streamtags
          - technology
          example:
            dataType:
            - string
            domain:
            - string
            streamtags:
            - string
            technology:
            - string
        version:
          type: string
          example: string
        warnings:
          $ref: "#/components/schemas/InstallWarnings"
      required:
      - id
      - warnings
      example:
        author: string
        description: string
        displayName: string
        exports:
        - string
        id: string
        inputs: 123.45
        isDisabled: true
        minLogStreamVersion: string
        outputs: 123.45
        settings:
          additionalProp1: string
        source: string
        spec: string
        tags:
          dataType:
          - string
          domain:
          - string
          streamtags:
          - string
          technology:
          - string
        version: string
    PackRequestBody:
      type: object
      properties:
        allowCustomFunctions:
          type: boolean
          example: true
        author:
          type: string
          example: string
        description:
          type: string
          example: string
        displayName:
          type: string
          example: string
        exports:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        force:
          type: boolean
          example: true
        id:
          type: string
          example: string
        isDisabled:
          type: boolean
          example: true
        inputs:
          type: number
          example: 123.45
        minLogStreamVersion:
          type: string
          example: string
        outputs:
          type: number
          example: 123.45
        source:
          type: string
          example: string
        spec:
          type: string
          example: string
        tags:
          type: object
          properties:
            dataType:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            domain:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            streamtags:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            technology:
              type: array
              items:
                type: string
                example: string
              example:
              - string
          required:
          - dataType
          - domain
          - streamtags
          - technology
          example:
            dataType:
            - string
            domain:
            - string
            streamtags:
            - string
            technology:
            - string
        version:
          type: string
          example: string
      required:
      - id
      example:
        allowCustomFunctions: true
        author: string
        description: string
        displayName: string
        exports:
        - string
        force: true
        id: string
        isDisabled: true
        inputs: 123.45
        minLogStreamVersion: string
        outputs: 123.45
        source: string
        spec: string
        tags:
          dataType:
          - string
          domain:
          - string
          streamtags:
          - string
          technology:
          - string
        version: string
    PackInfo:
      type: object
      properties:
        author:
          type: string
          example: string
        description:
          type: string
          example: string
        displayName:
          type: string
          example: string
        exports:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        id:
          type: string
          example: string
        inputs:
          type: number
          example: 123.45
        isDisabled:
          type: boolean
          example: true
        minLogStreamVersion:
          type: string
          example: string
        outputs:
          type: number
          example: 123.45
        settings:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        source:
          type: string
          example: string
        spec:
          type: string
          example: string
        tags:
          type: object
          properties:
            dataType:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            domain:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            streamtags:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            technology:
              type: array
              items:
                type: string
                example: string
              example:
              - string
          required:
          - dataType
          - domain
          - streamtags
          - technology
          example:
            dataType:
            - string
            domain:
            - string
            streamtags:
            - string
            technology:
            - string
        version:
          type: string
          example: string
      required:
      - id
      example:
        author: string
        description: string
        displayName: string
        exports:
        - string
        id: string
        inputs: 123.45
        isDisabled: true
        minLogStreamVersion: string
        outputs: 123.45
        settings:
          additionalProp1: string
        source: string
        spec: string
        tags:
          dataType:
          - string
          domain:
          - string
          streamtags:
          - string
          technology:
          - string
        version: string
    PackClone:
      type: object
      properties:
        dest:
          type: string
          example: string
        dstGroups:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        force:
          type: boolean
          example: true
        isDisabled:
          type: boolean
          example: true
        packs:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        srcGroup:
          type: string
          example: string
      required:
      - dstGroups
      - packs
      - srcGroup
      example:
        dest: string
        dstGroups:
        - string
        force: true
        isDisabled: true
        packs:
        - string
        srcGroup: string
    ReferencedEntity:
      type: object
      properties:
        id:
          type: string
          example: string
        type:
          type: string
          example: string
      required:
      - id
      - type
      example:
        id: string
        type: string
    ReferencingEntity:
      type: object
      properties:
        id:
          type: string
          example: string
        refs:
          type: array
          items:
            $ref: "#/components/schemas/ReferencedEntity"
          example:
          - 
        type:
          type: string
          example: string
      required:
      - id
      - refs
      - type
      example:
        id: string
        refs:
        - 
        type: string
    PublishPackToGitStatusType:
      type: string
      enum:
      - error
      - success
      - noop
      example: error
    PublishPackResponse:
      type: object
      properties:
        git:
          type: object
          properties:
            branch:
              type: string
              example: string
            commitHash:
              type: string
              example: string
            commitMessage:
              type: string
              example: string
          required:
          - branch
          - commitHash
          - commitMessage
          example:
            branch: string
            commitHash: string
            commitMessage: string
        id:
          type: string
          example: string
        message:
          type: string
          example: string
        source:
          type: string
          example: string
        status:
          $ref: "#/components/schemas/PublishPackToGitStatusType"
      required:
      - id
      example:
        git:
          branch: string
          commitHash: string
          commitMessage: string
        id: string
        message: string
        source: string
    PreviewDataParams:
      type: object
      properties:
        cpuProfile:
          type: boolean
          example: true
        dropped:
          type: boolean
          example: true
        enhanceMetricsOutput:
          type: boolean
          example: true
        events:
          type: array
          items:
            type: object
            additionalProperties: true
            example:
              additionalProp1: string
          example:
          - additionalProp1: string
        inputId:
          type: string
          example: string
        level:
          type: number
          example: 123.45
        memory:
          type: number
          example: 123.45
        mode:
          type: string
          enum:
          - pipe
          - route
          - routeAndSend
          example: pipe
        pipelineId:
          type: string
          example: string
        sampleId:
          type: string
          example: string
        samplePipelineId:
          type: string
          example: string
        timeout:
          type: number
          example: 123.45
      required:
      - mode
      - pipelineId
      - sampleId
      example:
        cpuProfile: true
        dropped: true
        enhanceMetricsOutput: true
        events:
        - additionalProp1: string
        inputId: string
        level: 123.45
        memory: 123.45
        mode: pipe
        pipelineId: string
        sampleId: string
        samplePipelineId: string
        timeout: 123.45
    ProcessEntry:
      type: object
      properties:
        env:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        id:
          type: string
          example: string
        pid:
          type: number
          example: 123.45
        restartOnExit:
          type: boolean
          example: true
        restarts:
          type: number
          example: 123.45
        startTime:
          type: number
          example: 123.45
        type:
          type: string
          example: string
      required:
      - id
      - restartOnExit
      - restarts
      - startTime
      - type
      example:
        env:
          additionalProp1: string
        id: string
        pid: 123.45
        restartOnExit: true
        restarts: 123.45
        startTime: 123.45
        type: string
    GitCommitSummary:
      type: object
      properties:
        author:
          type: object
          properties:
            email:
              type: string
              example: string
            name:
              type: string
              example: string
          required:
          - email
          - name
          example:
            email: string
            name: string
        branch:
          type: string
          example: string
        commit:
          type: string
          example: string
        files:
          type: object
          properties:
            created:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            deleted:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            modified:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            renamed:
              type: array
              items:
                type: string
                example: string
              example:
              - string
          example:
            created:
            - string
            deleted:
            - string
            modified:
            - string
            renamed:
            - string
        summary:
          type: object
          properties:
            changes:
              type: number
              example: 123.45
            deletions:
              type: number
              example: 123.45
            insertions:
              type: number
              example: 123.45
          required:
          - changes
          - deletions
          - insertions
          example:
            changes: 123.45
            deletions: 123.45
            insertions: 123.45
      required:
      - author
      - branch
      - commit
      - files
      - summary
      example:
        author:
          email: string
          name: string
        branch: string
        commit: string
        files:
          created:
          - string
          deleted:
          - string
          modified:
          - string
          renamed:
          - string
        summary:
          changes: 123.45
          deletions: 123.45
          insertions: 123.45
    ProjectGitCommitParams:
      type: object
      properties:
        effective:
          type: boolean
          example: true
        message:
          type: string
          example: string
      required:
      - message
      example:
        effective: true
        message: string
    GitFile:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: "#/components/schemas/GitFile"
          example:
          - 
        name:
          type: string
          example: string
        state:
          type: string
          example: string
      required:
      - name
      example:
        children:
        - 
        name: string
        state: string
    GitFilesResponse:
      type: object
      properties:
        commitMessage:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        count:
          type: number
          example: 123.45
        items:
          type: array
          items:
            $ref: "#/components/schemas/GitFile"
          example:
          - 
      required:
      - commitMessage
      - count
      - items
      example:
        commitMessage:
          additionalProp1: string
        count: 123.45
        items:
        - 
    GitRevertResult:
      type: object
      properties:
        audit:
          type: object
          properties:
            files:
              type: object
              properties:
                created:
                  type: array
                  items:
                    type: string
                    example: string
                  example:
                  - string
                deleted:
                  type: array
                  items:
                    type: string
                    example: string
                  example:
                  - string
                modified:
                  type: array
                  items:
                    type: string
                    example: string
                  example:
                  - string
                renamed:
                  type: array
                  items:
                    type: string
                    example: string
                  example:
                  - string
              example:
                created:
                - string
                deleted:
                - string
                modified:
                - string
                renamed:
                - string
            group:
              type: string
              example: string
            id:
              type: string
              example: string
          required:
          - files
          - group
          - id
          example:
            files:
              created:
              - string
              deleted:
              - string
              modified:
              - string
              renamed:
              - string
            group: string
            id: string
        reverted:
          type: boolean
          example: true
      required:
      - audit
      - reverted
      example:
        audit:
          files:
            created:
            - string
            deleted:
            - string
            modified:
            - string
            renamed:
            - string
          group: string
          id: string
        reverted: true
    LicenseLimits:
      type: object
      properties:
        edge_groups:
          type: number
          example: 123.45
        edge_procs:
          type: number
          example: 123.45
        kms:
          type: number
          example: 123.45
        lake_ddss:
          type: number
          example: 123.45
        lakehouse:
          type: number
          example: 123.45
        leader_resiliency:
          type: number
          example: 123.45
        max_executors_per_search:
          type: number
          example: 123.45
        notifications:
          type: number
          example: 123.45
        persistent_queue:
          type: number
          example: 123.45
        projects:
          type: number
          example: 123.45
        rbac:
          type: number
          example: 123.45
        remote_auth:
          type: number
          example: 123.45
        remote_git:
          type: number
          example: 123.45
        s3_bundle:
          type: number
          example: 123.45
        search_acceleration:
          type: number
          example: 123.45
        search_groups:
          type: number
          example: 123.45
        system_email:
          type: number
          example: 123.45
        worker_groups:
          type: number
          example: 123.45
        worker_procs:
          type: number
          example: 123.45
      required:
      - rbac
      - remote_auth
      - remote_git
      - worker_groups
      - worker_procs
      example:
        edge_groups: 123.45
        edge_procs: 123.45
        kms: 123.45
        lake_ddss: 123.45
        lakehouse: 123.45
        leader_resiliency: 123.45
        max_executors_per_search: 123.45
        notifications: 123.45
        persistent_queue: 123.45
        projects: 123.45
        rbac: 123.45
        remote_auth: 123.45
        remote_git: 123.45
        s3_bundle: 123.45
        search_acceleration: 123.45
        search_groups: 123.45
        system_email: 123.45
        worker_groups: 123.45
        worker_procs: 123.45
    LicenseInfo:
      type: object
      properties:
        email:
          type: string
          example: string
        isRegistered:
          type: boolean
          example: true
        isSplunkApp:
          type: boolean
          example: true
        limits:
          $ref: "#/components/schemas/LicenseLimits"
        type:
          type: string
          enum:
          - prod
          - trial
          - free
          example: prod
      required:
      - isRegistered
      - limits
      - type
      example:
        email: string
        isRegistered: true
        isSplunkApp: true
        type: prod
    SystemConf:
      type: object
      properties:
        installType:
          type: string
          example: string
        restart:
          type: string
          example: string
        upgrade:
          type: string
          example: string
      required:
      - installType
      - restart
      - upgrade
      example:
        installType: string
        restart: string
        upgrade: string
    SystemInfo:
      type: object
      properties:
        BUILD:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        apiPort:
          type: number
          example: 123.45
        conf:
          type: object
          properties:
            confVersion:
              type: string
              example: string
            inputs:
              type: number
              example: 123.45
            name:
              type: string
              example: string
            outputs:
              type: number
              example: 123.45
            pipelines:
              type: number
              example: 123.45
            routes:
              type: number
              example: 123.45
            rules:
              type: number
              example: 123.45
          required:
          - inputs
          - outputs
          - pipelines
          - routes
          - rules
          example:
            confVersion: string
            inputs: 123.45
            name: string
            outputs: 123.45
            pipelines: 123.45
            routes: 123.45
            rules: 123.45
        configPath:
          type: string
          example: string
        cpus:
          type: array
          items:
            type: object
            properties:
              model:
                type: string
                example: string
              speed:
                type: number
                example: 123.45
              times:
                type: object
                additionalProperties: true
                example:
                  additionalProp1: string
            required:
            - model
            - speed
            - times
            example:
              model: string
              speed: 123.45
              times:
                additionalProp1: string
          example:
          - model: string
            speed: 123.45
            times:
              additionalProp1: string
        diskUsage:
          type: object
          properties:
            bytesAvailable:
              type: number
              example: 123.45
            bytesUsed:
              type: number
              example: 123.45
            diskPath:
              type: string
              example: string
            totalDiskSize:
              type: number
              example: 123.45
          required:
          - bytesAvailable
          - bytesUsed
          - diskPath
          - totalDiskSize
          example:
            bytesAvailable: 123.45
            bytesUsed: 123.45
            diskPath: string
            totalDiskSize: 123.45
        distMode:
          $ref: "#/components/schemas/AppMode"
        env:
          type: object
          example: {}
        guid:
          type: string
          example: string
        hasCloudWorkspace:
          type: boolean
          example: true
        hostname:
          type: string
          example: string
        installPath:
          type: string
          example: string
        isCriblSandbox:
          type: boolean
          example: true
        isFedRampEnabled:
          type: boolean
          example: true
        isFipsEnabled:
          type: boolean
          example: true
        license:
          $ref: "#/components/schemas/LicenseInfo"
        limits:
          type: object
          properties:
            samples:
              type: object
              properties:
                maxSize:
                  type: string
                  example: string
              required:
              - maxSize
              example:
                maxSize: string
          required:
          - samples
          example:
            samples:
              maxSize: string
        loadavg:
          type: array
          items:
            type: number
            example: 123.45
          example:
          - 123.45
        memory:
          type: object
          properties:
            free:
              type: number
              example: 123.45
            total:
              type: number
              example: 123.45
          required:
          - free
          - total
          example:
            free: 123.45
            total: 123.45
        messages:
          type: array
          items:
            $ref: "#/components/schemas/BulletinMessage"
          example:
          - 
        net:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        os:
          type: object
          properties:
            arch:
              type: string
              example: string
            endianness:
              type: string
              example: string
            platform:
              type: string
              example: string
            release:
              type: string
              example: string
            type:
              type: string
              example: string
          required:
          - arch
          - endianness
          - platform
          - release
          - type
          example:
            arch: string
            endianness: string
            platform: string
            release: string
            type: string
        systemConf:
          $ref: "#/components/schemas/SystemConf"
        uptime:
          type: number
          example: 123.45
        version:
          type: string
          example: string
        workerProcesses:
          type: number
          example: 123.45
      required:
      - BUILD
      - apiPort
      - conf
      - configPath
      - cpus
      - diskUsage
      - distMode
      - env
      - guid
      - hostname
      - installPath
      - license
      - limits
      - loadavg
      - memory
      - messages
      - net
      - os
      - systemConf
      - uptime
      - version
      - workerProcesses
      example:
        BUILD:
          additionalProp1: string
        apiPort: 123.45
        conf:
          confVersion: string
          inputs: 123.45
          name: string
          outputs: 123.45
          pipelines: 123.45
          routes: 123.45
          rules: 123.45
        configPath: string
        cpus:
        - model: string
          speed: 123.45
          times:
            additionalProp1: string
        diskUsage:
          bytesAvailable: 123.45
          bytesUsed: 123.45
          diskPath: string
          totalDiskSize: 123.45
        env: {}
        guid: string
        hasCloudWorkspace: true
        hostname: string
        installPath: string
        isCriblSandbox: true
        isFedRampEnabled: true
        isFipsEnabled: true
        limits:
          samples:
            maxSize: string
        loadavg:
        - 123.45
        memory:
          free: 123.45
          total: 123.45
        messages:
        - 
        net:
          additionalProp1: string
        os:
          arch: string
          endianness: string
          platform: string
          release: string
          type: string
        uptime: 123.45
        version: string
        workerProcesses: 123.45
    Diag:
      type: object
      properties:
        id:
          type: string
          example: string
        modTime:
          type: number
          example: 123.45
        path:
          type: string
          example: string
        size:
          type: number
          example: 123.45
      required:
      - id
      - path
      example:
        id: string
        modTime: 123.45
        path: string
        size: 123.45
    SendDiagBundle:
      type: object
      properties:
        sendToCribl:
          title: Send to Cribl Support
          description: Send diagnostic bundle to Cribl Support
          type: boolean
          default: false
          example: false
        path:
          type: string
          title: Diag bundle file path
          description: Existing bundle that will be sent to Cribl Support. Max 100MB.
          example: string
        renameJs:
          title: Rename .js files
          description: Append .txt to JavaScript files
          type: boolean
          default: true
          example: true
        includeMetrics:
          title: Include metrics
          description: Disable to exclude metrics from the bundle
          type: boolean
          default: true
          example: true
        includeGit:
          title: Include git
          description: Disable to exclude the git audit from the bundle
          type: boolean
          default: true
          example: true
        includeTopTalkers:
          title: Include top talkers
          description: Include data about your 10 highest-volume Sources, Destinations, Pipelines, Routes, and Packs in the diagnostic bundle
          type: boolean
          default: false
          example: false
        maxIncludeJobs:
          title: Latest number of jobs
          description: Number of jobs, including all tasks that will be included in the bundle
          type: number
          minimum: 0
          example: 123.45
        includeInstallLogs:
          title: Include installation logs
          description: Enable to include installation logs in the bundle (Windows only)
          type: boolean
          default: false
          example: false
      example:
        sendToCribl: false
        path: string
        renameJs: true
        includeMetrics: true
        includeGit: true
        includeTopTalkers: false
        maxIncludeJobs: 123.45
        includeInstallLogs: false
    MetricNameInfo:
      type: object
      properties:
        dims:
          type: array
          items:
            type: object
            properties:
              count:
                type: number
                example: 123.45
              name:
                type: string
                example: string
              values:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
            required:
            - count
            - name
            - values
            example:
              count: 123.45
              name: string
              values:
              - string
          example:
          - count: 123.45
            name: string
            values:
            - string
        name:
          type: string
          example: string
      required:
      - dims
      - name
      example:
        dims:
        - count: 123.45
          name: string
          values:
          - string
        name: string
    SystemMetricsEnum:
      type: object
      properties:
        dimKeyFilter:
          oneOf:
          - type: string
            example: string
          - type: array
            items:
              type: string
              example: string
            example:
            - string
          example: string
        dimValueFilter:
          oneOf:
          - type: string
            example: string
          - type: array
            items:
              type: string
              example: string
            example:
            - string
          example: string
        earliest:
          type: number
          example: 123.45
        filterExpr:
          type: string
          example: string
        maxValues:
          type: number
          example: 123.45
        metricNameFilter:
          oneOf:
          - type: string
            example: string
          - type: array
            items:
              type: string
              example: string
            example:
            - string
          example: string
      example:
        dimKeyFilter: string
        dimValueFilter: string
        earliest: 123.45
        filterExpr: string
        maxValues: 123.45
        metricNameFilter: string
    SearchAggMode:
      type: string
      nullable: true
      enum:
      - Coordinated
      - CoordinatedSuppressPreview
      - DistributedCoordinated
      - DistributedCoordinatedSuppressPreview
      - Federated
      example: Coordinated
    AggregationMgrOptions:
      type: object
      properties:
        aggregations:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        cumulative:
          type: boolean
          example: true
        dotsAsLiterals:
          type: boolean
          example: true
        flushEventLimit:
          type: number
          example: 123.45
        flushMemLimit:
          type: number
          example: 123.45
        hostname:
          type: string
          example: string
        idleTimeLimitSeconds:
          type: number
          example: 123.45
        lagToleranceSeconds:
          type: number
          example: 123.45
        metricsMode:
          type: boolean
          example: true
        prefix:
          type: string
          example: string
        preserveSplitByStructure:
          type: boolean
          example: true
        searchAggMode:
          $ref: "#/components/schemas/SearchAggMode"
        splitBys:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        sufficientStatsOnly:
          type: boolean
          example: true
        timeWindowSeconds:
          type: number
          example: 123.45
      required:
      - aggregations
      - cumulative
      - flushEventLimit
      - flushMemLimit
      - hostname
      - metricsMode
      - sufficientStatsOnly
      - timeWindowSeconds
      example:
        aggregations:
        - string
        cumulative: true
        dotsAsLiterals: true
        flushEventLimit: 123.45
        flushMemLimit: 123.45
        hostname: string
        idleTimeLimitSeconds: 123.45
        lagToleranceSeconds: 123.45
        metricsMode: true
        prefix: string
        preserveSplitByStructure: true
        splitBys:
        - string
        sufficientStatsOnly: true
        timeWindowSeconds: 123.45
    MetricsStore:
      type: object
      properties: {}
      example: {}
    MetricsAggOpts:
      type: object
      properties:
        aggs:
          $ref: "#/components/schemas/AggregationMgrOptions"
        alwaysBounds:
          type: boolean
          example: true
        earliest:
          oneOf:
          - type: string
            example: string
          - type: number
            example: 123.45
          example: string
        latest:
          oneOf:
          - type: string
            example: string
          - type: number
            example: 123.45
          example: string
        metrics:
          $ref: "#/components/schemas/MetricsStore"
        where:
          type: string
          example: string
      required:
      - aggs
      example:
        alwaysBounds: true
        earliest: string
        latest: string
        where: string
    AuthConfig:
      type: object
      properties:
        fallback:
          type: boolean
          example: true
        fallbackBadLogin:
          type: boolean
          example: true
        filter_type:
          type: string
          example: string
        host:
          type: string
          example: string
        port:
          type: number
          example: 123.45
        ssl:
          type: boolean
          example: true
        type:
          type: string
          enum:
          - ldap
          - splunk
          - local
          - saas
          - saml
          - openid
          example: ldap
      required:
      - fallback
      - fallbackBadLogin
      - host
      - port
      - ssl
      - type
      example:
        fallback: true
        fallbackBadLogin: true
        filter_type: string
        host: string
        port: 123.45
        ssl: true
        type: ldap
    UpgradeGroupSettings:
      type: object
      properties:
        isRolling:
          type: boolean
          example: true
        quantity:
          type: number
          example: 123.45
        retryCount:
          type: number
          example: 123.45
        retryDelay:
          type: number
          example: 123.45
      example:
        isRolling: true
        quantity: 123.45
        retryCount: 123.45
        retryDelay: 123.45
    UpgradePackageUrls:
      type: object
      properties:
        packageHashUrl:
          type: string
          example: string
        packageUrl:
          type: string
          example: string
      required:
      - packageUrl
      example:
        packageHashUrl: string
        packageUrl: string
    UpgradeSettings:
      type: object
      properties:
        automaticUpgradeCheckPeriod:
          type: string
          example: string
        disableAutomaticUpgrade:
          type: boolean
          example: true
        enableLegacyEdgeUpgrade:
          type: boolean
          example: true
        packageUrls:
          type: array
          items:
            $ref: "#/components/schemas/UpgradePackageUrls"
          example:
          - 
        upgradeSource:
          type: string
          example: string
      required:
      - disableAutomaticUpgrade
      - enableLegacyEdgeUpgrade
      - upgradeSource
      example:
        automaticUpgradeCheckPeriod: string
        disableAutomaticUpgrade: true
        enableLegacyEdgeUpgrade: true
        packageUrls:
        - 
        upgradeSource: string
    SystemSettingsConf:
      type: object
      properties:
        api:
          type: object
          properties:
            baseUrl:
              type: string
              example: string
            disableApiCache:
              type: boolean
              example: true
            disabled:
              type: boolean
              example: true
            headers:
              type: object
              example: {}
            host:
              type: string
              example: string
            idleSessionTTL:
              type: number
              example: 123.45
            listenOnPort:
              type: boolean
              example: true
            loginRateLimit:
              type: string
              example: string
            port:
              type: number
              example: 123.45
            protocol:
              type: string
              example: string
            scripts:
              type: boolean
              example: true
            sensitiveFields:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            ssl:
              type: object
              properties:
                caPath:
                  type: string
                  example: string
                certPath:
                  type: string
                  example: string
                disabled:
                  type: boolean
                  example: true
                passphrase:
                  type: string
                  example: string
                privKeyPath:
                  type: string
                  example: string
              required:
              - certPath
              - disabled
              - passphrase
              - privKeyPath
              example:
                caPath: string
                certPath: string
                disabled: true
                passphrase: string
                privKeyPath: string
            ssoRateLimit:
              type: string
              example: string
            workerRemoteAccess:
              type: boolean
              example: true
          required:
          - disabled
          - host
          - port
          - protocol
          - ssl
          - workerRemoteAccess
          example:
            baseUrl: string
            disableApiCache: true
            disabled: true
            headers: {}
            host: string
            idleSessionTTL: 123.45
            listenOnPort: true
            loginRateLimit: string
            port: 123.45
            protocol: string
            scripts: true
            sensitiveFields:
            - string
            ssl:
              caPath: string
              certPath: string
              disabled: true
              passphrase: string
              privKeyPath: string
            ssoRateLimit: string
            workerRemoteAccess: true
        backups:
          type: object
          properties:
            backupPersistence:
              type: string
              example: string
            backupsDirectory:
              type: string
              example: string
          required:
          - backupPersistence
          - backupsDirectory
          example:
            backupPersistence: string
            backupsDirectory: string
        customLogo:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            logoDescription:
              type: string
              example: string
            logoImage:
              type: string
              example: string
          required:
          - enabled
          - logoDescription
          - logoImage
          example:
            enabled: true
            logoDescription: string
            logoImage: string
        pii:
          type: object
          properties:
            enablePiiDetection:
              type: boolean
              example: true
          required:
          - enablePiiDetection
          example:
            enablePiiDetection: true
        proxy:
          type: object
          properties:
            useEnvVars:
              type: boolean
              example: true
          required:
          - useEnvVars
          example:
            useEnvVars: true
        rollback:
          type: object
          properties:
            rollbackEnabled:
              type: boolean
              example: true
            rollbackRetries:
              type: number
              example: 123.45
            rollbackTimeout:
              type: number
              example: 123.45
          required:
          - rollbackEnabled
          example:
            rollbackEnabled: true
            rollbackRetries: 123.45
            rollbackTimeout: 123.45
        shutdown:
          type: object
          properties:
            drainTimeout:
              type: number
              example: 123.45
          required:
          - drainTimeout
          example:
            drainTimeout: 123.45
        sni:
          type: object
          properties:
            disableSNIRouting:
              type: boolean
              example: true
          required:
          - disableSNIRouting
          example:
            disableSNIRouting: true
        sockets:
          type: object
          properties:
            directory:
              type: string
              example: string
          example:
            directory: string
        system:
          type: object
          properties:
            intercom:
              type: boolean
              example: true
            upgrade:
              enum:
              - false
              - api
              example: false
          required:
          - intercom
          - upgrade
          example:
            intercom: true
            upgrade: false
        tls:
          type: object
          properties:
            defaultCipherList:
              type: string
              example: string
            defaultEcdhCurve:
              type: string
              example: string
            maxVersion:
              type: string
              example: string
            minVersion:
              type: string
              example: string
            rejectUnauthorized:
              type: boolean
              example: true
          required:
          - defaultCipherList
          - defaultEcdhCurve
          - maxVersion
          - minVersion
          - rejectUnauthorized
          example:
            defaultCipherList: string
            defaultEcdhCurve: string
            maxVersion: string
            minVersion: string
            rejectUnauthorized: true
        upgradeGroupSettings:
          $ref: "#/components/schemas/UpgradeGroupSettings"
        upgradeSettings:
          $ref: "#/components/schemas/UpgradeSettings"
        workers:
          type: object
          properties:
            count:
              type: number
              example: 123.45
            enableHeapSnapshots:
              type: boolean
              example: true
            loadThrottlePerc:
              type: number
              example: 123.45
            memory:
              type: number
              example: 123.45
            minimum:
              type: number
              example: 123.45
            startupMaxConns:
              type: number
              example: 123.45
            startupThrottleTimeout:
              type: number
              example: 123.45
            v8SingleThread:
              type: boolean
              example: true
          required:
          - count
          - memory
          - minimum
          example:
            count: 123.45
            enableHeapSnapshots: true
            loadThrottlePerc: 123.45
            memory: 123.45
            minimum: 123.45
            startupMaxConns: 123.45
            startupThrottleTimeout: 123.45
            v8SingleThread: true
      required:
      - api
      - backups
      - customLogo
      - pii
      - proxy
      - rollback
      - shutdown
      - sni
      - system
      - tls
      - upgradeGroupSettings
      - upgradeSettings
      - workers
      example:
        api:
          baseUrl: string
          disableApiCache: true
          disabled: true
          headers: {}
          host: string
          idleSessionTTL: 123.45
          listenOnPort: true
          loginRateLimit: string
          port: 123.45
          protocol: string
          scripts: true
          sensitiveFields:
          - string
          ssl:
            caPath: string
            certPath: string
            disabled: true
            passphrase: string
            privKeyPath: string
          ssoRateLimit: string
          workerRemoteAccess: true
        backups:
          backupPersistence: string
          backupsDirectory: string
        customLogo:
          enabled: true
          logoDescription: string
          logoImage: string
        pii:
          enablePiiDetection: true
        proxy:
          useEnvVars: true
        rollback:
          rollbackEnabled: true
          rollbackRetries: 123.45
          rollbackTimeout: 123.45
        shutdown:
          drainTimeout: 123.45
        sni:
          disableSNIRouting: true
        sockets:
          directory: string
        system:
          intercom: true
          upgrade: false
        tls:
          defaultCipherList: string
          defaultEcdhCurve: string
          maxVersion: string
          minVersion: string
          rejectUnauthorized: true
        workers:
          count: 123.45
          enableHeapSnapshots: true
          loadThrottlePerc: 123.45
          memory: 123.45
          minimum: 123.45
          startupMaxConns: 123.45
          startupThrottleTimeout: 123.45
          v8SingleThread: true
    GitOpsType:
      type: string
      enum:
      - none
      - pull
      - push
      example: none
    GitSettings:
      type: object
      properties:
        authType:
          type: string
          example: string
        autoAction:
          type: string
          example: string
        autoActionMessage:
          type: string
          example: string
        autoActionSchedule:
          type: string
          example: string
        branch:
          type: string
          example: string
        commitDeploySingleAction:
          type: boolean
          example: true
        copilotAutoGitCommitMessages:
          type: boolean
          example: true
        defaultCommitMessage:
          type: string
          example: string
        gitOps:
          $ref: "#/components/schemas/GitOpsType"
        password:
          type: string
          example: string
        remote:
          type: string
          example: string
        sshKey:
          type: string
          example: string
        strictHostKeyChecking:
          type: boolean
          example: true
        timeout:
          type: number
          example: 123.45
        user:
          type: string
          example: string
      example:
        authType: string
        autoAction: string
        autoActionMessage: string
        autoActionSchedule: string
        branch: string
        commitDeploySingleAction: true
        copilotAutoGitCommitMessages: true
        defaultCommitMessage: string
        password: string
        remote: string
        sshKey: string
        strictHostKeyChecking: true
        timeout: 123.45
        user: string
    MaxConcurrentSearchesType:
      oneOf:
      - type: number
        example: 123.45
      example: 123.45
    SearchSettings:
      type: object
      properties:
        compressObjectCacheArtifacts:
          type: boolean
          example: true
        fieldSummaryMaxFields:
          type: number
          example: 123.45
        fieldSummaryMaxNestedDepth:
          type: number
          example: 123.45
        maxConcurrentSearches:
          $ref: "#/components/schemas/MaxConcurrentSearchesType"
        maxExecutorsPerSearch:
          type: number
          example: 123.45
        maxResultsPerSearch:
          type: number
          example: 123.45
        searchHistoryMaxJobs:
          type: number
          example: 123.45
        searchQueueLength:
          oneOf:
          - type: number
            example: 123.45
          example: 123.45
        warmPoolSize:
          oneOf:
          - type: number
            example: 123.45
          - enum:
            - auto
            example: auto
          example: 123.45
        writeOnlyProviderSecrets:
          type: boolean
          example: true
      required:
      - compressObjectCacheArtifacts
      - fieldSummaryMaxFields
      - fieldSummaryMaxNestedDepth
      - maxConcurrentSearches
      - maxExecutorsPerSearch
      - maxResultsPerSearch
      - searchHistoryMaxJobs
      - searchQueueLength
      - warmPoolSize
      - writeOnlyProviderSecrets
      example:
        compressObjectCacheArtifacts: true
        fieldSummaryMaxFields: 123.45
        fieldSummaryMaxNestedDepth: 123.45
        maxExecutorsPerSearch: 123.45
        maxResultsPerSearch: 123.45
        searchHistoryMaxJobs: 123.45
        searchQueueLength: 123.45
        warmPoolSize: 123.45
        writeOnlyProviderSecrets: true
    JobSettings:
      type: object
      properties:
        concurrentJobLimit:
          type: number
          example: 123.45
        concurrentScheduledJobLimit:
          type: number
          example: 123.45
        concurrentSystemJobLimit:
          type: number
          example: 123.45
        concurrentSystemTaskLimit:
          type: number
          example: 123.45
        concurrentTaskLimit:
          type: number
          example: 123.45
        disableTasks:
          type: boolean
          example: true
        finishedJobArtifactsLimit:
          type: number
          example: 123.45
        finishedTaskArtifactsLimit:
          type: number
          example: 123.45
        jobArtifactsReaperPeriod:
          type: string
          example: string
        jobTimeout:
          type: string
          example: string
        maxTaskPerc:
          type: number
          example: 123.45
        schedulingPolicy:
          type: string
          example: string
        taskHeartbeatPeriod:
          type: number
          example: 123.45
        taskManifestFlushPeriodMs:
          type: number
          example: 123.45
        taskManifestMaxBufferSize:
          type: number
          example: 123.45
        taskManifestReadBufferSize:
          type: string
          example: string
        taskPollTimeoutMs:
          type: number
          example: 123.45
      required:
      - concurrentJobLimit
      - concurrentScheduledJobLimit
      - concurrentSystemJobLimit
      - concurrentSystemTaskLimit
      - concurrentTaskLimit
      - finishedJobArtifactsLimit
      - finishedTaskArtifactsLimit
      - jobArtifactsReaperPeriod
      - jobTimeout
      - maxTaskPerc
      - schedulingPolicy
      - taskHeartbeatPeriod
      - taskManifestFlushPeriodMs
      - taskManifestMaxBufferSize
      - taskManifestReadBufferSize
      - taskPollTimeoutMs
      example:
        concurrentJobLimit: 123.45
        concurrentScheduledJobLimit: 123.45
        concurrentSystemJobLimit: 123.45
        concurrentSystemTaskLimit: 123.45
        concurrentTaskLimit: 123.45
        disableTasks: true
        finishedJobArtifactsLimit: 123.45
        finishedTaskArtifactsLimit: 123.45
        jobArtifactsReaperPeriod: string
        jobTimeout: string
        maxTaskPerc: 123.45
        schedulingPolicy: string
        taskHeartbeatPeriod: 123.45
        taskManifestFlushPeriodMs: 123.45
        taskManifestMaxBufferSize: 123.45
        taskManifestReadBufferSize: string
        taskPollTimeoutMs: 123.45
    EdgeHeartbeatMetricsMode:
      type: string
      enum:
      - minimal
      - basic
      - all
      - custom
      example: minimal
    Limits:
      type: object
      properties:
        cpuProfileTTL:
          type: string
          example: string
        edgeMetricsCustomExpression:
          type: string
          example: string
        edgeMetricsMode:
          $ref: "#/components/schemas/EdgeHeartbeatMetricsMode"
        edgeNodesCount:
          type: number
          example: 123.45
        enableMetricsPersistence:
          type: boolean
          example: true
        eventsMetadataSources:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        lookupMaxSize:
          type: string
          example: string
        lookupMaxTotalSize:
          type: string
          example: string
        maxMetrics:
          type: number
          example: 123.45
        maxPQSize:
          type: string
          example: string
        metricsDirectory:
          type: string
          example: string
        metricsDropList:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        metricsFieldsBlacklist:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        metricsGCPeriod:
          type: string
          example: string
        metricsMaxCardinality:
          type: number
          example: 123.45
        metricsMaxDiskSpace:
          type: string
          example: string
        metricsNeverDropList:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        metricsWorkerIdBlacklist:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        minFreeSpace:
          type: string
          example: string
        samples:
          type: object
          properties:
            maxSize:
              type: string
              example: string
          required:
          - maxSize
          example:
            maxSize: string
      required:
      - cpuProfileTTL
      - enableMetricsPersistence
      - metricsDirectory
      - metricsFieldsBlacklist
      - metricsGCPeriod
      - metricsNeverDropList
      - metricsWorkerIdBlacklist
      - minFreeSpace
      - samples
      example:
        cpuProfileTTL: string
        edgeMetricsCustomExpression: string
        edgeNodesCount: 123.45
        enableMetricsPersistence: true
        eventsMetadataSources:
        - string
        lookupMaxSize: string
        lookupMaxTotalSize: string
        maxMetrics: 123.45
        maxPQSize: string
        metricsDirectory: string
        metricsDropList:
        - string
        metricsFieldsBlacklist:
        - string
        metricsGCPeriod: string
        metricsMaxCardinality: 123.45
        metricsMaxDiskSpace: string
        metricsNeverDropList:
        - string
        metricsWorkerIdBlacklist:
        - string
        minFreeSpace: string
        samples:
          maxSize: string
    RedisCacheLimits:
      type: object
      properties:
        clientTrackingMechanism:
          type: string
          example: string
        enableServerAssist:
          type: boolean
          example: true
        keyTTLSecs:
          type: number
          example: 123.45
        maxCacheSize:
          type: number
          example: 123.45
        maxNumKeys:
          type: number
          example: 123.45
        servicePeriodSecs:
          type: number
          example: 123.45
      example:
        clientTrackingMechanism: string
        enableServerAssist: true
        keyTTLSecs: 123.45
        maxCacheSize: 123.45
        maxNumKeys: 123.45
        servicePeriodSecs: 123.45
    RedisConnectionLimits:
      type: object
      properties:
        disabled:
          type: boolean
          example: true
        maxConnections:
          type: number
          example: 123.45
      example:
        disabled: true
        maxConnections: 123.45
    RedisLimits:
      type: object
      properties:
        connections:
          $ref: "#/components/schemas/RedisConnectionLimits"
      required:
      - connections
      example: {}
    CommonServiceLimitConfigs:
      type: object
      properties:
        memoryLimit:
          type: string
          example: string
      required:
      - memoryLimit
      example:
        memoryLimit: string
    ServicesLimits:
      type: object
      properties:
        connections:
          $ref: "#/components/schemas/CommonServiceLimitConfigs"
        metrics:
          $ref: "#/components/schemas/CommonServiceLimitConfigs"
        notifications:
          $ref: "#/components/schemas/CommonServiceLimitConfigs"
      required:
      - connections
      - metrics
      - notifications
      example: {}
    SystemSettings:
      type: object
      properties:
        api:
          type: object
          properties:
            baseUrl:
              type: string
              example: string
            disableApiCache:
              type: boolean
              example: true
            disabled:
              type: boolean
              example: true
            headers:
              type: object
              example: {}
            host:
              type: string
              example: string
            idleSessionTTL:
              type: number
              example: 123.45
            listenOnPort:
              type: boolean
              example: true
            loginRateLimit:
              type: string
              example: string
            port:
              type: number
              example: 123.45
            protocol:
              type: string
              example: string
            scripts:
              type: boolean
              example: true
            sensitiveFields:
              type: array
              items:
                type: string
                example: string
              example:
              - string
            ssl:
              type: object
              properties:
                caPath:
                  type: string
                  example: string
                certPath:
                  type: string
                  example: string
                disabled:
                  type: boolean
                  example: true
                passphrase:
                  type: string
                  example: string
                privKeyPath:
                  type: string
                  example: string
              required:
              - certPath
              - disabled
              - passphrase
              - privKeyPath
              example:
                caPath: string
                certPath: string
                disabled: true
                passphrase: string
                privKeyPath: string
            ssoRateLimit:
              type: string
              example: string
            workerRemoteAccess:
              type: boolean
              example: true
          required:
          - disabled
          - host
          - port
          - protocol
          - ssl
          - workerRemoteAccess
          example:
            baseUrl: string
            disableApiCache: true
            disabled: true
            headers: {}
            host: string
            idleSessionTTL: 123.45
            listenOnPort: true
            loginRateLimit: string
            port: 123.45
            protocol: string
            scripts: true
            sensitiveFields:
            - string
            ssl:
              caPath: string
              certPath: string
              disabled: true
              passphrase: string
              privKeyPath: string
            ssoRateLimit: string
            workerRemoteAccess: true
        auth:
          $ref: "#/components/schemas/AuthConfig"
        backups:
          type: object
          properties:
            backupPersistence:
              type: string
              example: string
            backupsDirectory:
              type: string
              example: string
          required:
          - backupPersistence
          - backupsDirectory
          example:
            backupPersistence: string
            backupsDirectory: string
        customLogo:
          type: object
          properties:
            enabled:
              type: boolean
              example: true
            logoDescription:
              type: string
              example: string
            logoImage:
              type: string
              example: string
          required:
          - enabled
          - logoDescription
          - logoImage
          example:
            enabled: true
            logoDescription: string
            logoImage: string
        distributed:
          type: object
          properties:
            mode:
              $ref: "#/components/schemas/AppMode"
          required:
          - mode
          example: {}
        fips:
          type: boolean
          example: true
        git:
          $ref: "#/components/schemas/GitSettings"
        jobLimits:
          $ref: "#/components/schemas/JobSettings"
        limits:
          $ref: "#/components/schemas/Limits"
        pii:
          type: object
          properties:
            enablePiiDetection:
              type: boolean
              example: true
          required:
          - enablePiiDetection
          example:
            enablePiiDetection: true
        proxy:
          type: object
          properties:
            useEnvVars:
              type: boolean
              example: true
          required:
          - useEnvVars
          example:
            useEnvVars: true
        redisCacheLimits:
          $ref: "#/components/schemas/RedisCacheLimits"
        redisLimits:
          $ref: "#/components/schemas/RedisLimits"
        rollback:
          type: object
          properties:
            rollbackEnabled:
              type: boolean
              example: true
            rollbackRetries:
              type: number
              example: 123.45
            rollbackTimeout:
              type: number
              example: 123.45
          required:
          - rollbackEnabled
          example:
            rollbackEnabled: true
            rollbackRetries: 123.45
            rollbackTimeout: 123.45
        searchLimits:
          $ref: "#/components/schemas/SearchSettings"
        servicesLimits:
          $ref: "#/components/schemas/ServicesLimits"
        shutdown:
          type: object
          properties:
            drainTimeout:
              type: number
              example: 123.45
          required:
          - drainTimeout
          example:
            drainTimeout: 123.45
        sni:
          type: object
          properties:
            disableSNIRouting:
              type: boolean
              example: true
          required:
          - disableSNIRouting
          example:
            disableSNIRouting: true
        sockets:
          type: object
          properties:
            directory:
              type: string
              example: string
          example:
            directory: string
        system:
          type: object
          properties:
            intercom:
              type: boolean
              example: true
            upgrade:
              enum:
              - false
              - api
              example: false
          required:
          - intercom
          - upgrade
          example:
            intercom: true
            upgrade: false
        tls:
          type: object
          properties:
            defaultCipherList:
              type: string
              example: string
            defaultEcdhCurve:
              type: string
              example: string
            maxVersion:
              type: string
              example: string
            minVersion:
              type: string
              example: string
            rejectUnauthorized:
              type: boolean
              example: true
          required:
          - defaultCipherList
          - defaultEcdhCurve
          - maxVersion
          - minVersion
          - rejectUnauthorized
          example:
            defaultCipherList: string
            defaultEcdhCurve: string
            maxVersion: string
            minVersion: string
            rejectUnauthorized: true
        upgradeGroupSettings:
          $ref: "#/components/schemas/UpgradeGroupSettings"
        upgradeSettings:
          $ref: "#/components/schemas/UpgradeSettings"
        workers:
          type: object
          properties:
            count:
              type: number
              example: 123.45
            enableHeapSnapshots:
              type: boolean
              example: true
            loadThrottlePerc:
              type: number
              example: 123.45
            memory:
              type: number
              example: 123.45
            minimum:
              type: number
              example: 123.45
            startupMaxConns:
              type: number
              example: 123.45
            startupThrottleTimeout:
              type: number
              example: 123.45
            v8SingleThread:
              type: boolean
              example: true
          required:
          - count
          - memory
          - minimum
          example:
            count: 123.45
            enableHeapSnapshots: true
            loadThrottlePerc: 123.45
            memory: 123.45
            minimum: 123.45
            startupMaxConns: 123.45
            startupThrottleTimeout: 123.45
            v8SingleThread: true
      required:
      - api
      - auth
      - backups
      - customLogo
      - distributed
      - fips
      - git
      - jobLimits
      - limits
      - pii
      - proxy
      - redisCacheLimits
      - redisLimits
      - rollback
      - searchLimits
      - servicesLimits
      - shutdown
      - sni
      - system
      - tls
      - upgradeGroupSettings
      - upgradeSettings
      - workers
      example:
        api:
          baseUrl: string
          disableApiCache: true
          disabled: true
          headers: {}
          host: string
          idleSessionTTL: 123.45
          listenOnPort: true
          loginRateLimit: string
          port: 123.45
          protocol: string
          scripts: true
          sensitiveFields:
          - string
          ssl:
            caPath: string
            certPath: string
            disabled: true
            passphrase: string
            privKeyPath: string
          ssoRateLimit: string
          workerRemoteAccess: true
        backups:
          backupPersistence: string
          backupsDirectory: string
        customLogo:
          enabled: true
          logoDescription: string
          logoImage: string
        distributed: {}
        fips: true
        pii:
          enablePiiDetection: true
        proxy:
          useEnvVars: true
        rollback:
          rollbackEnabled: true
          rollbackRetries: 123.45
          rollbackTimeout: 123.45
        shutdown:
          drainTimeout: 123.45
        sni:
          disableSNIRouting: true
        sockets:
          directory: string
        system:
          intercom: true
          upgrade: false
        tls:
          defaultCipherList: string
          defaultEcdhCurve: string
          maxVersion: string
          minVersion: string
          rejectUnauthorized: true
        workers:
          count: 123.45
          enableHeapSnapshots: true
          loadThrottlePerc: 123.45
          memory: 123.45
          minimum: 123.45
          startupMaxConns: 123.45
          startupThrottleTimeout: 123.45
          v8SingleThread: true
    PublicSettings:
      type: object
      properties:
        apiProtocol:
          type: string
          example: string
        intercom:
          type: boolean
          example: true
        isRegistered:
          type: boolean
          example: true
      required:
      - apiProtocol
      - intercom
      - isRegistered
      example:
        apiProtocol: string
        intercom: true
        isRegistered: true
    VersionInfo:
      type: object
      properties:
        architecture:
          type: string
          example: string
        build:
          type: string
          example: string
        downloadUrl:
          type: string
          example: string
        fullVersion:
          type: string
          example: string
        major:
          type: number
          example: 123.45
        minor:
          type: number
          example: 123.45
        platform:
          type: string
          example: string
        point:
          type: number
          example: 123.45
        preRelease:
          type: string
          example: string
      required:
      - build
      - fullVersion
      - major
      - minor
      example:
        architecture: string
        build: string
        downloadUrl: string
        fullVersion: string
        major: 123.45
        minor: 123.45
        platform: string
        point: 123.45
        preRelease: string
    UpgradeResult:
      type: object
      properties:
        availableVersions:
          type: array
          items:
            $ref: "#/components/schemas/VersionInfo"
          example:
          - 
        canUpgrade:
          type: boolean
          example: true
        installedVersion:
          $ref: "#/components/schemas/VersionInfo"
        isSuccess:
          type: boolean
          example: true
        message:
          type: string
          example: string
        upgradedToVersion:
          $ref: "#/components/schemas/VersionInfo"
      required:
      - availableVersions
      - canUpgrade
      - installedVersion
      - isSuccess
      - message
      - upgradedToVersion
      example:
        availableVersions:
        - 
        canUpgrade: true
        isSuccess: true
        message: string
    UpgradeMasterRequest:
      type: object
      properties:
        packages:
          title: Custom Path
          description: Provide your own URLs or local paths for platform-specific Cribl packages
          type: array
          items:
            type: object
            required:
            - packageUrl
            properties:
              packageUrl:
                type: string
                title: Platform-Specific Package Location
                description: Package HTTP URL or local path
                pattern: (\d+)\.(\d+)\.?(\d+)?-?([-.a-zA-Z0-9]*)-([a-z0-9]{8})-(linux|darwin|win32)-([0-9a-zA-Z]+)
                minLength: 1
                example: string
              packageHashUrl:
                type: string
                title: Package Hash Location
                description: Package's MD5 or SHA256 hash HTTP URL or local path
                pattern: (\d+)\.(\d+)\.?(\d+)?-?([-.a-zA-Z0-9]*)-([a-z0-9]{8})-(linux|darwin|win32)-([0-9a-zA-Z]+)\.(tgz|msi)?\.(md5|sha256)
                minLength: 1
                example: string
            example:
              packageUrl: string
              packageHashUrl: string
          example:
          - packageUrl: string
            packageHashUrl: string
      example:
        packages:
        - packageUrl: string
          packageHashUrl: string
    UiStatePatch:
      type: object
      required:
      - op
      - value
      properties:
        op:
          type: string
          enum:
          - set
          - push-recent
          example: set
        value:
          example: string
        args:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
      example:
        op: set
        value: string
        args:
          additionalProp1: string
    GitCommitParams:
      type: object
      properties:
        effective:
          type: boolean
          example: true
        files:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        group:
          type: string
          example: string
        message:
          type: string
          example: string
      required:
      - message
      example:
        effective: true
        files:
        - string
        group: string
        message: string
    GitInfo:
      type: object
      properties:
        remote:
          oneOf:
          - type: string
            example: string
          - type: boolean
            example: true
          example: string
        versioning:
          type: boolean
          example: true
      required:
      - remote
      - versioning
      example:
        remote: string
        versioning: true
    GitRevertParams:
      type: object
      properties:
        commit:
          type: string
          example: string
        force:
          type: boolean
          example: true
        message:
          type: string
          example: string
      required:
      - commit
      - message
      example:
        commit: string
        force: true
        message: string
    GitStatusResult:
      type: object
      properties:
        ahead:
          type: number
          example: 123.45
        behind:
          type: number
          example: 123.45
        conflicted:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        created:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        current:
          type: string
          example: string
        deleted:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        files:
          type: array
          items:
            type: object
            properties:
              index:
                type: string
                example: string
              path:
                type: string
                example: string
              working_dir:
                type: string
                example: string
            required:
            - index
            - path
            - working_dir
            example:
              index: string
              path: string
              working_dir: string
          example:
          - index: string
            path: string
            working_dir: string
        modified:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        not_added:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        renamed:
          type: array
          items:
            type: object
            properties:
              from:
                type: string
                example: string
              to:
                type: string
                example: string
            required:
            - from
            - to
            example:
              from: string
              to: string
          example:
          - from: string
            to: string
        staged:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        tracking:
          type: string
          example: string
      required:
      - ahead
      - behind
      - conflicted
      - created
      - current
      - deleted
      - files
      - modified
      - not_added
      - renamed
      - staged
      - tracking
      example:
        ahead: 123.45
        behind: 123.45
        conflicted:
        - string
        created:
        - string
        current: string
        deleted:
        - string
        files:
        - index: string
          path: string
          working_dir: string
        modified:
        - string
        not_added:
        - string
        renamed:
        - from: string
          to: string
        staged:
        - string
        tracking: string
    SearchEvent:
      example: string
    PreviewResponseBody:
      type: object
      properties:
        count:
          type: number
          example: 123.45
        events:
          type: array
          items:
            $ref: "#/components/schemas/SearchEvent"
          example:
          - 
        processingTimeMS:
          type: number
          example: 123.45
        useFormattedVisualization:
          type: boolean
          example: true
      required:
      - count
      - events
      - processingTimeMS
      - useFormattedVisualization
      example:
        count: 123.45
        events:
        - 
        processingTimeMS: 123.45
        useFormattedVisualization: true
    EventBreakerRuleFields:
      type: object
      properties:
        name:
          type: string
          example: string
        value:
          type: string
          example: string
      required:
      - name
      - value
      example:
        name: string
        value: string
    ParserMode:
      type: string
      enum:
      - extract
      - reserialize
      example: extract
    EventBreakerRule:
      type: object
      properties:
        cleanFields:
          type: boolean
          example: true
        condition:
          type: string
          example: string
        delimiter:
          type: string
          example: string
        delimiterRegex:
          type: string
          example: string
        disabled:
          type: boolean
          example: true
        escapeChar:
          type: string
          example: string
        eventBreakerRegex:
          type: string
          default: "/^/"
          example: "/^/"
        fields:
          type: array
          items:
            $ref: "#/components/schemas/EventBreakerRuleFields"
          example:
          - 
        fieldsLineRegex:
          type: string
          example: string
        headerLineRegex:
          type: string
          example: string
        index:
          type: number
          example: 123.45
        jsonArrayField:
          type: string
          example: string
        jsonExtractAll:
          type: boolean
          example: true
        jsonTimeField:
          type: string
          example: string
        maxEventBytes:
          type: number
          example: 123.45
        name:
          type: string
          example: string
        nullFieldVal:
          type: string
          example: string
        parser:
          oneOf:
          - type: object
            properties:
              allowedKeyChars:
                type: boolean
                example: true
              allowedValueChars:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              cleanFields:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              delimChar:
                type: string
                example: string
              dstField:
                type: string
                example: string
              escapeChar:
                type: string
                example: string
              fieldFilterExpr:
                type: string
                example: string
              fields:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              keep:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              mode:
                $ref: "#/components/schemas/ParserMode"
              nullValue:
                type: string
                example: string
              quoteChar:
                type: string
                example: string
              remove:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              srcField:
                type: string
                example: string
              type:
                type: string
                enum:
                - clf
                - csv
                - delim
                - elff
                example: clf
            required:
            - mode
            - srcField
            - type
            example:
              allowedKeyChars: true
              allowedValueChars:
              - string
              cleanFields:
              - string
              delimChar: string
              dstField: string
              escapeChar: string
              fieldFilterExpr: string
              fields:
              - string
              keep:
              - string
              nullValue: string
              quoteChar: string
              remove:
              - string
              srcField: string
              type: clf
          - type: object
            properties:
              dstField:
                type: string
                example: string
              mode:
                $ref: "#/components/schemas/ParserMode"
              pattern:
                type: string
                example: string
              patternList:
                type: array
                items:
                  type: object
                  properties:
                    pattern:
                      type: string
                      example: string
                  required:
                  - pattern
                  example:
                    pattern: string
                example:
                - pattern: string
              source:
                type: string
                example: string
              srcField:
                type: string
                example: string
              type:
                type: string
                enum:
                - grok
                example: grok
            required:
            - mode
            - srcField
            - type
            example:
              dstField: string
              pattern: string
              patternList:
              - pattern: string
              source: string
              srcField: string
              type: grok
          - type: object
            properties:
              cleanFields:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              dstField:
                type: string
                example: string
              fieldFilterExpr:
                type: string
                example: string
              fields:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              keep:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              mode:
                $ref: "#/components/schemas/ParserMode"
              remove:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              srcField:
                type: string
                example: string
              type:
                type: string
                enum:
                - json
                example: json
            required:
            - mode
            - srcField
            - type
            example:
              cleanFields:
              - string
              dstField: string
              fieldFilterExpr: string
              fields:
              - string
              keep:
              - string
              remove:
              - string
              srcField: string
              type: json
          - type: object
            properties:
              allowedKeyChars:
                type: boolean
                example: true
              allowedValueChars:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              cleanFields:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              delimChar:
                type: string
                example: string
              dstField:
                type: string
                example: string
              escapeChar:
                type: string
                example: string
              fieldFilterExpr:
                type: string
                example: string
              fields:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              keep:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              mode:
                $ref: "#/components/schemas/ParserMode"
              nullValue:
                type: string
                example: string
              quoteChar:
                type: string
                example: string
              remove:
                type: array
                items:
                  type: string
                  example: string
                example:
                - string
              srcField:
                type: string
                example: string
              type:
                type: string
                enum:
                - kvp
                example: kvp
            required:
            - mode
            - srcField
            - type
            example:
              allowedKeyChars: true
              allowedValueChars:
              - string
              cleanFields:
              - string
              delimChar: string
              dstField: string
              escapeChar: string
              fieldFilterExpr: string
              fields:
              - string
              keep:
              - string
              nullValue: string
              quoteChar: string
              remove:
              - string
              srcField: string
              type: kvp
          example:
            allowedKeyChars: true
            allowedValueChars:
            - string
            cleanFields:
            - string
            delimChar: string
            dstField: string
            escapeChar: string
            fieldFilterExpr: string
            fields:
            - string
            keep:
            - string
            nullValue: string
            quoteChar: string
            remove:
            - string
            srcField: string
            type: clf
        parserEnabled:
          type: boolean
          example: true
        quoteChar:
          type: string
          example: string
        shouldUseDataRaw:
          type: boolean
          example: true
        timeField:
          type: string
          example: string
        timestamp:
          type: object
          properties:
            format:
              type: string
              example: string
            length:
              type: number
              example: 123.45
            type:
              type: string
              enum:
              - auto
              - format
              - current
              example: auto
          required:
          - type
          example:
            format: string
            length: 123.45
            type: auto
        timestampAnchorRegex:
          type: string
          example: string
        timestampEarliest:
          type: string
          example: string
        timestampLatest:
          type: string
          example: string
        timestampTimezone:
          oneOf:
          - type: string
            example: string
          - type: object
            properties:
              name:
                type: string
                example: string
              offsets:
                type: array
                items:
                  type: number
                  example: 123.45
                example:
                - 123.45
              untils:
                type: array
                items:
                  type: number
                  example: 123.45
                example:
                - 123.45
            required:
            - name
            - offsets
            - untils
            example:
              name: string
              offsets:
              - 123.45
              untils:
              - 123.45
          example: string
        type:
          type: string
          enum:
          - regex
          - timestamp
          - json
          - csv
          - json_array
          - header
          - aws_cloudtrail
          - aws_vpcflow
          example: regex
      required:
      - condition
      - maxEventBytes
      - name
      - timestamp
      - timestampAnchorRegex
      - timestampTimezone
      example:
        cleanFields: true
        condition: string
        delimiter: string
        delimiterRegex: string
        disabled: true
        escapeChar: string
        eventBreakerRegex: "/^/"
        fields:
        - 
        fieldsLineRegex: string
        headerLineRegex: string
        index: 123.45
        jsonArrayField: string
        jsonExtractAll: true
        jsonTimeField: string
        maxEventBytes: 123.45
        name: string
        nullFieldVal: string
        parser:
          allowedKeyChars: true
          allowedValueChars:
          - string
          cleanFields:
          - string
          delimChar: string
          dstField: string
          escapeChar: string
          fieldFilterExpr: string
          fields:
          - string
          keep:
          - string
          nullValue: string
          quoteChar: string
          remove:
          - string
          srcField: string
          type: clf
        parserEnabled: true
        quoteChar: string
        shouldUseDataRaw: true
        timeField: string
        timestamp:
          format: string
          length: 123.45
          type: auto
        timestampAnchorRegex: string
        timestampEarliest: string
        timestampLatest: string
        timestampTimezone: string
        type: regex
    DatatypePreviewInput:
      oneOf:
      - type: object
        properties:
          dataset:
            type: string
            example: string
          type:
            type: string
            enum:
            - dataset
            example: dataset
        required:
        - dataset
        - type
        example:
          dataset: string
          type: dataset
      - type: object
        properties:
          rawData:
            type: string
            example: string
          type:
            type: string
            enum:
            - rawData
            example: rawData
        required:
        - rawData
        - type
        example:
          rawData: string
          type: rawData
      example:
        dataset: string
        type: dataset
    DatatypePreviewRequestBody:
      type: object
      properties:
        eventBreakerRule:
          $ref: "#/components/schemas/EventBreakerRule"
        input:
          $ref: "#/components/schemas/DatatypePreviewInput"
      required:
      - input
      example: {}
    SearchHealthCheckStatus:
      type: object
      properties:
        reported_at:
          type: number
          example: 123.45
        status:
          type: string
          enum:
          - red
          - green
          example: red
      required:
      - reported_at
      - status
      example:
        reported_at: 123.45
        status: red
    PreviewOptions:
      type: object
      properties:
        earliest:
          oneOf:
          - type: string
            example: string
          - type: number
            example: 123.45
          example: string
        latest:
          oneOf:
          - type: string
            example: string
          - type: number
            example: 123.45
          example: string
      example:
        earliest: string
        latest: string
    PreviewRequestBody:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: "#/components/schemas/SearchEvent"
          example:
          - 
        options:
          $ref: "#/components/schemas/PreviewOptions"
        query:
          type: string
          example: string
      required:
      - events
      - query
      example:
        events:
        - 
        query: string
    AMTrustPolicy:
      type: object
      properties:
        Statement:
          type: array
          items:
            type: object
            properties:
              Action:
                oneOf:
                - type: string
                  example: string
                - type: array
                  items:
                    type: string
                    example: string
                  example:
                  - string
                example: string
              Condition:
                type: object
                properties:
                  StringEquals:
                    type: object
                    example: {}
                example:
                  StringEquals: {}
              Effect:
                type: string
                example: string
              Principal:
                type: object
                properties:
                  AWS:
                    type: string
                    example: string
                required:
                - AWS
                example:
                  AWS: string
            required:
            - Action
            - Effect
            - Principal
            example:
              Action: string
              Condition:
                StringEquals: {}
              Effect: string
              Principal:
                AWS: string
          example:
          - Action: string
            Condition:
              StringEquals: {}
            Effect: string
            Principal:
              AWS: string
        Version:
          type: string
          example: string
      required:
      - Statement
      - Version
      example:
        Statement:
        - Action: string
          Condition:
            StringEquals: {}
          Effect: string
          Principal:
            AWS: string
        Version: string
    TrustPolicy:
      type: object
      properties:
        id:
          type: string
          example: string
        policy:
          $ref: "#/components/schemas/AMTrustPolicy"
      required:
      - id
      - policy
      example:
        id: string
    SearchJobResultsJobInfo:
      example: string
    SearchJobResults:
      type: object
      properties:
        isFinished:
          type: boolean
          example: true
        job:
          $ref: "#/components/schemas/SearchJobResultsJobInfo"
        limit:
          type: number
          example: 123.45
        offset:
          type: number
          example: 123.45
        persistedEventCount:
          type: number
          example: 123.45
        totalEventCount:
          type: number
          example: 123.45
      required:
      - isFinished
      - job
      - offset
      - persistedEventCount
      - totalEventCount
      example:
        isFinished: true
        limit: 123.45
        offset: 123.45
        persistedEventCount: 123.45
        totalEventCount: 123.45
    ContainerdMount:
      type: object
      properties:
        destination:
          type: string
          example: string
        source:
          type: string
          example: string
      required:
      - destination
      - source
      example:
        destination: string
        source: string
    ContainerdRoot:
      type: object
      properties:
        path:
          type: string
          example: string
      required:
      - path
      example:
        path: string
    ContainerdContainer:
      type: object
      properties:
        mounts:
          type: array
          items:
            $ref: "#/components/schemas/ContainerdMount"
          example:
          - 
        root:
          $ref: "#/components/schemas/ContainerdRoot"
      required:
      - mounts
      - root
      example:
        mounts:
        - 
    ContainerdTask:
      type: object
      properties:
        process:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
      example:
        process:
          additionalProp1: string
    ContainerdInfo:
      type: object
      properties:
        container:
          $ref: "#/components/schemas/ContainerdContainer"
        image:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        metrics:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        namespace:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        task:
          $ref: "#/components/schemas/ContainerdTask"
      required:
      - container
      example:
        image:
          additionalProp1: string
        metrics:
          additionalProp1: string
        namespace:
          additionalProp1: string
    DockerGraphDriverData:
      type: object
      properties:
        MergedDir:
          type: string
          example: string
      required:
      - MergedDir
      example:
        MergedDir: string
    DockerGraphDriver:
      type: object
      properties:
        Data:
          $ref: "#/components/schemas/DockerGraphDriverData"
      example: {}
    DockerMount:
      type: object
      properties:
        Destination:
          type: string
          example: string
        Source:
          type: string
          example: string
      required:
      - Destination
      - Source
      example:
        Destination: string
        Source: string
    DockerInfo:
      type: object
      properties:
        Config:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        GraphDriver:
          $ref: "#/components/schemas/DockerGraphDriver"
        LogPath:
          type: string
          example: string
        Mounts:
          type: array
          items:
            $ref: "#/components/schemas/DockerMount"
          example:
          - 
        NetworkSettings:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        Path:
          type: string
          example: string
        State:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
        Stats:
          type: object
          additionalProperties: true
          example:
            additionalProp1: string
      example:
        Config:
          additionalProp1: string
        LogPath: string
        Mounts:
        - 
        NetworkSettings:
          additionalProp1: string
        Path: string
        State:
          additionalProp1: string
        Stats:
          additionalProp1: string
    ContainerPort:
      type: object
      properties:
        privatePort:
          type: number
          example: 123.45
        publicPort:
          type: number
          example: 123.45
      required:
      - privatePort
      - publicPort
      example:
        privatePort: 123.45
        publicPort: 123.45
    Container:
      type: object
      properties:
        command:
          oneOf:
          - type: string
            example: string
          - type: array
            items:
              type: string
              example: string
            example:
            - string
          example: string
        containerd:
          $ref: "#/components/schemas/ContainerdInfo"
        created:
          type: number
          example: 123.45
        docker:
          $ref: "#/components/schemas/DockerInfo"
        id:
          type: string
          example: string
        image:
          type: string
          example: string
        ips:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        name:
          type: string
          example: string
        ports:
          type: array
          items:
            $ref: "#/components/schemas/ContainerPort"
          example:
          - 
        status:
          type: string
          example: string
        type:
          type: string
          enum:
          - docker
          - containerd
          example: docker
      required:
      - command
      - created
      - id
      - image
      - name
      - status
      - type
      example:
        command: string
        created: 123.45
        id: string
        image: string
        ips:
        - string
        name: string
        ports:
        - 
        status: string
        type: docker
    FileProcessInfo:
      type: object
      properties:
        pid:
          type: number
          example: 123.45
        process:
          type: string
          example: string
      required:
      - pid
      - process
      example:
        pid: 123.45
        process: string
    EdgeFile:
      type: object
      properties:
        filePath:
          type: string
          example: string
        id:
          type: string
          example: string
        modTime:
          type: number
          example: 123.45
        mode:
          type: string
          example: string
        owner:
          type: number
          example: 123.45
        processInfo:
          type: array
          items:
            $ref: "#/components/schemas/FileProcessInfo"
          example:
          - 
        size:
          type: number
          example: 123.45
      required:
      - filePath
      - id
      - modTime
      - mode
      - owner
      - size
      example:
        filePath: string
        id: string
        modTime: 123.45
        mode: string
        owner: 123.45
        processInfo:
        - 
        size: 123.45
    Process:
      type: object
      properties:
        id:
          type: string
          example: string
        pid:
          type: number
          example: 123.45
        ppid:
          type: number
          example: 123.45
      required:
      - id
      - pid
      - ppid
      example:
        id: string
        pid: 123.45
        ppid: 123.45
    Collector:
      $ref: "#/components/schemas/Function"
    Executor:
      $ref: "#/components/schemas/Function"
    ProjectConfig:
      type: object
      properties:
        consumers:
          type: object
          example: {}
        description:
          type: string
          example: string
        destinations:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        id:
          type: string
          example: string
        subscriptions:
          type: array
          items:
            type: string
            example: string
          example:
          - string
      required:
      - destinations
      - id
      - subscriptions
      example:
        consumers: {}
        description: string
        destinations:
        - string
        id: string
        subscriptions:
        - string
    ProjectDestination:
      type: object
      properties:
        id:
          type: string
          example: string
        type:
          type: string
          example: string
      required:
      - id
      - type
      example:
        id: string
        type: string
    Connection:
      type: object
      properties:
        output:
          type: string
          example: string
        pipeline:
          type: string
          example: string
      required:
      - output
      example:
        output: string
        pipeline: string
    SubscriptionConsumer:
      type: object
      properties:
        connections:
          type: array
          items:
            $ref: "#/components/schemas/Connection"
          example:
          - 
        disabled:
          type: boolean
          example: true
        type:
          type: string
          example: string
      example:
        connections:
        - 
        disabled: true
        type: string
    Subscription:
      type: object
      properties:
        description:
          type: string
          example: string
        disabled:
          type: boolean
          example: true
        filter:
          type: string
          example: string
        id:
          type: string
          example: string
        pipeline:
          type: string
          example: string
      required:
      - id
      - pipeline
      example:
        description: string
        disabled: true
        filter: string
        id: string
        pipeline: string
    CloudProvider:
      type: string
      nullable: true
      enum:
      - aws
      - azure
      example: aws
    Group:
      type: object
      properties:
        onPrem:
          type: boolean
          example: true
        workerRemoteAccess:
          type: boolean
          example: true
        streamtags:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        cloud:
          type: object
          properties:
            provider:
              type: string
              enum: ["aws", "azure"]
              example: "aws"
            region:
              type: string
              example: string
          required:
          - provider
          - region
          example:
            provider: "aws"
            region: string
        provisioned:
          type: boolean
          example: true
        isFleet:
          type: boolean
          description: Must be true if product is 'edge'
          example: true
        estimatedIngestRate:
          type: number
          example: 123.45
        name:
          type: string
          example: string
        id:
          type: string
          example: string
      required:
      - provisioned
      - id
      example:
        onPrem: true
        workerRemoteAccess: true
        streamtags:
        - string
        cloud:
          provider: "aws"
          region: string
        provisioned: true
        isFleet: true
        estimatedIngestRate: 123.45
        name: string
        id: string
    DeployRequest:
      type: object
      properties:
        version:
          type: string
          example: string
      required:
      - version
      example:
        version: string
    ConfigGroupCloud:
      type: object
      properties:
        provider:
          $ref: "#/components/schemas/CloudProvider"
        region:
          type: string
          example: string
      required:
      - provider
      - region
      example:
        region: string
    Commit:
      type: object
      properties:
        author_email:
          type: string
          example: string
        author_name:
          type: string
          example: string
        date:
          type: string
          example: string
        hash:
          type: string
          example: string
        message:
          type: string
          example: string
        short:
          type: string
          example: string
      required:
      - date
      - hash
      - message
      - short
      example:
        author_email: string
        author_name: string
        date: string
        hash: string
        message: string
        short: string
    ConfigGroupLookups:
      type: object
      properties:
        context:
          type: string
          example: string
        lookups:
          type: array
          items:
            type: object
            properties:
              deployedVersion:
                type: string
                example: string
              file:
                type: string
                example: string
              version:
                type: string
                example: string
            required:
            - file
            example:
              deployedVersion: string
              file: string
              version: string
          example:
          - deployedVersion: string
            file: string
            version: string
      required:
      - context
      - lookups
      example:
        context: string
        lookups:
        - deployedVersion: string
          file: string
          version: string
    ConfigGroup:
      type: object
      properties:
        cloud:
          $ref: "#/components/schemas/ConfigGroupCloud"
        configVersion:
          type: string
          example: string
        deployingWorkerCount:
          type: number
          example: 123.45
        description:
          type: string
          example: string
        estimatedIngestRate:
          type: number
          example: 123.45
        git:
          type: object
          properties:
            commit:
              type: string
              example: string
            localChanges:
              type: number
              example: 123.45
            log:
              type: array
              items:
                $ref: "#/components/schemas/Commit"
              example:
              - 
          example:
            commit: string
            localChanges: 123.45
            log:
            - 
        id:
          type: string
          example: string
        incompatibleWorkerCount:
          type: number
          example: 123.45
        inherits:
          type: string
          example: string
        isFleet:
          type: boolean
          example: true
        isSearch:
          type: boolean
          example: true
        lookupDeployments:
          type: array
          items:
            $ref: "#/components/schemas/ConfigGroupLookups"
          example:
          - 
        name:
          type: string
          example: string
        onPrem:
          type: boolean
          example: true
        provisioned:
          type: boolean
          example: true
        streamtags:
          type: array
          items:
            type: string
            example: string
          example:
          - string
        tags:
          type: string
          example: string
        type:
          type: string
          enum:
          - lake_access
          example: lake_access
        upgradeVersion:
          type: string
          example: string
        workerCount:
          type: number
          example: 123.45
        workerRemoteAccess:
          type: boolean
          example: true
      required:
      - id
      example:
        configVersion: string
        deployingWorkerCount: 123.45
        description: string
        estimatedIngestRate: 123.45
        git:
          commit: string
          localChanges: 123.45
          log:
          - 
        id: string
        incompatibleWorkerCount: 123.45
        inherits: string
        isFleet: true
        isSearch: true
        lookupDeployments:
        - 
        name: string
        onPrem: true
        provisioned: true
        streamtags:
        - string
        tags: string
        type: lake_access
        upgradeVersion: string
        workerCount: 123.45
        workerRemoteAccess: true
    TeamAccessControlList:
      type: object
      properties:
        perms:
          type: array
          items:
            $ref: "#/components/schemas/ResourcePolicy"
          example:
          - 
        team:
          type: string
          example: string
      required:
      - perms
      - team
      example:
        perms:
        - 
        team: string
security:
- bearerAuth: []
- clientOauth: []
- organizationId: []
- workspaceId: []
- cloudDomain: []
tags:
- name: ai-settings
  description: Actions related to Ai Settings
- name: appscope-configs
  description: Actions related to Appscope Configs
- name: auth
  description: Actions related to authentication. Do not use the /auth endpoints in Cribl.Cloud deployments. Instead, follow the instructions at https://docs.cribl.io/stream/api-tutorials/#criblcloud to authenticate for Cribl.Cloud.
- name: authorize
  description: Actions related to Authorize
- name: banners
  description: Actions related to Banners
- name: certificates
  description: Actions related to Certificates
- name: changelog
  description: Actions related to Changelog
- name: click-house
  description: Actions related to ClickHouse
- name: clui
  description: Actions related to CLUI
- name: collectors
  description: Actions related to Collectors
- name: conditions
  description: Actions related to Conditions
- name: consent
  description: Actions related to Consent
- name: dashboardCategories
  description: Actions related to DashboardCategories
- name: dashboards
  description: Actions related to Dashboards
- name: database-connections
  description: Actions related to Database Connections
- name: datasets
  description: Actions related to Datasets
- name: diag
  description: Actions related to diagnostics
- name: distributed
  description: Actions related to Distributed
- name: edge
  description: Actions enabled in Edge
- name: edgeAppScopeProcesses
  description: Actions related to Edge AppScope processes
- name: edgeContainers
  description: Actions related to Edge containers
- name: edgeEvents
  description: Actions related to EdgeEvents
- name: edgeFiles
  description: Actions related to Edge Files
- name: edgeLs
  description: Actions related to Edge listing
- name: edgeProcesses
  description: Actions related to Edge processes
- name: event_breaker_rules
  description: Actions related to Event Breaker rules
- name: events
  description: Actions related to Events
- name: executors
  description: Actions related to Executors
- name: expressions
  description: Actions related to expressions
- name: features
  description: Actions related to Features
- name: file
  description: Actions related to File
- name: fileSampler
  description: Actions related to FileSampler
- name: functions
  description: Actions related to functions
- name: git
  description: Actions related to Git
- name: global_variables
  description: Actions related to Global Variables
- name: grokfiles
  description: Actions related to Grok files
- name: groups
  description: Actions related to Groups
- name: health
  description: Actions related to REST server health
- name: hmac-functions
  description: Actions related to HMAC functions
- name: ingest
  description: Actions related to Ingest
- name: inputs
  description: Actions related to inputs
- name: iometrics
  description: Actions related to source/destination metrics
- name: jobs
  description: Actions related to Jobs
- name: keys
  description: Actions related to encryption keys
- name: kube-logs
  description: Actions related to Kube Logs
- name: kube-proxy
  description: Actions related to Kube Proxy
- name: lake
  description: Actions related to Lake
- name: licenses
  description: Actions related to licenses. The <code>/licenses</code> endpoints do not apply to Cribl.Cloud deployments.
- name: logger
  description: Actions related to Logger
- name: logging
  description: Actions related to logging
- name: lookups
  description: Actions related to lookups
- name: macros
  description: Actions related to Macros
- name: messages
  description: Actions related to messages
- name: metrics
  description: Actions related to metrics
- name: notification-targets
  description: Actions related to Notification Targets
- name: notifications
  description: Actions related to Notifications
- name: onlyOnPrem
- name: outputs
  description: Actions related to outputs
- name: packs
  description: Actions related to Packs
- name: parquetschemas
  description: Actions related to Parquet schemas
- name: parsers
  description: Actions related to parsers
- name: pipelines
  description: Actions related to Pipelines
- name: policies
  description: Actions related to Policies
- name: preview
  description: Actions related to data preview
- name: processes
  description: Actions related to Processes
- name: profiler
  description: Actions related to Profiler
- name: projects
  description: Actions related to Projects
- name: protobuflibraries
  description: Actions related to Protobuf libraries
- name: regexes
  description: Actions related to regular expressions
- name: roles
  description: Actions related to Roles
- name: routes
  description: Actions related to Routes
- name: samples
  description: Actions related to samples
- name: saved-jobs
  description: Actions related to Saved Jobs
- name: savedQueries
  description: Actions related to saved queries
- name: schemas
  description: Actions related to Schemas
- name: scripts
  description: Actions related to scripts
- name: search
  description: Actions related to Search
- name: secrets
  description: Actions related to Secrets
- name: security
  description: Actions related to Security
- name: subscriptions
  description: Actions related to Subscriptions
- name: system
  description: Actions related to system settings
- name: teams
  description: Actions related to Teams
- name: teams ACL
  description: Actions related to Teams ACL
- name: trust-policies
  description: Actions related to Trust Policies
- name: uiState
  description: Actions related to UiState
- name: usage-groups
  description: Actions related to Usage Groups
- name: users
  description: Actions related to users. The <code>/system/users</code> endpoints do not apply to Cribl.Cloud deployments. Instead use <code>/products/{product}/users</code>
- name: users ACL
  description: Actions related to Users ACL
- name: users,onlyOnPrem
  description: Actions related to Users,onlyOnPrem
- name: versioning
  description: Actions related to Versioning
- name: workers
  description: Actions related to Workers
paths:
  "/m/{groupId}/system/projects/{projectId}/subscriptions":
    get:
      operationId: getSystemProjectsSubscriptionsByGroupIdByAndProjectId
      tags:
      - projects
      - subscriptions
      summary: Get the Subscriptions associated with the Project
      description: Get the Subscriptions associated with the Project
      deprecated: false
      responses:
        "200":
          description: A list of Subscription objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
  "/m/{groupId}/system/projects/{projectId}/version/count":
    get:
      operationId: getSystemProjectsVersionCountByGroupIdAndProjectId
      tags:
      - projects
      - versioning
      - git
      summary: Get the count of files of changed
      description: Get the count of files of changed
      deprecated: false
      responses:
        "200":
          description: A list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
  "/m/{groupId}/system/projects/{projectId}/version/diff":
    get:
      operationId: getSystemProjectsVersionDiffByGroupIdAndProjectId
      tags:
      - projects
      - versioning
      - git
      summary: Get the textual diff for given commit
      description: Get the textual diff for given commit
      deprecated: false
      responses:
        "200":
          description: A list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
      - name: commit
        in: query
        required: false
        schema:
          type: string
          example: string
  "/m/{groupId}/system/projects/{projectId}/version/files":
    get:
      operationId: getSystemProjectsVersionFilesByGroupIdAndProjectId
      tags:
      - projects
      - versioning
      - git
      summary: Get the files changed
      description: Get the files changed
      deprecated: false
      responses:
        "200":
          description: A list of GitFilesResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitFilesResponse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
  "/m/{groupId}/system/projects/{projectId}/version/commit":
    post:
      operationId: createSystemProjectsVersionCommitByGroupIdAndProjectId
      tags:
      - projects
      - versioning
      - git
      summary: Commit project changes
      description: Commit project changes
      deprecated: false
      responses:
        "200":
          description: A list of GitCommitSummary objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitCommitSummary"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: ProjectGitCommitParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectGitCommitParams"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
  "/m/{groupId}/system/projects/{projectId}/subscriptions/{subscriptionId}/capture":
    post:
      operationId: createSystemProjectsSubscriptionsCaptureByGroupIdAndSubscriptionId
      tags:
      - preview
      - samples
      - projects
      summary: Capture live incoming data from a particular Project and Subscription at the Subscription
      description: Capture live incoming data from a particular Project and Subscription at the Subscription
      deprecated: false
      responses:
        "200":
          description: A list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: CaptureParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaptureParams"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
      - name: subscriptionId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Subscription Id
  "/m/{groupId}/system/projects/{projectId}/capture":
    post:
      operationId: createSystemProjectsCaptureByGroupIdAndProjectId
      tags:
      - preview
      - samples
      - projects
      summary: Capture live incoming data from a particular Project and Subscription at the Destination
      description: Capture live incoming data from a particular Project and Subscription at the Destination
      deprecated: false
      responses:
        "200":
          description: A list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: CaptureParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaptureParams"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
  "/m/{groupId}/system/projects/{projectId}/preview":
    post:
      operationId: createSystemProjectsPreviewByGroupIdAndProjectId
      tags:
      - preview
      - samples
      - projects
      summary: Sends sample events through a Pipeline  for specified Project and returns the results
      description: Sends sample events through a Pipeline  for specified Project and returns the results
      deprecated: false
      responses:
        "200":
          description: A list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: PreviewDataParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreviewDataParams"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
  "/m/{groupId}/system/projects/{projectId}/pipelines":
    get:
      operationId: getSystemProjectsPipelinesByGroupIdAndProjectId
      tags:
      - pipelines
      - projects
      summary: Get A list of Pipeline objects for specified Project
      description: Get A list of Pipeline objects for specified Project
      responses:
        "200":
          description: A list of Pipeline objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
    post:
      operationId: createSystemProjectsPipelinesByGroupIdAndProjectId
      tags:
      - pipelines
      - projects
      summary: Create Pipeline
      description: Create Pipeline
      requestBody:
        description: New Pipeline object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
      responses:
        "200":
          description: A list of Pipeline objects for specified Project
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
  "/m/{groupId}/system/projects/{projectId}/pipelines/{pipelineId}":
    get:
      operationId: getSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
      tags:
      - pipelines
      - projects
      summary: Get Pipeline by ID in specified Project
      description: Get Pipeline by ID in specified Project
      responses:
        "200":
          description: A list of Pipeline objects in specified Project
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
      - name: pipelineId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Pipeline Id
    patch:
      operationId: updateSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
      tags:
      - pipelines
      - projects
      summary: Update Pipeline in specified Project
      description: Update Pipeline in specified Project
      requestBody:
        description: Pipeline object to be updated in specified Project
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
      responses:
        "200":
          description: A list of Pipeline objects for specified Project
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
      - name: pipelineId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Pipeline iD
    delete:
      operationId: deleteSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId
      tags:
      - pipelines
      - projects
      summary: Delete Pipeline in specified Project
      description: Delete Pipeline in specified Project
      responses:
        "200":
          description: A list of Pipeline objects for specified Project
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: Number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group Id
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
      - name: pipelineId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Pipeline Id
  /system/instance/:
    get:
      operationId: listInstanceSettingsSchema
      tags:
      - system
      summary: Get a list of InstanceSettingsSchema objects
      description: Get a list of InstanceSettingsSchema objects
      x-speakeasy-entity-operation: InstanceSettings#get
      responses:
        "200":
          description: a list of InstanceSettingsSchema objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: number of items present in the items array
                    x-speakeasy-ignore: true
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/InstanceSettingsSchema"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/banners:
    get:
      operationId: listBannerMessage
      tags: &a1
      - banners
      summary: Get a list of BannerMessage objects
      description: Get a list of BannerMessage objects
      responses: &a2
        "200":
          description: a list of BannerMessage objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/BannerMessage"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createBannerMessage
      tags: *a1
      summary: Create BannerMessage
      description: Create BannerMessage
      requestBody:
        description: New BannerMessage object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BannerMessage"
      responses: *a2
  "/system/banners/{id}":
    get:
      operationId: getBannerMessageById
      tags: *a1
      summary: Get BannerMessage by ID
      description: Get BannerMessage by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a3
          type: string
          example: string
        description: Unique ID to GET
      responses: *a2
    patch:
      operationId: updateBannerMessageById
      tags: *a1
      summary: Update BannerMessage
      description: Update BannerMessage
      parameters:
      - name: id
        in: path
        required: true
        schema: *a3
        description: Unique ID to PATCH
      requestBody:
        description: BannerMessage object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BannerMessage"
      responses: *a2
    delete:
      operationId: deleteBannerMessageById
      tags: *a1
      summary: Delete BannerMessage
      description: Delete BannerMessage
      parameters:
      - name: id
        in: path
        required: true
        schema: *a3
        description: Unique ID to DELETE
      responses: *a2
  /system/certificates:
    get:
      operationId: listCertificate
      tags: &a4
      - certificates
      summary: Get a list of Certificate objects
      description: Get a list of Certificate objects
      responses: &a5
        "200":
          description: a list of Certificate objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Certificate"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createCertificate
      tags: *a4
      summary: Create Certificate
      description: Create Certificate
      requestBody:
        description: New Certificate object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Certificate"
      responses: *a5
  "/system/certificates/{id}":
    get:
      operationId: getCertificateById
      tags: *a4
      summary: Get Certificate by ID
      description: Get Certificate by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a6
          type: string
          example: string
        description: Unique ID to GET
      responses: *a5
    patch:
      operationId: updateCertificateById
      tags: *a4
      summary: Update Certificate
      description: Update Certificate
      parameters:
      - name: id
        in: path
        required: true
        schema: *a6
        description: Unique ID to PATCH
      requestBody:
        description: Certificate object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Certificate"
      responses: *a5
    delete:
      operationId: deleteCertificateById
      tags: *a4
      summary: Delete Certificate
      description: Delete Certificate
      parameters:
      - name: id
        in: path
        required: true
        schema: *a6
        description: Unique ID to DELETE
      responses: *a5
  "/settings/features/{id}":
    get:
      operationId: getFeaturesEntryById
      tags:
      - features
      summary: Get feature by id (i.e. 'type-name`)
      description: Get feature by id (i.e. 'type-name`)
      deprecated: false
      responses:
        "200":
          description: a list of FeaturesEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/FeaturesEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Feature id
  /settings/features:
    get:
      operationId: getFeaturesEntry
      tags:
      - features
      summary: List all features
      description: List all features
      deprecated: false
      responses:
        "200":
          description: a list of FeaturesEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/FeaturesEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /m/{groupId}/lib/jobs:
    get:
      operationId: listCollectors
      tags: &a7
      - saved-jobs
      summary: Get a list of Collector objects
      description: Get a list of Collector objects
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The consumer group to which this instance belongs. Defaults to 'default'.
        default: default
        example: default
      responses: &a8
        "200":
          description: a list of Collector objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/InputCollector"
                    x-speakeasy-ignore: true
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSavedJob
      tags: *a7
      summary: Create Collector
      description: Create Collector
      x-speakeasy-entity-operation: Collector#create
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The consumer group to which this instance belongs. Defaults to 'default'.
        default: default
        example: default
      - name: id
        in: query
        required: true
        description: The id of this collector instance
        schema:
          type: string
          example: string
      requestBody:
        description: New Collector object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InputCollector"
      responses: *a8
  "/m/{groupId}/lib/jobs/{id}":
    get:
      operationId: getSavedJobById
      tags: *a7
      summary: Get Collector by ID
      description: Get Collector by ID
      x-speakeasy-entity-operation: Collector#get
      parameters:
      - name: id
        in: path
        required: true
        schema: &a9
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The consumer group to which this instance belongs. Defaults to 'default'.
        default: default
        example: default
      responses: *a8
    patch:
      operationId: updateCollectorById
      tags: *a7
      summary: Update Collector
      description: Update Collector
      x-speakeasy-entity-operation: Collector#update
      parameters:
      - name: id
        in: path
        required: true
        schema: *a9
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The consumer group to which this instance belongs. Defaults to 'default'.
        default: default
        example: default
      requestBody:
        description: Collector object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InputCollector"
      responses: *a8
    delete:
      operationId: deleteCollectorById
      tags: *a7
      summary: Delete Collector
      description: Delete Collector
      x-speakeasy-entity-operation: Collector#delete
      parameters:
      - name: id
        in: path
        required: true
        schema: *a9
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The consumer group to which this instance belongs. Defaults to 'default'.
        default: default
        example: default
      responses: *a8
  /system/keys:
    get:
      operationId: listKeyMetadataEntity
      tags: &a10
      - keys
      summary: Get a list of KeyMetadataEntity objects
      description: Get a list of KeyMetadataEntity objects
      responses: &a11
        "200":
          description: a list of KeyMetadataEntity objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/KeyMetadataEntity"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createKeyMetadataEntity
      tags: *a10
      summary: Create KeyMetadataEntity
      description: Create KeyMetadataEntity
      requestBody:
        description: New KeyMetadataEntity object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyMetadataEntity"
      responses: *a11
  "/system/keys/{id}":
    get:
      operationId: getKeyMetadataEntityById
      tags: *a10
      summary: Get KeyMetadataEntity by ID
      description: Get KeyMetadataEntity by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a12
          type: string
          example: string
        description: Unique ID to GET
      responses: *a11
    patch:
      operationId: updateKeyMetadataEntityById
      tags: *a10
      summary: Update KeyMetadataEntity
      description: Update KeyMetadataEntity
      parameters:
      - name: id
        in: path
        required: true
        schema: *a12
        description: Unique ID to PATCH
      requestBody:
        description: KeyMetadataEntity object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KeyMetadataEntity"
      responses: *a11
    delete:
      operationId: deleteKeyMetadataEntityById
      tags: *a10
      summary: Delete KeyMetadataEntity
      description: Delete KeyMetadataEntity
      parameters:
      - name: id
        in: path
        required: true
        schema: *a12
        description: Unique ID to DELETE
      responses: *a11
  /system/messages:
    get:
      operationId: listBulletinMessage
      tags: &a13
      - messages
      summary: Get a list of BulletinMessage objects
      description: Get a list of BulletinMessage objects
      responses: &a14
        "200":
          description: a list of BulletinMessage objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/BulletinMessage"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createBulletinMessage
      tags: *a13
      summary: Create BulletinMessage
      description: Create BulletinMessage
      requestBody:
        description: New BulletinMessage object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulletinMessage"
      responses: *a14
  "/system/messages/{id}":
    get:
      operationId: getBulletinMessageById
      tags: *a13
      summary: Get BulletinMessage by ID
      description: Get BulletinMessage by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a15
          type: string
          example: string
        description: Unique ID to GET
      responses: *a14
    delete:
      operationId: deleteBulletinMessageById
      tags: *a13
      summary: Delete BulletinMessage
      description: Delete BulletinMessage
      parameters:
      - name: id
        in: path
        required: true
        schema: *a15
        description: Unique ID to DELETE
      responses: *a14
  /notification-targets:
    get:
      operationId: listNotificationTarget
      tags: &a16
      - notification-targets
      summary: Get a list of NotificationTarget objects
      description: Get a list of NotificationTarget objects
      x-speakeasy-entity-operation: NotificationTarget#get
      responses: &a17
        "200":
          description: a list of NotificationTarget objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/NotificationTarget"
                    x-speakeasy-ignore: true
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createNotificationTarget
      tags: *a16
      summary: Create NotificationTarget
      description: Create NotificationTarget
      x-speakeasy-entity-operation: NotificationTarget#create
      requestBody:
        description: New NotificationTarget object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationTarget"
      responses: *a17
  "/notification-targets/{id}":
    get:
      operationId: getNotificationTargetById
      tags: *a16
      summary: Get NotificationTarget by ID
      description: Get NotificationTarget by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a18
          type: string
          example: string
        description: Unique ID to GET
      responses: *a17
    patch:
      operationId: updateNotificationTargetById
      tags: *a16
      summary: Update NotificationTarget
      description: Update NotificationTarget
      x-speakeasy-entity-operation: NotificationTarget#update
      parameters:
      - name: id
        in: path
        required: true
        schema: *a18
        description: Unique ID to PATCH
      requestBody:
        description: NotificationTarget object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationTarget"
      responses: *a17
    delete:
      operationId: deleteNotificationTargetById
      tags: *a16
      summary: Delete NotificationTarget
      description: Delete NotificationTarget
      x-speakeasy-entity-operation: NotificationTarget#delete
      parameters:
      - name: id
        in: path
        required: true
        schema: *a18
        description: Unique ID to DELETE
      responses: *a17
  /notifications:
    get:
      operationId: listNotification
      tags: &a19
      - notifications
      summary: Get a list of Notification objects
      description: Get a list of Notification objects
      responses: &a20
        "200":
          description: a list of Notification objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Notification"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createNotification
      tags: *a19
      summary: Create Notification
      description: Create Notification
      x-speakeasy-entity-operation: Notification#create
      requestBody:
        description: New Notification object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
      responses: *a20
  "/notifications/{id}":
    get:
      operationId: getNotificationById
      tags: *a19
      summary: Get Notification by ID
      description: Get Notification by ID
      x-speakeasy-entity-operation: Notification#get
      parameters:
      - name: id
        in: path
        required: true
        schema: &a21
          type: string
          example: string
        description: Unique ID to GET
      responses: *a20
    patch:
      operationId: updateNotificationById
      tags: *a19
      summary: Update Notification
      description: Update Notification
      x-speakeasy-entity-operation: Notification#update
      parameters:
      - name: id
        in: path
        required: true
        schema: *a21
        description: Unique ID to PATCH
      requestBody:
        description: Notification object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
      responses: *a20
    delete:
      operationId: deleteNotificationById
      tags: *a19
      summary: Delete Notification
      description: Delete Notification
      x-speakeasy-entity-operation: Notification#delete
      parameters:
      - name: id
        in: path
        required: true
        schema: *a21
        description: Unique ID to DELETE
      responses: *a20
  /system/policies:
    get:
      operationId: listPolicyRule
      tags: &a22
      - policies
      summary: Get a list of PolicyRule objects
      description: Get a list of PolicyRule objects
      responses: &a23
        "200":
          description: a list of PolicyRule objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PolicyRule"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createPolicyRule
      tags: *a22
      summary: Create PolicyRule
      description: Create PolicyRule
      requestBody:
        description: New PolicyRule object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyRule"
      responses: *a23
  "/system/policies/{id}":
    get:
      operationId: getPolicyRuleById
      tags: *a22
      summary: Get PolicyRule by ID
      description: Get PolicyRule by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a24
          type: string
          example: string
        description: Unique ID to GET
      responses: *a23
    patch:
      operationId: updatePolicyRuleById
      tags: *a22
      summary: Update PolicyRule
      description: Update PolicyRule
      parameters:
      - name: id
        in: path
        required: true
        schema: *a24
        description: Unique ID to PATCH
      requestBody:
        description: PolicyRule object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyRule"
      responses: *a23
    delete:
      operationId: deletePolicyRuleById
      tags: *a22
      summary: Delete PolicyRule
      description: Delete PolicyRule
      parameters:
      - name: id
        in: path
        required: true
        schema: *a24
        description: Unique ID to DELETE
      responses: *a23
  /system/roles:
    get:
      operationId: listRole
      tags: &a25
      - roles
      summary: Get a list of Role objects
      description: Get a list of Role objects
      responses: &a26
        "200":
          description: a list of Role objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Role"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createRole
      tags: *a25
      summary: Create Role
      description: Create Role
      requestBody:
        description: New Role object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
      responses: *a26
  "/system/roles/{id}":
    get:
      operationId: getRoleById
      tags: *a25
      summary: Get Role by ID
      description: Get Role by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a27
          type: string
          example: string
        description: Unique ID to GET
      responses: *a26
    patch:
      operationId: updateRoleById
      tags: *a25
      summary: Update Role
      description: Update Role
      parameters:
      - name: id
        in: path
        required: true
        schema: *a27
        description: Unique ID to PATCH
      requestBody:
        description: Role object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
      responses: *a26
    delete:
      operationId: deleteRoleById
      tags: *a25
      summary: Delete Role
      description: Delete Role
      parameters:
      - name: id
        in: path
        required: true
        schema: *a27
        description: Unique ID to DELETE
      responses: *a26
  /system/scripts:
    get:
      operationId: listScript
      tags: &a28
      - scripts
      summary: Get a list of Script objects
      description: Get a list of Script objects
      responses: &a29
        "200":
          description: a list of Script objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ScriptLibEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createScript
      tags: *a28
      summary: Create Script
      description: Create Script
      requestBody:
        description: New Script object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScriptLibEntry"
      responses: *a29
  "/system/scripts/{id}":
    get:
      operationId: getScriptById
      tags: *a28
      summary: Get Script by ID
      description: Get Script by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a30
          type: string
          example: string
        description: Unique ID to GET
      responses: *a29
    patch:
      operationId: updateScriptById
      tags: *a28
      summary: Update Script
      description: Update Script
      parameters:
      - name: id
        in: path
        required: true
        schema: *a30
        description: Unique ID to PATCH
      requestBody:
        description: Script object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScriptLibEntry"
      responses: *a29
    delete:
      operationId: deleteScriptById
      tags: *a28
      summary: Delete Script
      description: Delete Script
      parameters:
      - name: id
        in: path
        required: true
        schema: *a30
        description: Unique ID to DELETE
      responses: *a29
  /system/teams:
    post:
      operationId: createTeam
      tags: &a31
      - teams
      summary: Create Team
      description: Create Team
      requestBody:
        description: New Team object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team"
      responses: &a32
        "200":
          description: a list of Team objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Team"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      operationId: getTeam
      tags:
      - teams
      summary: Get a list of Team objects
      description: Get a list of Team objects
      deprecated: false
      responses:
        "200":
          description: a list of Team objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Team"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: product
        in: query
        required: false
        schema:
          type: string
          enum:
          - stream
          - edge
          - search
          example: stream
        description: filter teams by product
  "/system/teams/{id}":
    get:
      operationId: getTeamById
      tags: *a31
      summary: Get Team by ID
      description: Get Team by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a33
          type: string
          example: string
        description: Unique ID to GET
      responses: *a32
    patch:
      operationId: updateTeamById
      tags: *a31
      summary: Update Team
      description: Update Team
      parameters:
      - name: id
        in: path
        required: true
        schema: *a33
        description: Unique ID to PATCH
      requestBody:
        description: Team object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team"
      responses: *a32
    delete:
      operationId: deleteTeamById
      tags: *a31
      summary: Delete Team
      description: Delete Team
      parameters:
      - name: id
        in: path
        required: true
        schema: *a33
        description: Unique ID to DELETE
      responses: *a32
  "/system/teams/{id}/acl":
    get:
      operationId: getTeamAclById
      tags:
      - teams
      summary: Get Teams's Access Control List
      description: Get Teams's Access Control List
      deprecated: false
      responses:
        "200":
          description: a list of ResourcePolicy objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ResourcePolicy"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Team name
      - name: type
        in: query
        required: false
        schema:
          type: string
          enum:
          - groups
          - datasets
          - dataset-providers
          - projects
          - dashboards
          - macros
          example: groups
        description: resource type by which to filter access levels
  "/system/teams/users/{id}/roles":
    get:
      operationId: getTeamRolesById
      tags:
      - teams
      summary: Get user's product roles
      description: Get user's product roles
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: string
                      example: string
                    example:
                    - string
                example:
                  count: 123
                  items:
                  - string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: user id
  "/system/teams/{id}/users":
    get:
      operationId: getTeamUsersById
      tags:
      - teams
      summary: Get users on a team
      description: Get users on a team
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: string
                      example: string
                    example:
                    - string
                example:
                  count: 123
                  items:
                  - string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Team Name
    post:
      operationId: createTeamUsersById
      tags:
      - teams
      summary: Update existing users on a team – admin use only
      description: Update existing users on a team – admin use only
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: string
                      example: string
                    example:
                    - string
                example:
                  count: 123
                  items:
                  - string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: MembershipSchema object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MembershipSchema"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Team name
  /system/users:
    get:
      operationId: listUser
      tags: &a34
      - users
      - onlyOnPrem
      summary: Get a list of User objects
      description: Get a list of User objects
      responses: &a35
        "200":
          description: a list of User objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createUser
      tags: *a34
      summary: Create User
      description: Create User
      requestBody:
        description: New User object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses: *a35
  "/system/users/{id}":
    get:
      operationId: getUserById
      tags: *a34
      summary: Get User by ID
      description: Get User by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a36
          type: string
          example: string
        description: Unique ID to GET
      responses: *a35
    patch:
      operationId: updateUserById
      tags:
      - users
      - onlyOnPrem
      summary: Update User properties – admin use only
      description: Update User properties – admin use only
      deprecated: false
      responses:
        "200":
          description: a list of UserProfile objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserProfile"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: UserProfile object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: User Id
    delete:
      operationId: deleteUserById
      tags: *a34
      summary: Delete User
      description: Delete User
      parameters:
      - name: id
        in: path
        required: true
        schema: *a36
        description: Unique ID to DELETE
      responses: *a35
  "/system/users/{id}/info":
    patch:
      operationId: updateUserInfoById
      tags:
      - users
      - onlyOnPrem
      summary: Update User except for their roles
      description: Update User except for their roles
      deprecated: false
      responses:
        "200":
          description: a list of User objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: UserInfo object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInfo"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: User Id

  "/products/lake/lakes/default/lakehouses":
    get:
      tags:
      - LakeHouse
      summary: List lakehouses for default lake
      description: Retrieves a list of lakehouses associated with the default lake
      operationId: listDefaultLakeLakehouses
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Lakehouse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
      - LakeHouse
      summary: Create a new lakehouse in default lake
      description: Creates a new lakehouse in the default lake
      operationId: createDefaultLakeLakehouse
      x-speakeasy-entity-operation: CriblLakeHouse#create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lakehouse'
      responses:
        "200":
          description: a list of CriblLakeHouse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Lakehouse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
  "/products/lake/lakes/default/lakehouses/{id}":
    get:
      tags:
      - LakeHouse
      summary: Get lakehouse by ID
      description: Retrieves a specific lakehouse by its ID from the default lake
      operationId: getDefaultLakeLakehouseById
      x-speakeasy-entity-operation: CriblLakeHouse#get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The ID of the lakehouse to retrieve
      responses:
        "200":
          description: a list of Lakehouse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Lakehouse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      tags:
      - LakeHouse
      summary: Update lakehouse by ID
      description: Updates a specific lakehouse by its ID in the default lake
      operationId: updateDefaultLakeLakehouseById
      x-speakeasy-entity-operation: CriblLakeHouse#update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The ID of the lakehouse to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lakehouse'
      responses:
        "200":
          description: a list of Lakehouse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Lakehouse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
      - LakeHouse
      summary: Delete lakehouse by ID
      description: Deletes a specific lakehouse by its ID from the default lake
      operationId: deleteDefaultLakeLakehouseById
      x-speakeasy-entity-operation: CriblLakeHouse#delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The ID of the lakehouse to delete
      responses:
        "200":
          description: a list of Lakehouse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Lakehouse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/products/lake/lakes/{lakeId}/datasets":
    post:
      operationId: createCriblLakeDatasetByLakeId
      tags:
      - lake
      summary: Create a Dataset in the specified Lake
      description: Create a Dataset in the specified Lake
      x-speakeasy-entity-operation: CriblLakeDataset#create
      deprecated: false
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: CriblLakeDataset object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CriblLakeDataset"
      parameters:
      - name: lakeId
        in: path
        required: true
        default: "default"
        schema:
          type: string
          enum:
          - default
          example: default
        description: lake id that contains the Datasets
        example: default
    get:
      operationId: getCriblLakeDatasetByLakeId
      tags:
      - lake
      summary: Get the list of Dataset contained in the specified Lake
      description: Get the list of Dataset contained in the specified Lake
      deprecated: false
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: lakeId
        in: path
        required: true
        default: "default"
        schema:
          type: string
          enum:
          - default
          example: default
        example: default
        description: lake id that contains the Datasets
  "/products/lake/lakes/default/lakehouses/{lakehouse_id}/datasets/{lake_dataset_id}/connections":
    post:
      tags:
      - lakehouse-dataset-connections
      summary: Create lakehouse dataset connections
      description: Create connections for a specific dataset within a lakehouse
      operationId: createLakehouseDatasetConnections
      x-speakeasy-entity-operation: LakehouseDatasetConnection#create
      parameters:
      - name: lakehouse_id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The ID of the lakehouse
      - name: lake_dataset_id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The ID of the dataset within the lakehouse
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              example: {}
      responses:
        '200':
          description: Successfully created dataset connections
          content:
            application/json:
              schema:
                type: object
                example: {}
        '400':
          description: Bad request - invalid parameters
        '404':
          description: Lakehouse or dataset not found
        '500':
          description: Internal server error
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 1000
          maxInterval: 30000
          maxElapsedTime: 900000
          exponent: 2.0
        statusCodes:
        - 400
        - 401
        - 404
        - 500
    patch:
      tags:
      - lakehouse-dataset-connections
      summary: Update lakehouse dataset connections
      description: Update connections for a specific dataset within a lakehouse
      operationId: updateLakehouseDatasetConnections
      x-speakeasy-entity-operation: LakehouseDatasetConnection#update
      parameters:
      - name: lakehouse_id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The ID of the lakehouse
      - name: lake_dataset_id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The ID of the dataset within the lakehouse
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              example: {}
      responses:
        '200':
          description: Successfully updated dataset connections
          content:
            application/json:
              schema:
                type: object
                example: {}
        '400':
          description: Bad request - invalid parameters
        '404':
          description: Lakehouse or dataset not found
        '500':
          description: Internal server error

    delete:
      tags:
      - lakehouse-dataset-connections
      summary: Delete lakehouse dataset connections
      description: Delete all connections for a specific dataset within a lakehouse
      operationId: deleteLakehouseDatasetConnections
      x-speakeasy-entity-operation: LakehouseDatasetConnection#delete
      parameters:
      - name: lakehouse_id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The ID of the lakehouse
      - name: lake_dataset_id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: The ID of the dataset within the lakehouse
      responses:
        "200":
          description: a list of Connection objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      example: {}
                    example:
                    - {}
                example:
                  count: 123
                  items:
                  - {}
  "/products/lake/lakes/{lakeId}/datasets/{id}":
    delete:
      operationId: deleteCriblLakeDatasetByLakeIdAndId
      tags:
      - lake
      summary: Delete a Dataset in the specified Lake
      description: Delete a Dataset in the specified Lake
      x-speakeasy-entity-operation: CriblLakeDataset#delete
      deprecated: false
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: lakeId
        in: path
        required: true
        default: "default"
        schema:
          type: string
          enum:
          - default
          example: default
        description: lake id that contains the Datasets
        example: default
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: dataset id to delete
        example: test_lake_dataset
    get:
      operationId: getCriblLakeDatasetByLakeIdAndId
      tags:
      - lake
      summary: Get a Dataset in the specified Lake
      description: Get a Dataset in the specified Lake
      x-speakeasy-entity-operation: CriblLakeDataset#get
      deprecated: false
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: lakeId
        in: path
        required: true
        default: "default"
        schema:
          type: string
          enum:
          - default
          example: default
        example: default
        description: lake id that contains the Datasets
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: dataset id to get
        example: test_lake_dataset
    patch:
      operationId: updateCriblLakeDatasetByLakeIdAndId
      tags:
      - lake
      summary: Update a Dataset in the specified Lake
      description: Update a Dataset in the specified Lake
      x-speakeasy-entity-operation: CriblLakeDataset#update
      deprecated: false
      responses:
        "200":
          description: a list of CriblLakeDataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CriblLakeDataset"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: CriblLakeDataset object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CriblLakeDataset"
      parameters:
      - name: lakeId
        in: path
        required: true
        default: "default"
        schema:
          type: string
          enum:
          - default
          example: default
        example: default
        description: lake id that contains the Datasets
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: dataset id to update
        example: test_lake_dataset
  /m/default_search/search/dashboard-categories:
    get:
      operationId: listDashboardCategory
      tags: &a37
      - dashboardCategories
      summary: Get a list of DashboardCategory objects
      description: Get a list of DashboardCategory objects
      x-speakeasy-entity-operation: SearchDashboardCategory#get
      responses: &a38
        "200":
          description: a list of DashboardCategory objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DashboardCategory"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDashboardCategory
      tags: *a37
      summary: Create DashboardCategory
      description: Create DashboardCategory
      x-speakeasy-entity-operation: SearchDashboardCategory#create
      requestBody:
        description: New DashboardCategory object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardCategory"
      responses: *a38
  "/m/default_search/search/dashboard-categories/{id}":
    get:
      operationId: getDashboardCategoryById
      tags: *a37
      summary: Get DashboardCategory by ID
      description: Get DashboardCategory by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a39
          type: string
          example: string
        description: Unique ID to GET
      responses: *a38
    patch:
      operationId: updateDashboardCategoryById
      tags: *a37
      summary: Update DashboardCategory
      description: Update DashboardCategory
      x-speakeasy-entity-operation: SearchDashboardCategory#update
      parameters:
      - name: id
        in: path
        required: true
        schema: *a39
        description: Unique ID to PATCH
      requestBody:
        description: DashboardCategory object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardCategory"
      responses: *a38
    delete:
      operationId: deleteDashboardCategoryById
      tags: *a37
      summary: Delete DashboardCategory
      description: Delete DashboardCategory
      x-speakeasy-entity-operation: SearchDashboardCategory#delete
      parameters:
      - name: id
        in: path
        required: true
        schema: *a39
        description: Unique ID to DELETE
      responses: *a38
  /m/default_search/search/usage-groups:
    get:
      operationId: listUsageGroup
      tags: &a40
      - usage-groups
      summary: Get a list of UsageGroup objects
      description: Get a list of UsageGroup objects
      x-speakeasy-entity-operation: SearchUsageGroup#get
      responses: &a41
        "200":
          description: a list of UsageGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UsageGroup"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createUsageGroup
      tags: *a40
      summary: Create UsageGroup
      description: Create UsageGroup
      x-speakeasy-entity-operation: SearchUsageGroup#create
      requestBody:
        description: New UsageGroup object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsageGroup"
      responses: *a41
  "/m/default_search/search/usage-groups/{id}":
    get:
      operationId: getUsageGroupById
      tags: *a40
      summary: Get UsageGroup by ID
      description: Get UsageGroup by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a42
          type: string
          example: string
        description: Unique ID to GET
      responses: *a41
    patch:
      operationId: updateUsageGroupById
      tags: *a40
      summary: Update UsageGroup
      description: Update UsageGroup
      x-speakeasy-entity-operation: SearchUsageGroup#update
      parameters:
      - name: id
        in: path
        required: true
        schema: *a42
        description: Unique ID to PATCH
      requestBody:
        description: UsageGroup object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsageGroup"
      responses: *a41
    delete:
      operationId: deleteUsageGroupById
      tags: *a40
      summary: Delete UsageGroup
      description: Delete UsageGroup
      x-speakeasy-entity-operation: SearchUsageGroup#delete
      parameters:
      - name: id
        in: path
        required: true
        schema: *a42
        description: Unique ID to DELETE
      responses: *a41
  /search/dataset-provider-types:
    get:
      operationId: listDatasetProviderType
      tags: &a43
      - datasets
      summary: Get a list of DatasetProviderType objects
      description: Get a list of DatasetProviderType objects
      responses: &a44
        "200":
          description: a list of DatasetProviderType objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DatasetProviderType"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDatasetProviderType
      tags: *a43
      summary: Create DatasetProviderType
      description: Create DatasetProviderType
      requestBody:
        description: New DatasetProviderType object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetProviderType"
      responses: *a44
  "/search/dataset-provider-types/{id}":
    get:
      operationId: getDatasetProviderTypeById
      tags: *a43
      summary: Get DatasetProviderType by ID
      description: Get DatasetProviderType by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a45
          type: string
          example: string
        description: Unique ID to GET
      responses: *a44
    patch:
      operationId: updateDatasetProviderTypeById
      tags: *a43
      summary: Update DatasetProviderType
      description: Update DatasetProviderType
      parameters:
      - name: id
        in: path
        required: true
        schema: *a45
        description: Unique ID to PATCH
      requestBody:
        description: DatasetProviderType object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetProviderType"
      responses: *a44
    delete:
      operationId: deleteDatasetProviderTypeById
      tags: *a43
      summary: Delete DatasetProviderType
      description: Delete DatasetProviderType
      parameters:
      - name: id
        in: path
        required: true
        schema: *a45
        description: Unique ID to DELETE
      responses: *a44
  /m/default_search/search/dataset-providers:
    get:
      operationId: listDatasetProvider
      tags: &a46
      - datasets
      summary: Get a list of DatasetProvider objects
      description: Get a list of DatasetProvider objects
      responses: &a47
        "200":
          description: a list of DatasetProvider objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GenericProvider"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDatasetProvider
      tags: *a46
      summary: Create DatasetProvider
      description: Create DatasetProvider
      x-speakeasy-entity-operation: SearchDatasetProvider#create
      requestBody:
        description: New DatasetProvider object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenericProvider"
      responses: *a47
  "/m/default_search/search/dataset-providers/{id}":
    get:
      operationId: getDatasetProviderById
      tags: *a46
      summary: Get DatasetProvider by ID
      description: Get DatasetProvider by ID
      x-speakeasy-entity-operation: SearchDatasetProvider#read
      parameters:
      - name: id
        in: path
        required: true
        schema: &a48
          type: string
          example: string
        description: Unique ID to GET
      responses: *a47
    patch:
      operationId: updateDatasetProviderById
      tags: *a46
      summary: Update DatasetProvider
      description: Update DatasetProvider
      x-speakeasy-entity-operation: SearchDatasetProvider#update
      parameters:
      - name: id
        in: path
        required: true
        schema: *a48
        description: Unique ID to PATCH
      requestBody:
        description: DatasetProvider object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenericProvider"
      responses: *a47
    delete:
      operationId: deleteDatasetProviderById
      tags: *a46
      summary: Delete DatasetProvider
      description: Delete DatasetProvider
      x-speakeasy-entity-operation: SearchDatasetProvider#delete
      parameters:
      - name: id
        in: path
        required: true
        schema: *a48
        description: Unique ID to DELETE
      responses: *a47
  /m/default_search/search/datasets:
    get:
      operationId: listDataset
      tags: &a49
      - datasets
      summary: Get a list of Dataset objects
      description: Get a list of Dataset objects
      responses: &a50
        "200":
          description: a list of Dataset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GenericDataset"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDataset
      tags: *a49
      summary: Create Dataset
      description: Create Dataset
      x-speakeasy-entity-operation: SearchDataset#create
      requestBody:
        description: New Dataset object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenericDataset"
      responses: *a50
  "/m/default_search/search/datasets/{id}":
    get:
      operationId: getDatasetById
      tags: *a49
      summary: Get Dataset by ID
      description: Get Dataset by ID
      x-speakeasy-entity-operation: SearchDataset#read
      parameters:
      - name: id
        in: path
        required: true
        schema: &a51
          type: string
          example: string
        description: Unique ID to GET
      responses: *a50
    patch:
      operationId: updateDatasetById
      tags: *a49
      summary: Update Dataset
      description: Update Dataset
      x-speakeasy-entity-operation: SearchDataset#update
      parameters:
      - name: id
        in: path
        required: true
        schema: *a51
        description: Unique ID to PATCH
      requestBody:
        description: Dataset object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenericDataset"
      responses: *a50
    delete:
      operationId: deleteDatasetById
      tags: *a49
      summary: Delete Dataset
      description: Delete Dataset
      x-speakeasy-entity-operation: SearchDataset#delete
      parameters:
      - name: id
        in: path
        required: true
        schema: *a51
        description: Unique ID to DELETE
      responses: *a50
  "/search/datasets/{id}/acl":
    get:
      operationId: getDatasetAclById
      responses: &a55
        "200":
          description: a list of UserAccessControlList objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserAccessControlList"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401": &a52
          description: Unauthorized
        "500": &a53
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema: *a51
        description: Unique ID for ACL Get
      description: List accesses to Dataset granted to users
      summary: Get Dataset ACL
      tags: &a54
      - datasets
      - users ACL
  "/search/datasets/{id}/acl/apply":
    post:
      operationId: createDatasetAclApplyById
      requestBody: &a56
        description: AccessControlSchema object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccessControlSchema"
      responses: &a57
        "200":
          description: N/A
        "401": *a52
        "500": *a53
      parameters:
      - name: id
        in: path
        required: true
        schema: *a51
        description: Unique ID for ACL Create
      description: Add/remove accesses to Dataset for users
      summary: Modify Dataset ACL
      tags: *a54
  "/search/datasets/{id}/acl/teams":
    get:
      operationId: getDatasetAclTeamsById
      responses: *a55
      parameters:
      - name: id
        in: path
        required: true
        schema: *a51
        description: Unique ID for ACL Teams Get
      description: List accesses to Dataset granted to Teams
      summary: Get Dataset Teams
      tags: &a58
      - datasets
      - teams ACL
  "/search/datasets/{id}/acl/teams/apply":
    post:
      operationId: createDatasetAclTeamsApplyById
      requestBody: *a56
      responses: *a57
      parameters:
      - name: id
        in: path
        required: true
        schema: *a51
        description: Unique ID for ACL Teams Create
      description: Add/remove accesses to Dataset for Teams
      summary: Modify Dataset Teams ACL
      tags: *a58
  "/m/{groupId}/lib/appscope-configs":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listAppscopeLibEntry
      tags: &a59
      - appscope-configs
      summary: Get a list of AppscopeLibEntry objects
      description: Get a list of AppscopeLibEntry objects
      responses: &a60
        "200":
          description: a list of AppscopeLibEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppscopeLibEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: AppscopeConfig#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: createAppscopeLibEntry
      tags: *a59
      summary: Create AppscopeLibEntry
      description: Create AppscopeLibEntry
      requestBody:
        description: New AppscopeLibEntry object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppscopeLibEntry"
      responses: *a60
  "/m/{groupId}/lib/appscope-configs/{id}":
    get:
      x-speakeasy-entity-operation: AppscopeConfig#read
      operationId: getAppscopeLibEntryById
      tags: *a59
      summary: Get AppscopeLibEntry by ID
      description: Get AppscopeLibEntry by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a61
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a60
    patch:
      x-speakeasy-entity-operation: AppscopeConfig#update
      operationId: updateAppscopeLibEntryById
      tags: *a59
      summary: Update AppscopeLibEntry
      description: Update AppscopeLibEntry
      parameters:
      - name: id
        in: path
        required: true
        schema: *a61
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: AppscopeLibEntry object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppscopeLibEntry"
      responses: *a60
    delete:
      x-speakeasy-entity-operation: AppscopeConfig#delete
      operationId: deleteAppscopeLibEntryById
      tags: *a59
      summary: Delete AppscopeLibEntry
      description: Delete AppscopeLibEntry
      parameters:
      - name: id
        in: path
        required: true
        schema: *a61
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a60
  "/m/{groupId}/lib/grok":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listGrokFile
      tags: &a62
      - grokfiles
      summary: Get a list of GrokFile objects
      description: Get a list of GrokFile objects
      responses: &a63
        "200":
          description: a list of GrokFile objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GrokFile"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Grok#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: createGrokFile
      tags: *a62
      summary: Create GrokFile
      description: Create GrokFile
      requestBody:
        description: New GrokFile object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GrokFile"
      responses: *a63
  "/m/{groupId}/lib/grok/{id}":
    get:
      x-speakeasy-entity-operation: Grok#read
      operationId: getGrokFileById
      tags: *a62
      summary: Get GrokFile by ID
      description: Get GrokFile by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a64
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a63
    patch:
      x-speakeasy-entity-operation: Grok#update
      operationId: updateGrokFileById
      tags: *a62
      summary: Update GrokFile
      description: Update GrokFile
      parameters:
      - name: id
        in: path
        required: true
        schema: *a64
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: GrokFile object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GrokFile"
      responses: *a63
    delete:
      x-speakeasy-entity-operation: Grok#delete
      operationId: deleteGrokFileById
      tags: *a62
      summary: Delete GrokFile
      description: Delete GrokFile
      parameters:
      - name: id
        in: path
        required: true
        schema: *a64
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a63
  "/m/{groupId}/system/lookups":
    get:
      x-speakeasy-entity-operation: LookupFile#get
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listLookupFile
      tags: &a65
      - lookups
      summary: Get a list of LookupFile objects
      description: Get a list of LookupFile objects
      responses: &a66
        "200":
          description: a list of LookupFile objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/LookupFile"
                    x-speakeasy-ignore: true
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: LookupFile#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: createLookupFile
      tags: *a65
      summary: Create LookupFile
      description: Create LookupFile
      requestBody:
        description: New LookupFile object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LookupFile"
      responses: *a66
  "/m/{groupId}/system/lookups/{id}":
    get:
      operationId: getLookupFileById
      tags: *a65
      summary: Get LookupFile by ID
      description: Get LookupFile by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a67
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a66
    patch:
      x-speakeasy-entity-operation: LookupFile#update
      operationId: updateLookupFileById
      tags: *a65
      summary: Update LookupFile
      description: Update LookupFile
      parameters:
      - name: id
        in: path
        required: true
        schema: *a67
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: LookupFile object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LookupFile"
      responses: *a66
    delete:
      x-speakeasy-entity-operation: LookupFile#delete
      operationId: deleteLookupFileById
      tags: *a65
      summary: Delete LookupFile
      description: Delete LookupFile
      parameters:
      - name: id
        in: path
        required: true
        schema: *a67
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a66
  "/m/{groupId}/lib/parsers":
    get:
      x-speakeasy-entity-operation: ParserLibEntry#get
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listParser
      tags: &a68
      - parsers
      summary: Get a list of Parser objects
      description: Get a list of Parser objects
      responses: &a69
        "200":
          description: a list of Parser objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ParserLibEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: ParserLibEntry#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: createParser
      tags: *a68
      summary: Create Parser
      description: Create Parser
      requestBody:
        description: New Parser object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParserLibEntry"
      responses: *a69
  "/m/{groupId}/lib/parsers/{id}":
    get:
      operationId: getParserById
      tags: *a68
      summary: Get Parser by ID
      description: Get Parser by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a70
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a69
    patch:
      x-speakeasy-entity-operation: ParserLibEntry#update
      operationId: updateParserById
      tags: *a68
      summary: Update Parser
      description: Update Parser
      parameters:
      - name: id
        in: path
        required: true
        schema: *a70
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: Parser object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParserLibEntry"
      responses: *a69
    delete:
      operationId: deleteParserById
      tags: *a68
      summary: Delete Parser
      description: Delete Parser
      x-speakeasy-entity-operation: ParserLibEntry#delete
      parameters:
      - name: id
        in: path
        required: true
        schema: *a70
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a69
  /lib/protobuf-libraries:
    get:
      operationId: getProtobufLibraryConfig
      tags:
      - protobuflibraries
      summary: Show list of Protobuf encodings for a given Library
      description: Show list of Protobuf encodings for a given Library
      deprecated: false
      responses:
        "200":
          description: a list of ProtobufEncodingConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProtobufEncodingConfig"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: onlyWithEncodings
        in: query
        required: true
        schema:
          type: string
          example: string
        description: onlyWithEncodings
  "/lib/protobuf-libraries/{id}":
    get:
      operationId: getProtobufLibraryConfigById
      tags:
      - protobuflibraries
      summary: Show Library by Id
      description: Show Library by Id
      deprecated: false
      responses:
        "200":
          description: a list of ProtobufLibraryConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProtobufLibraryConfig"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Library Id
  "/lib/protobuf-libraries/{id}/encodings/{encid}":
    get:
      operationId: getProtobufLibraryConfigEncodingsByIdAndEncId
      tags:
      - protobuflibraries
      summary: Show Protobuf library encodings by encoding id
      description: Show Protobuf library encodings by encoding id
      deprecated: false
      responses:
        "200":
          description: a list of ProtobufEncodingConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProtobufEncodingConfig"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Library id
      - name: encid
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Encoding id
  "/lib/protobuf-libraries/{id}/encodings":
    get:
      operationId: getProtobufLibraryConfigEncodingsById
      tags:
      - protobuflibraries
      summary: Show list of Protobuf encodings for a given Library
      description: Show list of Protobuf encodings for a given Library
      deprecated: false
      responses:
        "200":
          description: a list of ProtobufEncodingConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProtobufEncodingConfig"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Library id
  "/m/{groupId}/lib/regex":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listRegexLibEntry
      tags: &a71
      - regexes
      summary: Get a list of RegexLibEntry objects
      description: Get a list of RegexLibEntry objects
      responses: &a72
        "200":
          description: a list of RegexLibEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/RegexLibEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Regex#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'default'.
        default: "default"
        example: "default"
        schema:
          type: string
          example: string
      operationId: createRegexLibEntry
      tags: *a71
      summary: Create RegexLibEntry
      description: Create RegexLibEntry
      requestBody:
        description: New RegexLibEntry object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegexLibEntry"
      responses: *a72
  "/m/{groupId}/lib/regex/{id}":
    get:
      x-speakeasy-entity-operation: Regex#read
      operationId: getRegexLibEntryById
      tags: *a71
      summary: Get RegexLibEntry by ID
      description: Get RegexLibEntry by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a73
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a72
    patch:
      x-speakeasy-entity-operation: Regex#update
      operationId: updateRegexLibEntryById
      tags: *a71
      summary: Update RegexLibEntry
      description: Update RegexLibEntry
      parameters:
      - name: id
        in: path
        required: true
        schema: *a73
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: RegexLibEntry object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegexLibEntry"
      responses: *a72
    delete:
      x-speakeasy-entity-operation: Regex#delete
      operationId: deleteRegexLibEntryById
      tags: *a71
      summary: Delete RegexLibEntry
      description: Delete RegexLibEntry
      parameters:
      - name: id
        in: path
        required: true
        schema: *a73
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a72
  /system/samples:
    get:
      operationId: listDataSample
      tags: &a74
      - samples
      summary: Get a list of DataSample objects
      description: Get a list of DataSample objects
      responses: &a75
        "200":
          description: a list of DataSample objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DataSample"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDataSample
      tags: *a74
      summary: Create DataSample
      description: Create DataSample
      requestBody:
        description: New DataSample object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSample"
      responses: *a75
  "/system/samples/{id}":
    get:
      operationId: getDataSampleById
      tags: *a74
      summary: Get DataSample by ID
      description: Get DataSample by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a76
          type: string
          example: string
        description: Unique ID to GET
      responses: *a75
    patch:
      operationId: updateDataSampleById
      tags: *a74
      summary: Update DataSample
      description: Update DataSample
      parameters:
      - name: id
        in: path
        required: true
        schema: *a76
        description: Unique ID to PATCH
      requestBody:
        description: DataSample object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSample"
      responses: *a75
    delete:
      operationId: deleteDataSampleById
      tags: *a74
      summary: Delete DataSample
      description: Delete DataSample
      parameters:
      - name: id
        in: path
        required: true
        schema: *a76
        description: Unique ID to DELETE
      responses: *a75
  "/system/samples/{id}/content":
    get:
      operationId: getDataSampleContentById
      tags:
      - samples
      summary: Get sample content by ID
      description: Get sample content by ID
      deprecated: false
      responses:
        "200":
          description: a list of SampleContent objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SampleContent"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Sample ID
  /m/default_search/search/dashboards:
    get:
      operationId: listSearchDashboard
      tags: &a77
      - dashboards
      summary: Get a list of SearchDashboard objects
      description: Get a list of SearchDashboard objects
      x-speakeasy-entity-operation: SearchDashboard#get
      responses: &a78
        "200":
          description: a list of SearchDashboard objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchDashboard"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSearchDashboard
      tags: *a77
      summary: Create SearchDashboard
      description: Create SearchDashboard
      x-speakeasy-entity-operation: SearchDashboard#create
      requestBody:
        description: New SearchDashboard object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchDashboard"
      responses: *a78
  "/m/default_search/search/dashboards/{id}":
    get:
      operationId: getSearchDashboardById
      tags: *a77
      summary: Get SearchDashboard by ID
      description: Get SearchDashboard by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a79
          type: string
          example: string
        description: Unique ID to GET
      responses: *a78
    patch:
      operationId: updateSearchDashboardById
      tags: *a77
      summary: Update SearchDashboard
      description: Update SearchDashboard
      x-speakeasy-entity-operation: SearchDashboard#update
      parameters:
      - name: id
        in: path
        required: true
        schema: *a79
        description: Unique ID to PATCH
      requestBody:
        description: SearchDashboard object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchDashboard"
      responses: *a78
    delete:
      operationId: deleteSearchDashboardById
      tags: *a77
      summary: Delete SearchDashboard
      description: Delete SearchDashboard
      x-speakeasy-entity-operation: SearchDashboard#delete
      parameters:
      - name: id
        in: path
        required: true
        schema: *a79
        description: Unique ID to DELETE
      responses: *a78
  "/search/dashboards/{id}/acl":
    get:
      operationId: getSearchDashboardAclById
      responses: &a83
        "200":
          description: a list of UserAccessControlList objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserAccessControlList"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401": &a80
          description: Unauthorized
        "500": &a81
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema: *a79
        description: Unique ID for ACL Get
      description: List accesses to SearchDashboard granted to users
      summary: Get SearchDashboard ACL
      tags: &a82
      - dashboards
      - users ACL
  "/search/dashboards/{id}/acl/apply":
    post:
      operationId: createSearchDashboardAclApplyById
      requestBody: &a84
        description: AccessControlSchema object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccessControlSchema"
      responses: &a85
        "200":
          description: N/A
        "401": *a80
        "500": *a81
      parameters:
      - name: id
        in: path
        required: true
        schema: *a79
        description: Unique ID for ACL Create
      description: Add/remove accesses to SearchDashboard for users
      summary: Modify SearchDashboard ACL
      tags: *a82
  "/search/dashboards/{id}/acl/teams":
    get:
      operationId: getSearchDashboardAclTeamsById
      responses: *a83
      parameters:
      - name: id
        in: path
        required: true
        schema: *a79
        description: Unique ID for ACL Teams Get
      description: List accesses to SearchDashboard granted to Teams
      summary: Get SearchDashboard Teams
      tags: &a86
      - dashboards
      - teams ACL
  "/search/dashboards/{id}/acl/teams/apply":
    post:
      operationId: createSearchDashboardAclTeamsApplyById
      requestBody: *a84
      responses: *a85
      parameters:
      - name: id
        in: path
        required: true
        schema: *a79
        description: Unique ID for ACL Teams Create
      description: Add/remove accesses to SearchDashboard for Teams
      summary: Modify SearchDashboard Teams ACL
      tags: *a86
  /m/default_search/search/macros:
    get:
      operationId: listSearchMacro
      tags: &a87
      - macros
      summary: Get a list of SearchMacro objects
      description: Get a list of SearchMacro objects
      x-speakeasy-entity-operation: SearchMacro#get
      responses: &a88
        "200":
          description: a list of SearchMacro objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchMacro"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSearchMacro
      tags: *a87
      summary: Create SearchMacro
      description: Create SearchMacro
      x-speakeasy-entity-operation: SearchMacro#create
      requestBody:
        description: New SearchMacro object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchMacro"
      responses: *a88
  "/m/default_search/search/macros/{id}":
    get:
      operationId: getSearchMacroById
      tags: *a87
      summary: Get SearchMacro by ID
      description: Get SearchMacro by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a89
          type: string
          example: string
        description: Unique ID to GET
      responses: *a88
    patch:
      operationId: updateSearchMacroById
      tags: *a87
      summary: Update SearchMacro
      description: Update SearchMacro
      x-speakeasy-entity-operation: SearchMacro#update
      parameters:
      - name: id
        in: path
        required: true
        schema: *a89
        description: Unique ID to PATCH
      requestBody:
        description: SearchMacro object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchMacro"
      responses: *a88
    delete:
      operationId: deleteSearchMacroById
      tags: *a87
      summary: Delete SearchMacro
      description: Delete SearchMacro
      x-speakeasy-entity-operation: SearchMacro#delete
      parameters:
      - name: id
        in: path
        required: true
        schema: *a89
        description: Unique ID to DELETE
      responses: *a88
  /m/default_search/search/saved:
    get:
      operationId: listSavedQuery
      tags: &a90
      - savedQueries
      summary: Get a list of SavedQuery objects
      description: Get a list of SavedQuery objects
      responses: &a91
        "200":
          description: a list of SavedQuery objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SavedQuery"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSavedQuery
      tags: *a90
      summary: Create SavedQuery
      description: Create SavedQuery
      x-speakeasy-entity-operation: SearchSavedQuery#create
      requestBody:
        description: New SavedQuery object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedQuery"
      responses: *a91
  "/m/default_search/search/saved/{id}":
    get:
      operationId: getSavedQueryById
      tags: *a90
      summary: Get SavedQuery by ID
      description: Get SavedQuery by ID
      x-speakeasy-entity-operation: SearchSavedQuery#read
      parameters:
      - name: id
        in: path
        required: true
        schema: &a92
          type: string
          example: string
        description: Unique ID to GET
      responses: *a91
    patch:
      operationId: updateSavedQueryById
      tags: *a90
      summary: Update SavedQuery
      description: Update SavedQuery
      x-speakeasy-entity-operation: SearchSavedQuery#update
      parameters:
      - name: id
        in: path
        required: true
        schema: *a92
        description: Unique ID to PATCH
      requestBody:
        description: SavedQuery object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedQuery"
      responses: *a91
    delete:
      operationId: deleteSavedQueryById
      tags: *a90
      summary: Delete SavedQuery
      description: Delete SavedQuery
      x-speakeasy-entity-operation: SearchSavedQuery#delete
      parameters:
      - name: id
        in: path
        required: true
        schema: *a92
        description: Unique ID to DELETE
      responses: *a91
  /search/jobs:
    get:
      operationId: listSearchJob
      tags: &a93
      - search
      summary: Get a list of SearchJob objects
      description: Get a list of SearchJob objects
      responses: &a94
        "200":
          description: a list of SearchJob objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchJob"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createSearchJob
      tags: *a93
      summary: Create SearchJob
      description: Create SearchJob
      requestBody:
        description: New SearchJob object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchJob"
      responses: *a94
  "/search/jobs/{id}":
    get:
      operationId: getSearchJobById
      tags: *a93
      summary: Get SearchJob by ID
      description: Get SearchJob by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a95
          type: string
          example: string
        description: Unique ID to GET
      responses: *a94
    patch:
      operationId: updateSearchJobById
      tags: *a93
      summary: Update SearchJob
      description: Update SearchJob
      parameters:
      - name: id
        in: path
        required: true
        schema: *a95
        description: Unique ID to PATCH
      requestBody:
        description: SearchJob object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchJob"
      responses: *a94
    delete:
      operationId: deleteSearchJobById
      tags: *a93
      summary: Delete SearchJob
      description: Delete SearchJob
      parameters:
      - name: id
        in: path
        required: true
        schema: *a95
        description: Unique ID to DELETE
      responses: *a94
  "/search/jobs/{id}/dispatch-executors":
    post:
      operationId: createSearchJobDispatchExecutorsById
      tags:
      - search
      summary: internal endpoint, dispatch search *id* to worker nodes filtered by worker node filter using RPC
      description: internal endpoint, dispatch search *id* to worker nodes filtered by worker node filter using RPC
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: search job id
  "/search/jobs/{id}/logs":
    get:
      operationId: getSearchJobLogsById
      tags:
      - search
      summary: Get search logs
      description: Get search logs
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: string
                      example: string
                    example:
                    - string
                example:
                  count: 123
                  items:
                  - string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: search job id
  "/m/{groupId}/lib/database-connections":
    get:
      operationId: getDatabaseConnectionConfig
      tags:
      - database-connections
      summary: Get a list of DatabaseConnection objects
      description: Get a list of DatabaseConnection objects
      deprecated: false
      responses:
        "200":
          description: a list of DatabaseConnectionConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DatabaseConnectionConfig"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: databaseType
        in: query
        required: false
        schema:
          type: string
          example: string
        description: type of database connection
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
    post:
      x-speakeasy-entity-operation: DatabaseConnection#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: createDatabaseConnectionConfig
      tags: &a96
      - database-connections
      summary: Create DatabaseConnectionConfig
      description: Create DatabaseConnectionConfig
      requestBody:
        description: New DatabaseConnectionConfig object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseConnectionConfig"
      responses: &a97
        "200":
          description: a list of DatabaseConnectionConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DatabaseConnectionConfig"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/m/{groupId}/lib/database-connections/{id}":
    get:
      x-speakeasy-entity-operation: DatabaseConnection#read
      operationId: getDatabaseConnectionConfigById
      tags: *a96
      summary: Get DatabaseConnectionConfig by ID
      description: Get DatabaseConnectionConfig by ID
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: id
        in: path
        required: true
        schema: &a98
          type: string
          example: string
        description: Unique ID to GET
      responses: *a97
    patch:
      x-speakeasy-entity-operation: DatabaseConnection#update
      operationId: updateDatabaseConnectionConfigById
      tags: *a96
      summary: Update DatabaseConnectionConfig
      description: Update DatabaseConnectionConfig
      parameters:
      - name: id
        in: path
        required: true
        schema: *a98
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: DatabaseConnectionConfig object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseConnectionConfig"
      responses: *a97
    delete:
      x-speakeasy-entity-operation: DatabaseConnection#delete
      operationId: deleteDatabaseConnectionConfigById
      tags: *a96
      summary: Delete DatabaseConnectionConfig
      description: Delete DatabaseConnectionConfig
      parameters:
      - name: id
        in: path
        required: true
        schema: *a98
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a97
  /lib/database-connections/test:
    post:
      operationId: createLibDatabaseConnectionsTest
      tags:
      - database-connections
      summary: Test a database connection given a type and connectionString
      description: Test a database connection given a type and connectionString
      deprecated: false
      responses:
        "200":
          description: a list of DatabaseConnectionTestResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DatabaseConnectionTestResult"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: DatabaseConnectionTest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseConnectionTest"
  "/m/{groupId}/lib/breakers":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listEventBreakerRuleset
      tags: &a99
      - event_breaker_rules
      summary: Get a list of Event Breaker Ruleset objects
      description: Get a list of Event Breaker Ruleset objects
      responses: &a100
        "200":
          description: a list of Event Breaker Ruleset objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EventBreakerRuleset"
                    x-speakeasy-ignore: true
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: EventBreakerRuleset#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: createEventBreakerRuleset
      tags: *a99
      summary: Create Event Breaker Ruleset
      description: Create Event Breaker Ruleset
      requestBody:
        description: New Event Breaker Ruleset object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventBreakerRuleset"
      responses: *a100
  "/m/{groupId}/lib/breakers/{id}":
    get:
      x-speakeasy-entity-operation: EventBreakerRuleset#read
      operationId: getEventBreakerRulesetById
      tags: *a99
      summary: Get Event Breaker Ruleset by ID
      description: Get Event Breaker Ruleset by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a101
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a100
    patch:
      x-speakeasy-entity-operation: EventBreakerRuleset#update
      operationId: updateEventBreakerRulesetById
      tags: *a99
      summary: Update Event Breaker Ruleset
      description: Update Event Breaker Ruleset
      parameters:
      - name: id
        in: path
        required: true
        schema: *a101
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: Event Breaker Ruleset object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventBreakerRuleset"
      responses: *a100
    delete:
      x-speakeasy-entity-operation: EventBreakerRuleset#delete
      operationId: deleteEventBreakerRulesetById
      tags: *a99
      summary: Delete Event Breaker Ruleset
      description: Delete Event Breaker Ruleset
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: id
        in: path
        required: true
        schema: *a101
        description: Unique ID to DELETE
      responses: *a100
  "/m/{groupId}/lib/vars":
    get:
      operationId: getGlobalVariable
      tags: &a105
      - global_variables
      summary: List all GlobalVars with references
      description: List all GlobalVars with references
      deprecated: false
      responses: &a106
        "200":
          description: a list of Global Variable objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GlobalVar"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: with
        in: query
        required: false
        schema: &a107
          type: string
          example: string
        description: Pass "refs" to include references to fields the variable is used in
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
    post:
      x-speakeasy-entity-operation: GlobalVar#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'default'.
        schema:
          type: string
          example: string
        example: "default"
        default: "default"
      operationId: createGlobalVariable
      tags: &a102
      - global_variables
      summary: Create Global Variable
      description: Create Global Variable
      requestBody: &a108
        description: New Global Variable object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalVar"
      responses: &a103
        "200":
          description: a list of Global Variable objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GlobalVar"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/m/{groupId}/lib/vars/{id}":
    get:
      x-speakeasy-entity-operation: GlobalVar#read
      operationId: getGlobalVariableById
      tags: *a102
      summary: Get Global Variable by ID
      description: Get Global Variable by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a104
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'default'.
        schema:
          type: string
          example: string
        example: "default"
        default: "default"
      responses: *a103
    patch:
      x-speakeasy-entity-operation: GlobalVar#update
      operationId: updateGlobalVariableById
      tags: *a102
      summary: Update Global Variable
      description: Update Global Variable
      parameters:
      - name: id
        in: path
        required: true
        schema: *a104
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody: &a110
        description: Global Variable object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalVar"
      responses: *a103
    delete:
      x-speakeasy-entity-operation: GlobalVar#delete
      operationId: deleteGlobalVariableById
      tags: *a102
      summary: Delete Global Variable
      description: Delete Global Variable
      parameters:
      - name: id
        in: path
        required: true
        schema: *a104
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a103
  "/m/{groupId}/p/{pack}/lib/vars":
    get:
      x-speakeasy-entity-operation: PackVars#read
      operationId: getGlobalVariableLibVarsByPack
      tags: *a105
      summary: List all GlobalVars with references within a Pack
      description: List all GlobalVars with references within a Pack
      deprecated: false
      responses: *a106
      parameters:
      - name: with
        in: query
        required: false
        schema: *a107
        description: Pass "refs" to include references to fields the variable is used in for pack
      - name: pack
        in: path
        required: true
        schema: &a109
          type: string
          example: string
        description: pack ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
    post:
      x-speakeasy-entity-operation: PackVars#create
      operationId: createGlobalVariableLibVarsByPack
      tags: *a102
      summary: Create Global Variable within a Pack
      description: Create Global Variable within a Pack
      requestBody: *a108
      responses: *a103
      parameters:
      - name: pack
        in: path
        required: true
        schema: *a109
        description: pack ID to POST
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
  "/m/{groupId}/p/{pack}/lib/vars/{id}":
    get:
      operationId: getGlobalVariableLibVarsByPackAndId
      tags: *a102
      summary: Get Global Variable by ID within a Pack
      description: Get Global Variable by ID within a Pack
      responses: *a103
      parameters:
      - name: id
        in: path
        required: true
        schema: *a104
        description: Unique ID to GET for pack
      - name: pack
        in: path
        required: true
        schema: *a109
        description: pack ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
    patch:
      x-speakeasy-entity-operation: PackVars#update
      operationId: updateGlobalVariableLibVarsByPackAndId
      tags: *a102
      summary: Update Global Variable within a Pack
      description: Update Global Variable within a Pack
      requestBody: *a110
      responses: *a103
      parameters:
      - name: id
        in: path
        required: true
        schema: *a104
        description: Unique ID to PATCH for pack
      - name: pack
        in: path
        required: true
        schema: *a109
        description: pack ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
    delete:
      x-speakeasy-entity-operation: PackVars#delete
      operationId: deleteGlobalVariableLibVarsByPackAndId
      tags: *a102
      summary: Delete Global Variable within a Pack
      description: Delete Global Variable within a Pack
      responses: *a103
      parameters:
      - name: id
        in: path
        required: true
        schema: *a104
        description: Unique ID to DELETE for pack
      - name: pack
        in: path
        required: true
        schema: *a109
        description: pack ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
  "/m/{groupId}/lib/hmac-functions":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listHmacFunction
      tags: &a111
      - hmac-functions
      summary: Get a list of HmacFunction objects
      description: Get a list of HmacFunction objects
      responses: &a112
        "200":
          description: a list of HmacFunction objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/HmacFunction"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: HmacFunction#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: createHmacFunction
      tags: *a111
      summary: Create HmacFunction
      description: Create HmacFunction
      requestBody:
        description: New HmacFunction object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HmacFunction"
      responses: *a112
  "/m/{groupId}/lib/hmac-functions/{id}":
    get:
      x-speakeasy-entity-operation: HmacFunction#read
      operationId: getHmacFunctionById
      tags: *a111
      summary: Get HmacFunction by ID
      description: Get HmacFunction by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a113
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a112
    patch:
      x-speakeasy-entity-operation: HmacFunction#update
      operationId: updateHmacFunctionById
      tags: *a111
      summary: Update HmacFunction
      description: Update HmacFunction
      parameters:
      - name: id
        in: path
        required: true
        schema: *a113
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: HmacFunction object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HmacFunction"
      responses: *a112
    delete:
      x-speakeasy-entity-operation: HmacFunction#delete
      operationId: deleteHmacFunctionById
      tags: *a111
      summary: Delete HmacFunction
      description: Delete HmacFunction
      parameters:
      - name: id
        in: path
        required: true
        schema: *a113
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a112
  "/m/{groupId}/system/inputs":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listInput
      tags: &a114
      - inputs
      summary: Get a list of Input objects
      description: Get a list of Input objects
      responses: &a115
        "200":
          description: a list of Input objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Input"
                    x-speakeasy-ignore: true
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Source#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: id
        in: query
        required: true
        description: The id of this source instance
        schema:
          type: string
          example: string
      operationId: createInput
      tags: *a114
      summary: Create Input
      description: Create Input
      requestBody:
        description: New Input object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Input"
      responses: *a115
  "/m/{groupId}/system/inputs/{id}":
    get:
      x-speakeasy-entity-operation: Source#read
      operationId: getInputById
      tags: *a114
      summary: Get Input by ID
      description: Get Input by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a116
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a115
    patch:
      x-speakeasy-entity-operation: Source#update
      operationId: updateInputById
      tags: *a114
      summary: Update Input
      description: Update Input
      parameters:
      - name: id
        in: path
        required: true
        schema: *a116
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: Input object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Input"
      responses: *a115
    delete:
      x-speakeasy-entity-operation: Source#delete
      operationId: deleteInputById
      tags: *a114
      summary: Delete Input
      description: Delete Input
      parameters:
      - name: id
        in: path
        required: true
        schema: *a116
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a115
  "/m/{groupId}/system/inputs/{id}/hectoken":
    post:
      operationId: createInputHecTokenById
      tags:
      - inputs
      summary: Add token and optional metadata to an existing hec input
      description: Add token and optional metadata to an existing hec input
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: AddHecTokenRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddHecTokenRequest"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: hec input id
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
  "/m/{groupId}/system/inputs/{id}/hectoken/{token}":
    patch:
      operationId: updateInputHecTokenByIdAndToken
      tags:
      - inputs
      summary: Update token metadata on existing hec input
      description: Update token metadata on existing hec input
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: UpdateHecTokenRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateHecTokenRequest"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: hec input id
      - name: token
        in: path
        required: true
        schema:
          type: string
          example: string
        description: token to update
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
  /system/iometrics:
    get:
      operationId: listIoMetricsEntry
      tags: &a117
      - iometrics
      summary: Get a list of IoMetricsEntry objects
      description: Get a list of IoMetricsEntry objects
      responses: &a118
        "200":
          description: a list of IoMetricsEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/IoMetricsEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/iometrics/{id}":
    get:
      operationId: getIoMetricsEntryById
      tags: *a117
      summary: Get IoMetricsEntry by ID
      description: Get IoMetricsEntry by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a119
          type: string
          example: string
        description: Unique ID to GET
      responses: *a118
    patch:
      operationId: updateIoMetricsEntryById
      tags: *a117
      summary: Update IoMetricsEntry
      description: Update IoMetricsEntry
      parameters:
      - name: id
        in: path
        required: true
        schema: *a119
        description: Unique ID to PATCH
      requestBody:
        description: IoMetricsEntry object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IoMetricsEntry"
      responses: *a118
    delete:
      operationId: deleteIoMetricsEntryById
      tags: *a117
      summary: Delete IoMetricsEntry
      description: Delete IoMetricsEntry
      parameters:
      - name: id
        in: path
        required: true
        schema: *a119
        description: Unique ID to DELETE
      responses: *a118
  "/m/{groupId}/system/outputs":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listOutput
      tags: &a120
      - outputs
      summary: Get a list of Output objects
      description: Get a list of Output objects
      responses: &a121
        "200":
          description: a list of Output objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Output"
                    x-speakeasy-ignore: true
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Destination#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: id
        in: query
        required: true
        description: The consumer group id to create
        schema:
          type: string
          example: string
      operationId: createOutput
      tags: *a120
      summary: Create Output
      description: Create Output
      requestBody:
        description: New Output object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Output"
      responses: *a121
  "/m/{groupId}/system/outputs/{id}":
    get:
      x-speakeasy-entity-operation: Destination#read
      operationId: getOutputById
      tags: *a120
      summary: Get Output by ID
      description: Get Output by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a122
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a121
    patch:
      x-speakeasy-entity-operation: Destination#update
      operationId: updateOutputById
      tags: *a120
      summary: Update Output
      description: Update Output
      parameters:
      - name: id
        in: path
        required: true
        schema: *a122
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: Output object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Output"
      responses: *a121
    delete:
      x-speakeasy-entity-operation: Destination#delete
      operationId: deleteOutputById
      tags: *a120
      summary: Delete Output
      description: Delete Output
      parameters:
      - name: id
        in: path
        required: true
        schema: *a122
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a121
  "/m/{groupId}/system/outputs/{id}/pq":
    delete:
      operationId: deleteOutputPqById
      tags:
      - outputs
      summary: Clears destination persistent queue
      description: Clears destination persistent queue
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Output Id
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
    get:
      operationId: getOutputPqById
      tags:
      - outputs
      summary: Retrieves status of latest clear PQ job for an output
      description: Retrieves status of latest clear PQ job for an output
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Output Id
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
  "/m/{groupId}/system/outputs/{id}/samples":
    get:
      operationId: getOutputSamplesById
      tags:
      - outputs
      summary: Retrieve samples data for the specified output. Used to get sample data for the test action.
      description: Retrieve samples data for the specified output. Used to get sample data for the test action.
      deprecated: false
      responses:
        "200":
          description: a list of OutputSamplesResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/OutputSamplesResponse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Output Id
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
  "/m/{groupId}/system/outputs/{id}/test":
    post:
      operationId: createOutputTestById
      tags:
      - outputs
      summary: Send sample data to an output to validate configuration or test connectivity
      description: Send sample data to an output to validate configuration or test connectivity
      deprecated: false
      responses:
        "200":
          description: a list of OutputTestResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/OutputTestResponse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: OutputTestRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutputTestRequest"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Output Id
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
  "/m/{groupId}/lib/parquet-schemas":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listSchema
      tags: &a123
      - parquetschemas
      summary: Get a list of Schema objects
      description: Get a list of Schema objects
      responses: &a124
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SchemaLibEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: ParquetSchema#create
      operationId: createSchema
      tags: *a123
      summary: Create Schema
      description: Create Schema
      requestBody:
        description: New Schema object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaLibEntry"
      responses: *a124
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
  "/m/{groupId}/lib/parquet-schemas/{id}":
    get:
      x-speakeasy-entity-operation: ParquetSchema#read
      operationId: getSchemaById
      tags: *a123
      summary: Get Schema by ID
      description: Get Schema by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a125
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a124
    patch:
      x-speakeasy-entity-operation: ParquetSchema#update
      operationId: updateSchemaById
      tags: *a123
      summary: Update Schema
      description: Update Schema
      parameters:
      - name: id
        in: path
        required: true
        schema: *a125
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: Schema object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaLibEntry"
      responses: *a124
    delete:
      x-speakeasy-entity-operation: ParquetSchema#delete
      operationId: deleteSchemaById
      tags: *a123
      summary: Delete Schema
      description: Delete Schema
      parameters:
      - name: id
        in: path
        required: true
        schema: *a125
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a124
  "/m/{groupId}/pipelines":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listPipeline
      tags: &a126
      - pipelines
      summary: Get a list of Pipeline objects
      description: Get a list of Pipeline objects
      responses: &a127
        "200":
          description: a list of Pipeline objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pipeline"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Pipeline#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: createPipeline
      tags: *a126
      summary: Create Pipeline
      description: Create Pipeline
      requestBody:
        description: New Pipeline object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
      responses: *a127
  "/m/{groupId}/pipelines/{id}":
    get:
      operationId: getPipelineById
      tags: *a126
      summary: Get Pipeline by ID
      description: Get Pipeline by ID
      x-speakeasy-entity-operation: Pipeline#get
      parameters:
      - name: id
        in: path
        required: true
        schema: &a128
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a127
    patch:
      x-speakeasy-entity-operation: Pipeline#update
      operationId: updatePipelineById
      tags: *a126
      summary: Update Pipeline
      description: Update Pipeline
      parameters:
      - name: id
        in: path
        required: true
        schema: *a128
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: Pipeline object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
      responses: *a127
    delete:
      x-speakeasy-entity-operation: Pipeline#delete
      operationId: deletePipelineById
      tags: *a126
      summary: Delete Pipeline
      description: Delete Pipeline
      parameters:
      - name: id
        in: path
        required: true
        schema: *a128
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a127
  /system/profiler:
    get:
      operationId: listProfilerItem
      tags: &a132
      - profiler
      summary: Get a list of ProfilerItem objects
      description: Get a list of ProfilerItem objects
      responses: &a133
        "200":
          description: a list of ProfilerItem objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProfilerItem"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createProfilerItem
      tags: *a132
      summary: Create ProfilerItem
      description: Create ProfilerItem
      requestBody:
        description: New ProfilerItem object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfilerItem"
      responses: *a133
  "/system/profiler/{id}":
    get:
      operationId: getProfilerItemById
      tags: *a132
      summary: Get ProfilerItem by ID
      description: Get ProfilerItem by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a134
          type: string
          example: string
        description: Unique ID to GET
      responses: *a133
    patch:
      operationId: updateProfilerItemById
      tags: *a132
      summary: Update ProfilerItem
      description: Update ProfilerItem
      parameters:
      - name: id
        in: path
        required: true
        schema: *a134
        description: Unique ID to PATCH
      requestBody:
        description: ProfilerItem object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfilerItem"
      responses: *a133
    delete:
      operationId: deleteProfilerItemById
      tags: *a132
      summary: Delete ProfilerItem
      description: Delete ProfilerItem
      parameters:
      - name: id
        in: path
        required: true
        schema: *a134
        description: Unique ID to DELETE
      responses: *a133
  /routes:
    get:
      operationId: listRoutes
      tags: &a135
      - routes
      summary: Get a list of Routes objects
      description: Get a list of Routes objects
      responses: &a136
        "200":
          description: a list of Routes objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Routes"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/routes/{id}":
    get:
      operationId: getRoutesById
      tags: *a135
      summary: Get Routes by ID
      description: Get Routes by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a137
          type: string
          example: string
        description: Unique ID to GET
      responses: *a136
    patch:
      operationId: updateRoutesById
      tags: *a135
      summary: Update Routes
      description: Update Routes
      parameters:
      - name: id
        in: path
        required: true
        schema: *a137
        description: Unique ID to PATCH
      requestBody:
        description: Routes object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Routes"
      responses: *a136
  "/m/{groupId}/routes/default":
    get:
      x-speakeasy-entity-operation: Routes#get
      operationId: getRoutesByGroupId
      tags: *a135
      summary: get routes for a Pack
      description: get routes for a Pack
      responses: *a136
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: group Id
        default: default
        example: default
    patch:
      x-speakeasy-entity-operation: Routes#create,update,delete
      operationId: createRoutesByGroupId
      tags: *a135
      summary: Create route for a Pack
      description: Create route for a Pack
      responses: *a136
      requestBody:
        description: Routes object to be created
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Routes"
      parameters:
      - name: groupId
        in: path
        required: true
        schema: &a137
          type: string
          example: string
        description: group Id
        default: default
        example: default
  "/routes/{id}/append":
    post:
      operationId: createRoutesAppendById
      tags:
      - routes
      summary: Appends routes to the end of the routing table
      description: Appends routes to the end of the routing table
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: RouteDefinitions object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RouteDefinitions"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: the route table to be appended to - currently default is the only supported value
  "/packs":
    get:
      operationId: getPacks
      tags: *a135
      summary: Get a list of Pipeline objects within a Pack
      description: Get a list of Pipeline objects within a Pack
      responses: *a136
  "/m/{groupId}/p/{pack}/pipelines":
    get:
      operationId: getPipelinesByPack
      tags: *a135
      summary: Get a list of Pipeline objects within a Pack
      description: Get a list of Pipeline objects within a Pack
      responses: *a136
      parameters:
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
        description: pack ID to GET
      - name: groupId
        in: path
        required: true
        schema: &a138
          type: string
          example: string
        description: group Id
    post:
      x-speakeasy-entity-operation: PackPipeline#create
      operationId: createPipelineByPack
      tags: *a135
      summary: Create Pipeline within a Pack
      description: Create Pipeline within a Pack
      requestBody:
        description: New Pipeline object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
      responses: *a136
      parameters:
      - name: pack
        in: path
        required: true
        schema: *a138
        description: pack ID to POST
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: group Id
  "/m/{groupId}/p/{pack}/pipelines/{id}":
    get:
      operationId: getPipelinesByPackWithId
      tags: *a135
      summary: Get a list of Pipelines by ID within a Pack
      description: Get a list of Pipeline by ID within a Pack
      x-speakeasy-entity-operation: PackPipeline#get
      responses: *a136
      parameters:
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
        description: pack ID to GET
      - name: id
        in: path
        required: true
        schema: *a137
        description: Unique ID to GET for pack
      - name: groupId
        in: path
        required: true
        schema: &a138
          type: string
          example: string
        description: group Id
    patch:
      x-speakeasy-entity-operation: PackPipeline#update
      operationId: updatePipelineByPackAndId
      tags: *a126
      summary: Update Pipeline within a Pack
      description: Update Pipeline within a Pack
      responses: *a127
      requestBody:
        description: New Pipeline object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
      parameters:
      - name: id
        in: path
        required: true
        schema: *a128
        description: Unique ID to PATCH for pack
      - name: pack
        in: path
        required: true
        schema: *a138
        description: pack ID to PATCH
      - name: disabled
        in: query
        required: false
        schema:
          type: boolean
          example: true
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: group Id
  "/m/{groupId}/p/{pack}/system/inputs":
    get:
      operationId: getSystemInputsByPack
      tags: *a135
      summary: Get a list of inputs within a Pack
      description: Get a list of inputs within a Pack
      responses: *a136
      parameters:
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
        description: pack inputs to GET
      - name: groupId
        in: path
        required: true
        schema: &a138
          type: string
          example: string
        description: group Id
    post:
      x-speakeasy-entity-operation: PackSource#create
      operationId: createSystemInputsByPack
      tags: *a126
      summary: Create input source for a Pack
      description: Create input source for a Pack
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Input"
      responses: *a127
      parameters:
      - name: pack
        in: path
        required: true
        schema: *a138
        description: pack inputs to POST
      - name: groupId
        in: path
        required: true
        schema: &a138
          type: string
          example: string
        description: group Id
      - name: id
        in: query
        required: true
        schema: *a137
        description: Unique ID to create pack source
  "/m/{groupId}/p/{pack}/system/inputs/{id}":
    get:
      x-speakeasy-entity-operation: PackSource#read
      operationId: getSystemInputsByPackAndId
      tags: *a135
      summary: Get input source by ID within a Pack
      description: Get input source by ID within a Pack
      responses: *a136
      parameters:
      - name: id
        in: path
        required: true
        schema: *a137
        description: Unique ID to GET for pack source
      - name: pack
        in: path
        required: true
        schema: *a138
        description: pack ID to GET
      - name: groupId
        in: path
        required: true
        schema: &a138
          type: string
          example: string
        description: group Id
    patch:
      x-speakeasy-entity-operation: PackSource#update
      operationId: updateSystemInputsByPack
      tags: *a126
      summary: Update input source a Pack
      description: Update input source a Pack
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Input"
      responses: *a127
      parameters:
      - name: pack
        in: path
        required: true
        schema: *a138
        description: pack ID to PATCH
      - name: disabled
        in: query
        required: false
        schema:
          type: boolean
          example: true
      - name: groupId
        in: path
        required: true
        schema: &a138
          type: string
          example: string
        description: group Id
      - name: id
        in: path
        required: true
        schema: *a137
        description: Unique ID to PATCH for pack source
    delete:
      x-speakeasy-entity-operation: PackSource#delete
      operationId: deleteSystemInputsByPack
      tags: *a126
      summary: Delete input source a Pack
      description: Delete input source a Pack
      responses: *a127
      parameters:
      - name: pack
        in: path
        required: true
        schema: *a138
        description: pack ID to DELETE
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: group Id
      - name: id
        in: path
        required: true
        schema: *a137
        description: Unique ID to DELETE for pack source
  "/m/{groupId}/p/{pack}/system/outputs":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
      operationId: listPackOutput
      tags: &a120
      - outputs
      summary: Get a list of Output objects
      description: Get a list of Output objects
      responses: &a121
        "200":
          description: a list of Output objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Output"
                    x-speakeasy-ignore: true
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: PackDestination#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
      - name: id
        in: query
        required: true
        schema:
          type: string
          example: string
      operationId: createPackOutput
      tags: *a120
      summary: Create Output
      description: Create Output
      requestBody:
        description: New Output object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Output"
      responses: *a121
  "/m/{groupId}/p/{pack}/system/outputs/{id}":
    get:
      x-speakeasy-entity-operation: PackDestination#read
      operationId: getPackOutputById
      tags: *a120
      summary: Get Output by ID
      description: Get Output by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a122
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
      responses: *a121
    patch:
      x-speakeasy-entity-operation: PackDestination#update
      operationId: updatePackOutputById
      tags: *a120
      summary: Update Output
      description: Update Output
      parameters:
      - name: id
        in: path
        required: true
        schema: *a122
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
      requestBody:
        description: Output object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Output"
      responses: *a121
    delete:
      x-speakeasy-entity-operation: PackDestination#delete
      operationId: deletePackOutputById
      tags: *a120
      summary: Delete Output
      description: Delete Output
      parameters:
      - name: id
        in: path
        required: true
        schema: *a122
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
      responses: *a121
  "/m/{groupId}/p/{pack}/system/lookups":
    get:
      operationId: getSystemLookupsByPack
      tags: *a135
      summary: Get a list of lookup objects within a Pack
      description: Get a list of lookups objects within a Pack
      responses: *a136
      parameters:
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
        description: pack ID to GET
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: group Id
    post:
      x-speakeasy-entity-operation: PackLookups#create
      operationId: createSystemLookupsByPack
      tags: *a135
      summary: Create a lookup objects within a Pack
      description: Get a lookups objects within a Pack
      responses: *a136
      requestBody:
        description: Pipeline object to be updated in specified Project
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LookupFile"
      parameters:
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
        description: pack ID to GET
      - name: groupId
        in: path
        required: true
        schema: &a138
          type: string
          example: string
        description: group Id
  "/m/{groupId}/p/{pack}/system/lookups/{id}":
    get:
      x-speakeasy-entity-operation: PackLookups#read
      operationId: getSystemLookupsByPackAndId
      tags: *a135
      summary: Get list of lookups by ID within a Pack
      description: Get list of lookups by ID within a Pack
      responses: *a136
      parameters:
      - name: id
        in: path
        required: true
        schema: *a137
        description: Unique ID to GET for pack
      - name: pack
        in: path
        required: true
        schema: *a138
        description: pack ID to GET
      - name: groupId
        in: path
        required: true
        schema: &a138
          type: string
          example: string
        description: group Id
    patch:
      x-speakeasy-entity-operation: PackLookups#update
      operationId: createSystemLookupsByPackAndId
      tags: *a126
      summary: Update system lookup within a Pack
      description: Update system lookup within a Pack
      responses: *a127
      requestBody:
        description: Pipeline object to be updated in specified Project
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LookupFile"
      parameters:
      - name: id
        in: path
        required: true
        schema: *a128
        description: Unique ID to PATCH for pack
      - name: pack
        in: path
        required: true
        schema: *a138
        description: pack ID to PATCH
      - name: disabled
        in: query
        required: false
        schema:
          type: boolean
          example: true
      - name: groupId
        in: path
        required: true
        schema: &a138
          type: string
          example: string
        description: group Id
    delete:
      x-speakeasy-entity-operation: PackLookups#delete
      operationId: deleteSystemLookupsByPackAndId
      tags: *a126
      summary: Delete system lookup within a Pack
      description: Delete system lookup within a Pack
      responses: *a127
      parameters:
      - name: id
        in: path
        required: true
        schema: *a128
        description: Unique ID to DELETE for pack
      - name: pack
        in: path
        required: true
        schema: *a138
        description: pack ID to DELETE
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: group Id
  "/m/{groupId}/p/{pack}/lib/breakers":
    get:
      operationId: getBreakersByPack
      tags: *a135
      summary: Get a list of breakers within a Pack
      description: Get a list of breakers within a Pack
      responses: *a136
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventBreakerRuleset"
      parameters:
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
        description: pack ID to GET
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: group ID to GET
    post:
      x-speakeasy-entity-operation: PackBreakers#create
      operationId: createBreakersByPack
      tags: *a135
      summary: Create a breaker within a Pack
      description: Get a breaker within a Pack
      responses: *a136
      requestBody:
        description: Pipeline object to be updated in specified Project
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventBreakerRuleset"
      parameters:
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
        description: pack ID to POST
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: group ID to GET
  "/m/{groupId}/p/{pack}/lib/breakers/{id}":
    get:
      operationId: getBreakersByPackAndId
      tags: *a135
      summary: Get list of breakers by ID within a Pack
      description: Get list of breakers by ID within a Pack
      x-speakeasy-entity-operation: PackBreakers#get
      responses: *a136
      parameters:
      - name: id
        in: path
        required: true
        schema: *a137
        description: Unique ID to GET for pack
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
        description: pack ID to POST
      - name: groupId
        in: path
        required: true
        schema: &a138
          type: string
          example: string
        description: group Id
    patch:
      x-speakeasy-entity-operation: PackBreakers#update
      operationId: updateBreakersByPackAndId
      tags: *a135
      summary: Update Routes within a Pack
      description: Update Routes by ID within a Pack
      requestBody:
        description: Pipeline object to be updated in specified Project
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventBreakerRuleset"
      responses: *a136
      parameters:
      - name: id
        in: path
        required: true
        schema: *a128
        description: Unique ID to PATCH for pack
      - name: pack
        in: path
        required: true
        schema: *a138
        description: pack ID to POST
      - name: groupId
        in: path
        required: true
        schema: &a138
          type: string
          example: string
        description: group Id
    delete:
      x-speakeasy-entity-operation: PackBreakers#delete
      operationId: deleteBreakersByPackAndId
      tags: *a126
      summary: Delete breakers within a Pack
      description: Delete breakers within a Pack
      responses: *a127
      parameters:
      - name: id
        in: path
        required: true
        schema: *a128
        description: Unique ID to DELETE for pack
      - name: pack
        in: path
        required: true
        schema: *a138
        description: pack ID to DELETE
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: group Id
  "/m/{groupId}/p/{pack}/routes/default":
    get:
      x-speakeasy-entity-operation: PackRoutes#get
      operationId: getRoutesByPack
      tags: *a135
      summary: get routes for a Pack
      description: get routes for a Pack
      responses: *a136
      parameters:
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
        description: pack ID to GET
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: group Id
    patch:
      x-speakeasy-entity-operation: PackRoutes#create,update,delete
      operationId: createRoutesByPack
      tags: *a135
      summary: Create route for a Pack
      description: Create route for a Pack
      responses: *a136
      requestBody:
        description: Route object to be updated in specified Pack
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Routes"
      parameters:
      - name: pack
        in: path
        required: true
        schema:
          type: string
          example: string
        description: pack ID to GET
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: group Id
  "/m/{groupId}/lib/schemas":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listLibSchemas
      tags: &a144
      - schemas
      summary: Get a list of Schema objects
      description: Get a list of Schema objects
      responses: &a145
        "200":
          description: a list of Schema objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SchemaLibEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Schema#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: createLibSchemas
      tags: *a144
      summary: Create Schema
      description: Create Schema
      requestBody: &a147
        description: New Schema object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaLibEntry"
      responses: *a145
  "/m/{groupId}/lib/schemas/{id}":
    get:
      x-speakeasy-entity-operation: Schema#read
      operationId: getLibSchemasById
      tags: *a144
      summary: Get Schema by ID
      description: Get Schema by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a146
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a145
    patch:
      x-speakeasy-entity-operation: Schema#update
      operationId: updateLibSchemasById
      tags: *a144
      summary: Update Schema
      description: Update Schema
      parameters:
      - name: id
        in: path
        required: true
        schema: *a146
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody: &a149
        description: Schema object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaLibEntry"
      responses: *a145
    delete:
      x-speakeasy-entity-operation: Schema#delete
      operationId: deleteLibSchemasById
      tags: *a144
      summary: Delete Schema
      description: Delete Schema
      parameters:
      - name: id
        in: path
        required: true
        schema: *a146
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a145
  "/p/{pack}/lib/schemas":
    get:
      operationId: getSchemaLibByPack
      tags: *a144
      summary: Get a list of Schema objects within a Pack
      description: Get a list of Schema objects within a Pack
      responses: *a145
      parameters:
      - name: pack
        in: path
        required: true
        schema: &a148
          type: string
          example: string
        description: pack ID to GET
    post:
      operationId: createSchemaLibByPack
      tags: *a144
      summary: Create Schema within a Pack
      description: Create Schema within a Pack
      requestBody: *a147
      responses: *a145
      parameters:
      - name: pack
        in: path
        required: true
        schema: *a148
        description: pack ID to POST
  "/p/{pack}/lib/schemas/{id}":
    get:
      operationId: getSchemaLibByPackAndId
      tags: *a144
      summary: Get Schema by ID within a Pack
      description: Get Schema by ID within a Pack
      parameters:
      - name: id
        in: path
        required: true
        schema: *a146
        description: Unique ID to GET for pack
      - name: pack
        in: path
        required: true
        schema: *a148
        description: pack ID to GET
      responses: *a145
    patch:
      operationId: updateSchemaLibByPackAndId
      tags: *a144
      summary: Update Schema within a Pack
      description: Update Schema within a Pack
      parameters:
      - name: id
        in: path
        required: true
        schema: *a146
        description: Unique ID to PATCH for pack
      - name: pack
        in: path
        required: true
        schema: *a148
        description: pack ID to PATCH
      requestBody: *a149
      responses: *a145
    delete:
      operationId: deleteSchemaLibByPackAndId
      tags: *a144
      summary: Delete Schema within a Pack
      description: Delete Schema within a Pack
      parameters:
      - name: id
        in: path
        required: true
        schema: *a146
        description: Unique ID to DELETE for pack
      - name: pack
        in: path
        required: true
        schema: *a148
        description: pack ID to DELETE
      responses: *a145
  /system/secrets:
    get:
      operationId: listRestSecret
      tags: &a150
      - secrets
      summary: Get a list of RestSecret objects
      description: Get a list of RestSecret objects
      responses: &a151
        "200":
          description: a list of RestSecret objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/RestSecret"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createRestSecret
      tags: *a150
      summary: Create RestSecret
      description: Create RestSecret
      requestBody:
        description: New RestSecret object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestSecret"
      responses: *a151
  "/system/secrets/{id}":
    get:
      operationId: getRestSecretById
      tags: *a150
      summary: Get RestSecret by ID
      description: Get RestSecret by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a152
          type: string
          example: string
        description: Unique ID to GET
      responses: *a151
    patch:
      operationId: updateRestSecretById
      tags: *a150
      summary: Update RestSecret
      description: Update RestSecret
      parameters:
      - name: id
        in: path
        required: true
        schema: *a152
        description: Unique ID to PATCH
      requestBody:
        description: RestSecret object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestSecret"
      responses: *a151
    delete:
      operationId: deleteRestSecretById
      tags: *a150
      summary: Delete RestSecret
      description: Delete RestSecret
      parameters:
      - name: id
        in: path
        required: true
        schema: *a152
        description: Unique ID to DELETE
      responses: *a151
  /system/status/inputs:
    get:
      operationId: listInputStatus
      tags: &a153
      - inputs
      summary: Get a list of InputStatus objects
      description: Get a list of InputStatus objects
      responses: &a154
        "200":
          description: a list of InputStatus objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/InputStatus"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/status/inputs/{id}":
    get:
      operationId: getInputStatusById
      tags: *a153
      summary: Get InputStatus by ID
      description: Get InputStatus by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Unique ID to GET
      responses: *a154
  /system/status/outputs:
    get:
      operationId: listOutputStatus
      tags: &a155
      - outputs
      summary: Get a list of OutputStatus objects
      description: Get a list of OutputStatus objects
      responses: &a156
        "200":
          description: a list of OutputStatus objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/OutputStatus"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/status/outputs/{id}":
    get:
      operationId: getOutputStatusById
      tags: *a155
      summary: Get OutputStatus by ID
      description: Get OutputStatus by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Unique ID to GET
      responses: *a156
  /edge/appscope/processes:
    post:
      operationId: createEdgeAppscopeProcesses
      tags:
      - edgeAppScopeProcesses
      - edge
      summary: Attach AppScope to a process running on the edge host
      description: Attach AppScope to a process running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of AppScopeProcess objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppScopeProcess"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: pid
        in: query
        required: true
        schema:
          type: string
          example: string
        description: config string required
    get:
      operationId: getEdgeAppscopeProcesses
      tags:
      - edgeAppScopeProcesses
      - edge
      summary: Get a detailed list of scoped processes running on the edge host
      description: Get a detailed list of scoped processes running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of AppScopeProcess objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppScopeProcess"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/edge/appscope/processes/{pid}":
    delete:
      operationId: deleteEdgeAppscopeProcessesByPid
      tags:
      - edgeAppScopeProcesses
      - edge
      summary: Detach AppScope from a process running on the edge host
      description: Detach AppScope from a process running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of AppScopeProcess objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppScopeProcess"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: pid
        in: path
        required: true
        schema:
          type: string
          example: string
        description: config string required
    get:
      operationId: getEdgeAppscopeProcessesByPid
      tags:
      - edgeAppScopeProcesses
      - edge
      summary: Get details of a scoped process running on the edge host
      description: Get details of a scoped process running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of AppScopeProcess objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppScopeProcess"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: pid
        in: path
        required: true
        schema:
          type: string
          example: string
        description: pid
    put:
      operationId: updateEdgeAppscopeProcessesByPid
      tags:
      - edgeAppScopeProcesses
      - edge
      summary: Update AppScope configuration for a process running on the edge host
      description: Update AppScope configuration for a process running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of AppScopeProcess objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppScopeProcess"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: pid
        in: path
        required: true
        schema:
          type: string
          example: string
        description: config string required
  /edge/events/collectors:
    get:
      operationId: getEdgeEventsCollectors
      tags:
      - edgeEvents
      - edge
      summary: Get list of configured collectors
      description: Get list of configured collectors
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/events/query:
    get:
      operationId: getEdgeEventsQuery
      tags:
      - events
      summary: Get events generated by a specified source
      description: Get events generated by a specified source
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: Files
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Optional parameter, when provided the files and provided offsets are used to look for events.
      - name: source
        in: query
        required: false
        schema:
          type: string
          example: string
        description: The type of source events to search in the format {type}/{subtype} i.e system_state/hostsfile, system_state/routes, etc...
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Maximum number of log lines to retrieve starting from offset.
      - name: et
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Epoch timestamp of the earliest event (includes rolled files present on disk)
      - name: lt
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Epoch timestamp of the latest event (includes rolled files present on disk)
      - name: filter
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filter
  /edge/fileinspect:
    get:
      operationId: getEdgeFileinspect
      tags:
      - edgeFiles
      - edge
      summary: Get details about a file on the edge host.
      description: Get details about a file on the edge host.
      deprecated: false
      responses:
        "200":
          description: a list of EdgeFileInspectResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EdgeFileInspectResponse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/edge/ls{path}":
    get:
      operationId: getEdgeLsByPath
      tags:
      - edgeLs
      - edge
      summary: Get a directory listing of the given path
      description: Get a directory listing of the given path
      deprecated: false
      responses:
        "200":
          description: a list of FilesystemEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/FilesystemEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: path
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Defaults to empty for the root directory
  /products/edge/map/query:
    post:
      operationId: createProductsEdgeMapQuery
      tags:
      - edge
      summary: Data for the Map View for Edge Fleets (Leader only)
      description: Data for the Map View for Edge Fleets (Leader only)
      deprecated: false
      responses:
        "200":
          description: a list of EdgeMapQueryResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EdgeMapQueryResult"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/metadata:
    get:
      operationId: getEdgeMetadata
      tags:
      - edge
      summary: Get the host's metadata structure
      description: Get the host's metadata structure
      deprecated: false
      responses:
        "200":
          description: a list of Metadata objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Metadata"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/file/ingest:
    post:
      operationId: createEdgeFileIngest
      tags:
      - file
      - ingest
      - edge
      summary: Ingest a specified file through a specified pipeline to a specified destination or send to routes.
      description: Ingest a specified file through a specified pipeline to a specified destination or send to routes.
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: filePath
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Absolute path to file to ingest.
      - name: pipelineId
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Id of the pipeline to use.
      - name: outputId
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Destination to send events to.
      - name: preProcessingPipelineId
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Id to the pre-processing pipeline to use for routes.
      - name: sendToRoutes
        in: query
        required: false
        schema:
          type: string
          example: string
        description: boolean condition required on whether to send events to routes.
      - name: breakerRuleSet
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Breaker rules to use on the file.
  /edge/file/sample:
    get:
      operationId: getEdgeFileSample
      tags:
      - fileSampler
      - edge
      summary: Get some number of bytes from the file at the given path
      description: Get some number of bytes from the file at the given path
      deprecated: false
      responses:
        "200":
          description: a list of SampleFile objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SampleFile"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: path
        in: query
        required: true
        schema:
          type: string
          example: string
        description: The path to the file to sample
      - name: bytesRequested
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: The number of bytes to return;   this value could be constrained by system limits.
  /edge/kube-logs:
    post:
      operationId: createEdgeKubeLogs
      tags:
      - edge
      - kube-logs
      summary: Make a request to the K8s API logs endpoint
      description: Make a request to the K8s API logs endpoint
      deprecated: false
      responses:
        "200":
          description: a list of object objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/object"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/kube-proxy:
    get:
      operationId: getEdgeKubeProxy
      tags:
      - edge
      - kube-proxy
      summary: Make a GET request to the K8s API
      description: Make a GET request to the K8s API
      deprecated: false
      responses:
        "200":
          description: a list of object objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/object"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: path
        in: query
        required: false
        schema:
          type: string
          example: string
        description: string optional
  /auth/authorization-code/callback:
    get:
      operationId: getAuthAuthorizationCodeCallback
      tags:
      - auth
      summary: API call that the IDP should use for an authorization code callback
      parameters:
      - in: query
        description: Authorization Code
        name: code
        schema:
          type: string
          example: string
      - in: query
        name: state
        schema:
          type: string
          example: string
      responses:
        "200":
          description: Authorization success
        "401":
          description: Unauthorized
  /auth/metadata:
    get:
      operationId: getAuthMetadata
      summary: Obtain metadata which Cribl Stream/Edge uses when acting as a Service Provider
      tags:
      - auth
      responses:
        "200":
          description: Service Provider metadata
          content:
            text/xml:
              schema:
                type: string
                example: string
        "401":
          description: Unauthorized
  /auth/login:
    post:
      operationId: login
      summary: Log in and obtain Auth token
      description: This endpoint is unavailable on Cribl.Cloud. Instead, follow the instructions at https://docs.cribl.io/stream/api-tutorials/#criblcloud to get an Auth token for Cribl.Cloud.
      tags:
      - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInfo"
      security: []
      responses:
        "200":
          description: Authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
        "401":
          description: Unauthorized
        "403":
          description: Access denied
        "429":
          description: Rate limit exceeded
  /auth/logout:
    post:
      operationId: logout
      summary: Log current user out
      tags:
      - auth
      responses:
        "200":
          description: Log out success
        "401":
          description: Unauthorized
  /auth/slo/callback:
    post:
      operationId: createAuthSloCallback
      tags:
      - auth
      summary: API call that the IDP should use for a logout request
      requestBody:
        description: Logout request object
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SAMLResponse:
                  description: Logout request object
                  type: string
                  example: string
                RelayState:
                  type: string
                  example: string
              example:
                SAMLResponse: string
                RelayState: string
      responses:
        "200":
          description: Logout success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Rate limit exceeded
    get:
      operationId: getAuthSloCallback
      tags:
      - auth
      summary: Accepts a logout request from an IDP and logs out the user
      parameters:
      - in: query
        description: Logout request object
        name: SAMLResponse
        schema:
          type: string
          example: string
      - in: query
        name: RelayState
        schema:
          type: string
          example: string
      responses:
        "200":
          description: Logout success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Rate limit exceeded
  /auth/slo:
    get:
      operationId: getAuthSlo
      summary: Redirect user to IDP with logout request
      tags:
      - auth
      responses:
        "200":
          description: SLO redirect info
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /auth/sso/callback:
    post:
      operationId: createAuthSsoCallback
      tags:
      - auth
      summary: API call that the IDP should use for an authentication request
      requestBody:
        description: Authentication request object
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SAMLResponse:
                  description: Authentication request object
                  type: string
                  example: string
                RelayState:
                  type: string
                  example: string
              example:
                SAMLResponse: string
                RelayState: string
      responses:
        "200":
          description: Authentication success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Rate limit exceeded
    get:
      operationId: getAuthSsoCallback
      tags:
      - auth
      summary: Accepts an authentication request from an IDP and authenticates the user
      parameters:
      - in: query
        description: Authentication request object
        name: SAMLResponse
        schema:
          type: string
          example: string
      - in: query
        name: RelayState
        schema:
          type: string
          example: string
      responses:
        "200":
          description: Authentication success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Rate limit exceeded
  /auth/sso:
    get:
      operationId: getAuthSso
      summary: Obtain redirect information
      description: Obtain information needed to redirect users to the configured SSO IDP for authentication.
      tags:
      - auth
      responses:
        "200":
          description: Redirect info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RedirectInfo"
        "401":
          description: Unauthorized
  /auth/groups:
    get:
      operationId: getAuthGroups
      tags:
      - auth
      summary: List the external authentication system's groups
      description: List the external authentication system's groups
      deprecated: false
      responses:
        "200":
          description: a list of CrudEntityBase objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CrudEntityBase"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/multi-factor:
    get:
      operationId: getAuthMultiFactor
      tags:
      - auth
      summary: Get PIV configuration
      description: Get PIV configuration
      deprecated: false
      responses:
        "200":
          description: a list of MultiFactorAuthSchema objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MultiFactorAuthSchema"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/auth/users/{id}/token":
    delete:
      operationId: deleteAuthUsersTokenById
      tags:
      - auth
      summary: Invalidate token(s) for user *id*
      description: Invalidate token(s) for user *id*
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: ID of user to invalidate
      - name: ttl
        in: query
        required: false
        schema:
          type: string
          example: string
        description: TTL of the token being invalidated
  "/auth/users/{id}/invalidation":
    delete:
      operationId: deleteAuthUsersInvalidationById
      tags:
      - auth
      summary: Remove invalidation for user ID
      description: Remove invalidation for user ID
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: ID of user to reenable
  /authorize/policy:
    get:
      operationId: getAuthorizePolicy
      tags:
      - authorize
      summary: get the client's authorization policy
      description: get the client's authorization policy
      deprecated: false
      responses:
        "200":
          description: a list of AuthPolicyEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AuthPolicyEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /authorize/roles:
    get:
      operationId: getAuthorizeRoles
      tags:
      - authorize
      summary: get the client's roles
      description: get the client's roles
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: string
                      example: string
                    example:
                    - string
                example:
                  count: 123
                  items:
                  - string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/capture:
    post:
      operationId: createSystemCapture
      tags:
      - preview
      - samples
      summary: Capture live incoming data
      description: Capture live incoming data
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: CaptureParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaptureParams"
  "/system/projects/{projectId}/capture":
    post:
      operationId: createSystemProjectsCaptureByProjectId
      tags:
      - preview
      - samples
      summary: Capture live incoming data from a particular project and subscription at the destination
      description: Capture live incoming data from a particular project and subscription at the destination
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: CaptureParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaptureParams"
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project ID
  "/system/projects/{projectId}/subscriptions/{subscriptionId}/capture":
    post:
      operationId: createSystemProjectsSubscriptionsCaptureByProjectIdAndSubscriptionId
      tags:
      - preview
      - samples
      summary: Capture live incoming data from a particular project and subscription at the subscription
      description: Capture live incoming data from a particular project and subscription at the subscription
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: CaptureParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaptureParams"
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
      - name: subscriptionId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: SubscriptionId Id
  /changelog/viewed:
    get:
      operationId: getChangelogViewed
      tags:
      - changelog
      summary: Get changelog viewed state
      description: Get changelog viewed state
      deprecated: false
      responses:
        "200":
          description: a list of ChangelogState objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ChangelogState"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateChangelogViewed
      tags:
      - system
      summary: Update changelog viewed state
      description: Update changelog viewed state
      deprecated: false
      responses:
        "200":
          description: a list of ChangelogState objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ChangelogState"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /output/click-house/describe-table:
    post:
      operationId: createOutputClickHouseDescribeTable
      tags:
      - click-house
      summary: Retrieve the description of the configured ClickHouse table
      description: Retrieve the description of the configured ClickHouse table
      deprecated: false
      responses:
        "200":
          description: a list of ClickHouseDescriptionResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ClickHouseDescriptionResult"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: CHOutConfig object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CHOutConfig"
  /clui:
    get:
      operationId: getClui
      tags:
      - clui
      summary: Get CLUI search results
      description: Get CLUI search results
      deprecated: false
      responses:
        "200":
          description: a list of CluiItem objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/CluiItem"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: query
        in: query
        required: true
        schema:
          type: string
          example: string
        description: Search query
      - name: context
        in: query
        required: false
        schema:
          type: string
          enum:
          - stream
          - edge
          example: stream
        description: Search query context
  /master/summary/workers:
    get:
      operationId: getSummaryWorkers
      tags:
      - distributed
      - workers
      summary: get worker and edge nodes count
      description: get worker and edge nodes count
      deprecated: false
      responses:
        "200":
          description: a list of number objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: number
                      example: 123.45
                    example:
                    - 123.45
                example:
                  count: 123
                  items:
                  - 123.45
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: filterExp
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filter expression evaluated against nodes
  /master/workers:
    get:
      operationId: getWorkers
      tags:
      - distributed
      - workers
      summary: get worker and edge nodes
      description: get worker and edge nodes
      deprecated: false
      responses:
        "200":
          description: a list of MasterWorkerEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MasterWorkerEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: filterExp
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filter expression evaluated against nodes
      - name: sort
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Sorting object (JSON stringified) expression evaluated against nodes
      - name: sortExp
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Sorting expression evaluated against nodes
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Maximum number of nodes to return
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Pagination offset
      - name: filter
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filter object (JSON stringified) to select nodes
  /master/workers/restart:
    patch:
      operationId: updateWorkersRestart
      tags:
      - distributed
      - workers
      summary: restarts worker nodes
      description: restarts worker nodes
      deprecated: false
      responses:
        "200":
          description: a list of RestartResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/RestartResponse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/master/bundles/{group}/{version}":
    get:
      operationId: getConfigBundlesByGroupAndVersion
      summary: Download config bundle (used by remote nodes)
      tags:
      - distributed
      parameters:
      - name: group
        in: path
        required: true
        schema:
          type: string
          example: string
      - name: version
        in: path
        required: true
        schema:
          type: string
          example: string
      responses:
        "200":
          description: Get contents of a config bundle
          content:
            application/tar+gzip:
              schema:
                type: string
                format: binary
                example: string
        "400":
          description: Invalid path
        "404":
          description: File is missing
  /master/summary:
    get:
      operationId: getSummary
      tags:
      - distributed
      summary: Get summary of Distributed deployment
      description: Get summary of Distributed deployment
      deprecated: false
      responses:
        "200":
          description: a list of DistributedSummary objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DistributedSummary"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: mode
        in: query
        required: false
        schema:
          type: string
          enum:
          - worker
          - managed-edge
          example: worker
        description: product filter
  "/system/distributed/upgrade/cancel/{group}":
    post:
      operationId: createSystemDistributedUpgradeCancelByGroup
      tags:
      - system
      summary: Cancel a running group upgrade
      description: Cancel a running group upgrade
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: group
        in: path
        required: true
        schema:
          type: string
          example: string
        description: id of the group
  "/system/distributed/upgrade/stage/{group}":
    post:
      operationId: createSystemDistributedUpgradeStageByGroup
      tags:
      - system
      summary: Stage distributed group upgrade
      description: Stage distributed group upgrade
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: group
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group to upgrade
      - name: upgradePercentage
        in: query
        required: false
        schema:
          type: string
          example: string
        description: body number percentage of nodes on the worker group to upgrade
  "/system/distributed/upgrade/{group}":
    post:
      operationId: createSystemDistributedUpgradeByGroup
      tags:
      - system
      summary: Execute distributed group upgrade
      description: Execute distributed group upgrade
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: string
                      example: string
                    example:
                    - string
                example:
                  count: 123
                  items:
                  - string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: distributedUpgrade object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DistributedUpgradeRequest"
      parameters:
      - name: group
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group to upgrade
  "/system/distributed/upgrade/download/{file}":
    get:
      operationId: getSystemDistributedUpgradeDownloadByFile
      tags:
      - system
      summary: Get the previously downloaded Cribl package
      description: Get the previously downloaded Cribl package
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: file
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Name of the file to be downloaded
  /lib/expression:
    post:
      operationId: createLibExpression
      tags:
      - expressions
      summary: Evaluate JavaScript expression
      description: Evaluate JavaScript expression
      deprecated: false
      responses:
        "200":
          description: a list of ExprLibEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ExprLibEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /conditions:
    get:
      operationId: listCondition
      tags: &a157
      - conditions
      summary: Get a list of Condition objects
      description: Get a list of Condition objects
      responses: &a158
        "200":
          description: a list of Condition objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Condition"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/conditions/{id}":
    get:
      operationId: getConditionById
      tags: *a157
      summary: Get Condition by ID
      description: Get Condition by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Unique ID to GET
      responses: *a158
  /health:
    get:
      operationId: getHealthInfo
      summary: Provides health info for REST server
      security: []
      tags:
      - diag
      - health
      responses:
        "200":
          description: Healthy status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
        "420":
          description: Shutting Down or Standby status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
  "/jobs/{id}/results":
    get:
      operationId: getJobResultsById
      tags:
      - jobs
      summary: Get results for a discover job by instance id
      description: Get results for a discover job by instance id
      responses:
        "200":
          description: Get results for a discover job by instance id
          content:
            application/x-ndjson:
              schema:
                type: string
                format: binary
                example: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Job instance id
  "/jobs/{id}/cancel":
    patch:
      operationId: updateJobsCancelById
      tags:
      - jobs
      summary: Cancel a job by instance id
      description: Cancel a job by instance id
      deprecated: false
      responses:
        "200":
          description: a list of JobState objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/JobState"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Job instance id
  /jobs:
    post:
      operationId: createJobs
      tags:
      - jobs
      summary: Run or schedule a job
      description: Run or schedule a job
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: string
                      example: string
                    example:
                    - string
                example:
                  count: 123
                  items:
                  - string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: SavedJob object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedJob"
    get:
      operationId: getJobs
      tags:
      - jobs
      summary: Get info on jobs
      description: Get info on jobs
      deprecated: false
      responses:
        "200":
          description: a list of JobInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    description: pagination offset
                    example: 123
                  limit:
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    description: the pre-limited items in the list of results
                    items:
                      $ref: "#/components/schemas/JobInfo"
                    example:
                    - 
                example:
                  offset: 123
                  limit: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Pagination offset
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Maximum number of items to return
      - name: runType
        in: query
        required: false
        schema:
          type: string
          enum:
          - adhoc
          - scheduled
          - system
          example: adhoc
        description: Filter by job run type
      - name: state
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filter by current job state, e.g. "running"
      - name: id
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filter by job id, e.g. "id=1608713335.3&id=1608713326.1"
      - name: collectorId
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filter by collector id, e.g. "collectorId=Prometheus-in"
      - name: groupId
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filter by worker group id, e.g. "defaultHybrid"
  "/jobs/{id}":
    delete:
      operationId: deleteJobsById
      tags:
      - jobs
      summary: Remove job from job inspector by instance id
      description: Remove job from job inspector by instance id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Job instance id
    get:
      operationId: getJobsById
      tags:
      - jobs
      summary: Get job info by instance id
      description: Get job info by instance id
      deprecated: false
      responses:
        "200":
          description: a list of JobInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/JobInfo"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Job instance id
  "/jobs/{id}/keep":
    patch:
      operationId: updateJobsKeepById
      tags:
      - jobs
      summary: prevent job from being deleted automatically
      description: prevent job from being deleted automatically
      deprecated: false
      responses:
        "200":
          description: a list of JobInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/JobInfo"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Job Instance id
      - name: groupId
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Group ID
  "/jobs/{id}/pause":
    patch:
      operationId: updateJobsPauseById
      tags:
      - jobs
      summary: Pause a job by instance id
      description: Pause a job by instance id
      deprecated: false
      responses:
        "200":
          description: a list of JobState objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/JobState"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Job instance id
  "/jobs/{id}/resume":
    patch:
      operationId: updateJobsResumeById
      tags:
      - jobs
      summary: Resume a job by instance id
      description: Resume a job by instance id
      deprecated: false
      responses:
        "200":
          description: a list of JobState objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/JobState"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Job instance id
  "/jobs/{id}/results/{group}":
    get:
      operationId: getJobsResultsByIdAndGroup
      tags:
      - jobs
      summary: Get results for a discover job by instance id
      description: Get results for a discover job by instance id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Instance id of the job to get results for
      - name: maxFiles
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: Maximum files to get job results
      - name: group
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group the job belongs to
  "/jobs/{id}/errors/{group}":
    get:
      operationId: getJobsErrorsByIdAndGroup
      tags:
      - jobs
      summary: Get Task errors for a job by id
      description: Get Task errors for a job by id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Instance id of the job to get results for
      - name: group
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group the job belongs to
  "/jobs/{id}/errors":
    get:
      operationId: getJobsErrorsById
      tags:
      - jobs
      summary: Get Task errors for a job by id
      description: Get Task errors for a job by id
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Instance id of the job to get results for
  /security/kms/config:
    get:
      operationId: getSecurityKmsConfig
      tags:
      - security
      summary: Get Cribl KMS config
      description: Get Cribl KMS config
      deprecated: false
      responses:
        "200":
          description: a list of KMSProviderConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/KMSProviderConfig"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateSecurityKmsConfig
      tags:
      - security
      summary: Update Cribl KMS config
      description: Update Cribl KMS config
      deprecated: false
      responses:
        "200":
          description: a list of KMSProviderConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/KMSProviderConfig"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: KMSProviderConfig object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KMSProviderConfig"
  /security/kms/health:
    get:
      operationId: getSecurityKmsHealth
      tags:
      - security
      summary: Get Cribl KMS health
      description: Get Cribl KMS health
      deprecated: false
      responses:
        "200":
          description: a list of KMSHealth objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/KMSHealth"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/licenses:
    get:
      operationId: listLicense
      tags: &a159
      - licenses
      summary: Get a list of License objects
      description: Get a list of License objects
      responses: &a160
        "200":
          description: a list of License objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/License"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createLicense
      tags:
      - licenses
      summary: Add a license to your deployment
      description: Add a license to your deployment
      deprecated: false
      responses:
        "200":
          description: a list of License objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/License"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: LicenseRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LicenseRequest"
  "/system/licenses/{id}":
    get:
      operationId: getLicenseById
      tags: *a159
      summary: Get License by ID
      description: Get License by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a161
          type: string
          example: string
        description: Unique ID to GET
      responses: *a160
    delete:
      operationId: deleteLicenseById
      tags: *a159
      summary: Delete License
      description: Delete License
      parameters:
      - name: id
        in: path
        required: true
        schema: *a161
        description: Unique ID to DELETE
      responses: *a160
  /system/licenses/usage:
    get:
      operationId: getLicense
      tags:
      - licenses
      summary: Get license usage metrics, aggregated by day, up to last 90 days
      description: Get license usage metrics, aggregated by day, up to last 90 days
      deprecated: false
      responses:
        "200":
          description: a list of DailyUsageMetrics objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/DailyUsageMetrics"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/logger:
    get:
      operationId: listLoggerConfig
      tags: &a162
      - logger
      summary: Get a list of LoggerConfig objects
      description: Get a list of LoggerConfig objects
      responses: &a163
        "200":
          description: a list of LoggerConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/LoggerConfig"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/logger/{id}":
    get:
      operationId: getLoggerConfigById
      tags: *a162
      summary: Get LoggerConfig by ID
      description: Get LoggerConfig by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a164
          type: string
          example: string
        description: Unique ID to GET
      responses: *a163
    patch:
      operationId: updateLoggerConfigById
      tags: *a162
      summary: Update LoggerConfig
      description: Update LoggerConfig
      parameters:
      - name: id
        in: path
        required: true
        schema: *a164
        description: Unique ID to PATCH
      requestBody:
        description: LoggerConfig object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoggerConfig"
      responses: *a163
    delete:
      operationId: deleteLoggerConfigById
      tags: *a162
      summary: Delete LoggerConfig
      description: Delete LoggerConfig
      parameters:
      - name: id
        in: path
        required: true
        schema: *a164
        description: Unique ID to DELETE
      responses: *a163
  "/system/jobs/logs/{id}/{groupId}":
    get:
      operationId: getSystemJobsLogsByIdAndGroupId
      tags:
      - logging
      summary: Get contents of the log file
      description: Get contents of the log file
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Job id
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Maximum number of log lines to retrieve starting from offset.
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Offset in the current log file to fetch the log events from.
      - name: endOffset
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: in the current log file to fetch the log events upto.
      - name: et
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Epoch timestamp of the earliest event (includes rolled files present on disk)
      - name: lt
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Epoch timestamp of the latest event (includes rolled files present on disk)
      - name: filter
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filter
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group ID (optional)
  "/system/logs/{id}":
    get:
      operationId: getSystemLogsById
      tags:
      - logging
      summary: Get contents of the log file
      description: Get contents of the log file
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Log ID
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Maximum number of log lines to retrieve starting from offset.
      - name: endOffset
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: in the current log file to fetch the log events upto.
      - name: et
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Epoch timestamp of the earliest event (includes rolled files present on disk)
      - name: lt
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Epoch timestamp of the latest event (includes rolled files present on disk)
      - name: filter
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filter
  /system/logs:
    get:
      operationId: getSystemLogs
      tags:
      - logging
      summary: Get a list of log files
      description: Get a list of log files
      deprecated: false
      responses:
        "200":
          description: a list of LogFileInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/LogFileInfo"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/logs/search:
    get:
      operationId: getSystemLogsSearch
      tags:
      - logging
      summary: Get contents of the log file
      description: Get contents of the log file
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: string
          example: string
        description: type of logs request single multi group
      - name: groupId
        in: query
        required: false
        schema:
          type: string
          example: string
        description: id of the group to query
      - name: files
        in: query
        required: false
        schema:
          type: string
          example: string
        description: query string[] optional file or files to query
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Maximum number of log lines to retrieve starting from offset.
      - name: et
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Epoch timestamp of the earliest event (includes rolled files present on disk)
      - name: lt
        in: query
        required: false
        schema:
          type: integer
          example: 123
        description: Epoch timestamp of the latest event (includes rolled files present on disk)
      - name: filter
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filter
  "/m/{groupId}/packs":
    post:
      x-speakeasy-entity-operation: Pack#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: filename
        in: query
        required: false
        schema:
          type: string
          example: string
        description: the file to upload
      - name: disabled
        in: query
        required: false
        schema:
          type: boolean
          example: true
      operationId: createPacks
      tags:
      - packs
      summary: Install Pack
      description: Install Pack
      deprecated: false
      responses:
        "200":
          description: a list of PackInstallInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInstallInfo"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: PackRequestBody object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackRequestBody"
    get:
      operationId: getPacksByGroup
      tags:
      - packs
      summary: Get info on packs
      description: Get info on packs
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInstallInfo"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: with
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Comma separated list of entities, "outputs", "inputs"
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: disabled
        in: query
        required: false
        schema:
          type: boolean
          example: true
    put:
      operationId: updatePacks
      tags:
      - packs
      summary: Upload Pack
      description: Upload Pack
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: filename
        in: query
        required: false
        schema:
          type: string
          example: string
        description: the file to upload
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
  "/m/{groupId}/packs/{id}":
    get:
      x-speakeasy-entity-operation: Pack#read
      operationId: getPacksByID
      tags:
      - packs
      summary: Get info on pack
      description: Get info on pack
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInstallInfo"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: with
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Comma separated list of entities, "outputs", "inputs"
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: disabled
        in: query
        required: false
        schema:
          type: boolean
          example: true
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Pack name
    delete:
      x-speakeasy-entity-operation: Pack#delete
      operationId: deletePacksById
      responses: *a127
      tags:
      - packs
      summary: Uninstall Pack from the system
      description: Uninstall Pack from the system
      deprecated: false
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Pack name
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: disabled
        in: query
        required: false
        schema:
          type: boolean
          example: true
    patch:
      x-speakeasy-entity-operation: Pack#update
      operationId: updatePacksById
      tags:
      - packs
      summary: Upgrade Pack
      description: Upgrade Pack
      deprecated: false
      responses:
        "200":
          description: a list of PackInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackInstallInfo"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Pack name
      - name: source
        in: query
        required: false
        schema:
          type: string
          example: string
        description: body string required Pack source
      - name: minor
        in: query
        required: false
        schema:
          type: string
          example: string
        description: body boolean optional Only upgrade to minor/patch versions
      - name: spec
        in: query
        required: false
        schema:
          type: string
          example: string
        description: body string optional Specify a branch, tag or a semver spec
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: disabled
        in: query
        required: false
        schema:
          type: boolean
          example: true
  "/m/{groupId}/packs/__clone__":
    post:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: createPacksClone
      tags:
      - packs
      summary: Clone Pack
      description: Clone Pack
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: PackClone object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackClone"
  "/packs/{id}/refs":
    get:
      operationId: getPacksRefsById
      tags:
      - packs
      summary: Returns all entities that reference objects from outside of the pack
      description: Returns all entities that reference objects from outside of the pack
      deprecated: false
      responses:
        "200":
          description: a list of ReferencingEntity objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ReferencingEntity"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Pack name
  "/m/{groupId}/packs/{id}/export":
    get:
      operationId: getPacksExportById
      tags:
      - packs
      summary: Export Pack
      description: Export Pack
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Pack name
      - name: mode
        in: query
        required: true
        schema:
          type: string
          enum:
          - merge
          - default_only
          - merge_safe
          example: merge
        description: 'Export mode. Note: "merge_safe" is deprecated and will be removed in v5.0.0. Use "merge" instead.'
      - name: filename
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filename of the exported Pack
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
  "/packs/{id}/publish":
    post:
      operationId: createPacksPublishById
      tags:
      - packs
      summary: Publish Pack back to its repository
      description: Publish Pack back to its repository
      deprecated: false
      responses:
        "200":
          description: a list of PublishPackResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PublishPackResponse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Pack name
  /preview:
    post:
      operationId: createPreview
      tags:
      - preview
      - samples
      summary: Sends sample events through a pipeline and returns the results
      description: Sends sample events through a pipeline and returns the results
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: PreviewDataParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreviewDataParams"
  /system/processes:
    get:
      operationId: getSystemProcesses
      tags:
      - processes
      summary: Get a list of processes under management
      description: Get a list of processes under management
      deprecated: false
      responses:
        "200":
          description: a list of ProcessEntry objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProcessEntry"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/products/{product}/users/{id}/acl":
    get:
      operationId: getProductsUsersAclByProductAndId
      tags:
      - users
      summary: Get user's Access Control List
      description: Get user's Access Control List
      deprecated: false
      responses:
        "200":
          description: a list of ResourcePolicy objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ResourcePolicy"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: product
        in: path
        required: true
        schema:
          type: string
          enum:
          - stream
          - edge
          - search
          - lake
          example: stream
        description: product by which to filter members
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: user id
      - name: type
        in: query
        required: false
        schema:
          type: string
          enum:
          - groups
          - datasets
          - dataset-providers
          - projects
          - dashboards
          - macros
          example: groups
        description: resource type by which to filter access levels
  "/products/{product}/users":
    get:
      operationId: getProductsUsersByProduct
      tags:
      - users
      summary: Get Users belonging to a product
      description: Get Users belonging to a product
      deprecated: false
      responses:
        "200":
          description: a list of User objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: product
        in: path
        required: true
        schema:
          type: string
          enum:
          - stream
          - edge
          - search
          - lake
          example: stream
        description: product by which to filter members
      - name: groupId
        in: query
        required: false
        schema:
          type: string
          example: string
        description: filter to specific group by groupId
  "/products/{product}/users/__cache__":
    delete:
      operationId: deleteProductsUsersCacheByProduct
      tags:
      - users
      summary: Invalidate the members cache for a given product in SaaS deployment.
      description: Invalidate the members cache for a given product in SaaS deployment.
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: product
        in: path
        required: true
        schema:
          type: string
          enum:
          - stream
          - edge
          - search
          - lake
          example: stream
        description: product by which to filter members
  "/system/projects/{projectId}/version/commit":
    post:
      operationId: createSystemProjectsVersionCommitByProjectId
      tags:
      - projects
      - versioning
      - git
      summary: Commit project changes.
      description: Commit project changes.
      deprecated: false
      responses:
        "200":
          description: a list of GitCommitSummary objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitCommitSummary"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: ProjectGitCommitParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectGitCommitParams"
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
  "/system/projects/{projectId}/version/count":
    get:
      operationId: getSystemProjectsVersionCountByProjectId
      tags:
      - projects
      - versioning
      - git
      summary: get the count of files of changed
      description: get the count of files of changed
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project ID
      - name: ID
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Commit ID
  "/system/projects/{projectId}/version/diff":
    get:
      operationId: getSystemProjectsVersionDiffByProjectId
      tags:
      - projects
      - versioning
      - git
      summary: get the textual diff for given commit
      description: get the textual diff for given commit
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
      - name: commit
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Commit hash (default is HEAD)
      - name: filename
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filename
      - name: diffLineLimit
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: Limit maximum lines in the diff
  "/system/projects/{projectId}/version/files":
    get:
      operationId: getSystemProjectsVersionFilesByProjectId
      tags:
      - projects
      - versioning
      - git
      summary: get the files changed
      description: get the files changed
      deprecated: false
      responses:
        "200":
          description: a list of GitFilesResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitFilesResponse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project ID
      - name: ID
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Commit ID
  "/system/projects/{projectId}/version/revert":
    post:
      operationId: createSystemProjectsVersionRevertByProjectId
      tags:
      - projects
      - versioning
      - git
      summary: Revert project changes.
      description: Revert project changes.
      deprecated: false
      responses:
        "200":
          description: a list of GitRevertResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitRevertResult"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: ProjectGitCommitParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectGitCommitParams"
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
  "/system/projects/{projectId}/version/show":
    get:
      operationId: getSystemProjectsVersionShowByProjectId
      tags:
      - projects
      - versioning
      - git
      summary: Show project changes.
      description: Show project changes.
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
      - name: ID
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Commit ID
      - name: filename
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filename
      - name: diffLineLimit
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: Limit maximum lines in the diff
  /system/diag/download:
    get:
      operationId: getDiagBundle
      summary: Returns a diag bundle as a tar.gz archive
      tags:
      - diag
      responses:
        "200":
          description: A tar.gz file consisting all configuration files and recent logs
          content:
            application/tar+gzip:
              schema:
                type: string
                format: binary
                example: string
        "401":
          description: Unauthorized
  /system/info:
    get:
      operationId: getSystemInfo
      tags:
      - diag
      summary: Get basic system information
      description: Get basic system information
      deprecated: false
      responses:
        "200":
          description: a list of SystemInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SystemInfo"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/diag:
    get:
      operationId: getSystemDiag
      tags:
      - diag
      summary: Get list of existing diag bundles
      description: Get list of existing diag bundles
      deprecated: false
      responses:
        "200":
          description: a list of Diag objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Diag"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteSystemDiag
      tags:
      - diag
      summary: Remove diag bundle
      description: Remove diag bundle
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: path
        in: query
        required: true
        schema:
          type: string
          example: string
        description: Diag bundle path
  /system/diag/send:
    post:
      operationId: createSystemDiagSend
      tags:
      - diag
      summary: Send a diag bundle (tar.gz archive) to Cribl
      description: Send a diag bundle (tar.gz archive) to Cribl
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: SendDiagBundle object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendDiagBundle"
  /system/metrics/enum:
    post:
      operationId: createSystemMetricsEnum
      tags:
      - metrics
      summary: Enumerate all internal system metrics
      description: Enumerate all internal system metrics
      deprecated: false
      responses:
        "200":
          description: a list of MetricNameInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/MetricNameInfo"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: SystemMetricsEnum object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemMetricsEnum"
  /system/metrics:
    get:
      operationId: getSystemMetrics
      tags:
      - metrics
      summary: Query raw internal system metrics
      description: Query raw internal system metrics
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: wp
        in: query
        required: false
        schema:
          type: string
          example: string
        description: worker process to query, this would work only on a worker node
      - name: numBuckets
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: buckets in the past to include in the query results
      - name: earliest
        in: query
        required: false
        schema:
          type: string
          example: string
        description: earliest time to query against
      - name: latest
        in: query
        required: false
        schema:
          type: string
          example: string
        description: latest time to query against
      - name: metricNameFilter
        in: query
        required: false
        schema:
          type: string
          example: string
        description: can be a regex or an array of metric names
      - name: filterExpr
        in: query
        required: false
        schema:
          type: string
          example: string
        description: a js expression to apply against the metrics returned (can filter dimensions)
  /system/metrics/query:
    post:
      operationId: createSystemMetricsQuery
      tags:
      - metrics
      summary: Aggregate raw internal system metrics
      description: Aggregate raw internal system metrics
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: MetricsAggOpts object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricsAggOpts"
  /system/settings/reload:
    post:
      operationId: reloadSettings
      summary: Reload Cribl settings from the filesystem
      tags:
      - system
      responses:
        "200":
          description: Success
        "500":
          description: Internal error
  /system/settings/restart:
    post:
      operationId: triggerRestart
      summary: Restart Cribl server
      tags:
      - system
      responses:
        "200":
          description: Success
        "500":
          description: Internal error
  /system/settings/auth:
    get:
      operationId: getSystemSettingsAuth
      tags:
      - system
      summary: Get authentication settings
      description: Get authentication settings
      deprecated: false
      responses:
        "200":
          description: a list of AuthConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AuthConfig"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateSystemSettingsAuth
      tags:
      - system
      summary: Update authentication settings
      description: Update authentication settings
      deprecated: false
      responses:
        "200":
          description: a list of AuthConfig objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/AuthConfig"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings/conf:
    get:
      operationId: getSystemSettingsConf
      tags:
      - system
      summary: Get Cribl system settings
      description: Get Cribl system settings
      deprecated: false
      responses:
        "200":
          description: a list of SystemSettingsConf objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SystemSettingsConf"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateSystemSettingsConf
      tags:
      - system
      summary: Update Cribl system settings
      description: Update Cribl system settings
      deprecated: false
      responses:
        "200":
          description: a list of SystemSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SystemSettings"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: SystemSettingsConf object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemSettingsConf"
  /system/settings/git-settings:
    get:
      operationId: getSystemSettingsGitSettings
      tags:
      - system
      - git
      summary: Get git settings
      description: Get git settings
      deprecated: false
      responses:
        "200":
          description: a list of GitSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitSettings"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateSystemSettingsGitSettings
      tags:
      - system
      - git
      summary: Update git settings
      description: Update git settings
      deprecated: false
      responses:
        "200":
          description: a list of GitSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitSettings"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings/search-limits:
    get:
      operationId: getSystemSettingsSearchLimits
      tags:
      - system
      summary: Get search limits
      description: Get search limits
      deprecated: false
      responses:
        "200":
          description: a list of SearchSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchSettings"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings:
    get:
      operationId: getSystemSettings
      tags:
      - system
      summary: "Get Cribl system settings. Deprecated: use specific endpoints /system/limits, /system/job-limits, /system/redis-cache-limits, /system/services-limits, /system/settings/git-settings, and /system/settings/conf respectively"
      description: "Get Cribl system settings. Deprecated: use specific endpoints /system/limits, /system/job-limits, /system/redis-cache-limits, /system/services-limits, /system/settings/git-settings, and /system/settings/conf respectively"
      deprecated: true
      responses:
        "200":
          description: a list of SystemSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SystemSettings"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      operationId: updateSystemSettings
      tags:
      - system
      summary: "Update Cribl system settings. Deprecated: use specific endpoints /system/limits, /system/job-limits, /system/settings/git-settings, /system/settings/auth and /system/settings/conf respectively"
      description: "Update Cribl system settings. Deprecated: use specific endpoints /system/limits, /system/job-limits, /system/settings/git-settings, /system/settings/auth and /system/settings/conf respectively"
      deprecated: true
      responses:
        "200":
          description: a list of SystemSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SystemSettings"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings/cribl:
    get:
      operationId: getSystemSettingsCribl
      tags:
      - system
      summary: Get public settings visible to any logged user
      description: Get public settings visible to any logged user
      deprecated: false
      responses:
        "200":
          description: a list of PublicSettings objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PublicSettings"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /system/settings/upgrade:
    get:
      operationId: getSystemSettingsUpgrade
      tags:
      - system
      summary: Get a list of Cribl versions available for upgrade
      description: Get a list of Cribl versions available for upgrade
      deprecated: false
      responses:
        "200":
          description: a list of UpgradeResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UpgradeResult"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/system/settings/upgrade/{version}":
    post:
      operationId: createSystemSettingsUpgradeByVersion
      tags:
      - system
      summary: Upgrade Cribl to a given version
      description: Upgrade Cribl to a given version
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: string
                      example: string
                    example:
                    - string
                example:
                  count: 123
                  items:
                  - string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: version
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Version number
  /system/settings/upgrade-from-package:
    post:
      operationId: createSystemSettingsUpgradeFromPackage
      tags:
      - system
      summary: Upgrade master node with the provided package
      description: Upgrade master node with the provided package
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: string
                      example: string
                    example:
                    - string
                example:
                  count: 123
                  items:
                  - string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: upgradeMaster object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpgradeMasterRequest"
  "/ui/{key}":
    get:
      operationId: getUiByKey
      tags:
      - uiState
      summary: Get UI state by key
      description: Get UI state by key
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
          example: string
        description: UI state key
    patch:
      operationId: updateUiByKey
      tags:
      - uiState
      summary: Update UI state by key
      description: Update UI state by key
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: UI State Patch object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UiStatePatch"
      parameters:
      - name: key
        in: path
        required: true
        schema:
          type: string
          example: string
        description: UI state key
  /version/undo:
    post:
      operationId: undoLastCommit
      tags:
      - versioning
      - git
      summary: undo the last commit
      description: undo the last commit
      responses:
        "200":
          description: The operation completed
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: group
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Group ID
  /version/branch:
    get:
      operationId: getVersionBranch
      tags:
      - versioning
      - git
      summary: get the list of branches
      description: get the list of branches
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/commit:
    post:
      x-speakeasy-entity-operation: Commit#create
      operationId: createVersionCommit
      tags:
      - versioning
      - git
      summary: create a new commit containing the current configs the given log message describing the changes.
      description: create a new commit containing the current configs the given log message describing the changes.
      deprecated: false
      responses:
        "200":
          description: a list of GitCommitSummary objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitCommitSummary"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: GitCommitParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GitCommitParams"
  /version/count:
    get:
      operationId: getVersionCount
      tags:
      - versioning
      - git
      summary: get the count of files of changed
      description: get the count of files of changed
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: group
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Group ID
      - name: ID
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Commit ID
  /version/current-branch:
    get:
      operationId: getVersionCurrentBranch
      tags:
      - versioning
      - git
      summary: returns git branch that the config is checked out to, if any
      description: returns git branch that the config is checked out to, if any
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/diff:
    get:
      operationId: getVersionDiff
      tags:
      - versioning
      - git
      summary: get the textual diff for given commit
      description: get the textual diff for given commit
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: commit
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Commit hash (default is HEAD)
      - name: group
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Group ID
      - name: filename
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filename
      - name: diffLineLimit
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: Limit maximum lines in the diff
  /version/files:
    get:
      operationId: getVersionFiles
      tags:
      - versioning
      - git
      summary: get the files changed
      description: get the files changed
      deprecated: false
      responses:
        "200":
          description: a list of GitFilesResponse objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitFilesResponse"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: group
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Group ID
      - name: ID
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Commit ID
  /version/info:
    get:
      operationId: getVersionInfo
      tags:
      - versioning
      - git
      summary: Get info about versioning availability
      description: Get info about versioning availability
      deprecated: false
      responses:
        "200":
          description: a list of GitInfo objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitInfo"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/push:
    post:
      operationId: createVersionPush
      tags:
      - versioning
      - git
      summary: push the current configs to the remote repository.
      description: push the current configs to the remote repository.
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /version/revert:
    post:
      operationId: createVersionRevert
      tags:
      - versioning
      - git
      summary: revert a commit
      description: revert a commit
      deprecated: false
      responses:
        "200":
          description: a list of GitRevertResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitRevertResult"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: GitRevertParams object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GitRevertParams"
      parameters:
      - name: group
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Group ID
  /version/show:
    get:
      operationId: getVersionShow
      tags:
      - versioning
      - git
      summary: get the log message and textual diff for given commit
      description: get the log message and textual diff for given commit
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: commit
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Commit hash (default is HEAD)
      - name: group
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Group ID
      - name: filename
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Filename
      - name: diffLineLimit
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: Limit maximum lines in the diff
  /version/status:
    get:
      operationId: getVersionStatus
      tags:
      - versioning
      - git
      summary: get the the working tree status
      description: get the the working tree status
      deprecated: false
      responses:
        "200":
          description: a list of GitStatusResult objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/GitStatusResult"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: group
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Group ID
  /version/sync:
    post:
      operationId: createVersionSync
      tags:
      - versioning
      - git
      summary: syncs with remote repo via POST requests
      description: syncs with remote repo via POST requests
      deprecated: false
      responses:
        "200":
          description: a list of any objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/ai/settings/features/{feature}":
    get:
      operationId: getAiSettingsFeaturesByFeature
      tags:
      - ai-settings
      summary: Returns setting for a specific feature
      description: Returns setting for a specific feature
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: feature
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Feature name to get settings for
    post:
      operationId: createAiSettingsFeaturesByFeature
      tags:
      - ai-settings
      summary: Updates setting for a specific feature
      description: Updates setting for a specific feature
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: feature
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Feature name to update settings for
  /ai/settings/features:
    get:
      operationId: getAiSettingsFeatures
      tags:
      - ai-settings
      summary: Returns all feature settings
      description: Returns all feature settings
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createAiSettingsFeatures
      tags:
      - ai-settings
      summary: Updates all AI settings at once
      description: Updates all AI settings at once
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /ai/consent:
    get:
      operationId: getAiConsent
      tags:
      - consent
      summary: Fetches the AI consent information, specifically the org GUID and accepted boolean.
      description: Fetches the AI consent information, specifically the org GUID and accepted boolean.
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createAiConsent
      tags:
      - consent
      summary: Stores the AI consent information, specifically the org GUID and accepted boolean.
      description: Stores the AI consent information, specifically the org GUID and accepted boolean.
      deprecated: false
      responses:
        "200":
          description: a list of Response objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: true
                      example:
                        additionalProp1: string
                    example:
                    - additionalProp1: string
                example:
                  count: 123
                  items:
                  - additionalProp1: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/event-breaker-preview:
    post:
      operationId: createSearchEventBreakerPreview
      tags:
      - search
      summary: Runs an event breaker rule on the specified data
      description: Runs an event breaker rule on the specified data
      deprecated: false
      responses:
        "200":
          description: a list of PreviewResponseBody objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PreviewResponseBody"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: DatatypePreviewRequestBody object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatatypePreviewRequestBody"
  /search/healthcheck:
    get:
      operationId: getSearchHealthcheck
      tags:
      - search
      summary: Get health check metric for search
      description: Get health check metric for search
      deprecated: false
      responses:
        "200":
          description: a list of SearchHealthCheckStatus objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchHealthCheckStatus"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/search/jobs/{id}/metrics":
    get:
      operationId: getSearchJobsMetricsById
      tags:
      - search
      summary: Get search job metrics
      description: Get search job metrics
      deprecated: false
      responses:
        "200":
          description: string object
          content:
            application/json:
              schema:
                type: string
                example: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: search job id
  /search/job-metrics:
    get:
      operationId: getSearchJobMetrics
      tags:
      - search
      summary: List metrics for all search jobs
      description: List metrics for all search jobs
      deprecated: false
      responses:
        "200":
          description: string object
          content:
            application/json:
              schema:
                type: string
                example: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /search/preview:
    post:
      operationId: createSearchPreview
      tags:
      - search
      summary: Applies a query snippet on a set of input events for preview
      description: Applies a query snippet on a set of input events for preview
      deprecated: false
      responses:
        "200":
          description: a list of PreviewResponseBody objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/PreviewResponseBody"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: PreviewRequestBody object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreviewRequestBody"
  /search/trust-policies:
    get:
      operationId: listTrustPolicy
      tags:
      - trust-policies
      summary: Get a list of TrustPolicy objects
      description: Get a list of TrustPolicy objects
      responses:
        "200":
          description: a list of TrustPolicy objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/TrustPolicy"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/search/trust-policies/{id}": {}
  "/search/jobs/{id}/stages/{stageId}/results":
    get:
      operationId: getSearchJobsStagesResultsByIdAndStageId
      tags:
      - search
      summary: List search results for a given stage. Note that this cannot be the root stage!
      description: List search results for a given stage. Note that this cannot be the root stage!
      deprecated: false
      responses:
        "200":
          description: string object
          content:
            application/json:
              schema:
                type: string
                example: string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: search job ID
      - name: stageId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: id of the search job stage
  "/search/jobs/{id}/results":
    get:
      operationId: getSearchJobsResultsById
      tags:
      - search
      summary: List search results, when lower/upper bound is provided, offset is relative to the time range.
      description: List search results, when lower/upper bound is provided, offset is relative to the time range.
      deprecated: false
      responses:
        "200":
          description: SearchResultsResults for the Search /results and /results-poll endpoints. object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchJobResults"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: search job id
      - name: limit
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: maximum number of events returned
      - name: offset
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: starting offset of the events
      - name: lowerBound
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: lower bound of the time range, inclusive
      - name: upperBound
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: upper bound of the time range, exclusive
  "/search/jobs/{id}/results-poll":
    get:
      operationId: getSearchJobsResultsPollById
      tags:
      - search
      summary: List search results
      description: List search results
      deprecated: false
      responses:
        "200":
          description: SearchResultsResults for the Search /results and /results-poll endpoints. object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchJobResults"
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: search job id
      - name: limit
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: maximum number of events returned
      - name: offset
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: starting offset of the events
      - name: lowerBound
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: lower bound of the time range, inclusive
      - name: upperBound
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: upper bound of the time range, exclusive
      - name: lastJobStatus
        in: query
        required: false
        schema:
          type: string
          example: string
        description: last known status of the Search Job. Used to return immediatelyupon status change if the status was queued.
  "/edge/containers/{id}":
    get:
      operationId: getEdgeContainersById
      tags:
      - edgeContainers
      - edge
      summary: Get details for a single container on the edge host. Add stream=true to get a stream instead.
      description: Get details for a single container on the edge host. Add stream=true to get a stream instead.
      deprecated: false
      responses:
        "200":
          description: a list of Container objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Container"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: ID
  /edge/containers:
    get:
      operationId: getEdgeContainers
      tags:
      - edgeContainers
      - edge
      summary: Get a detailed list of containers running on the edge host.
      description: Get a detailed list of containers running on the edge host.
      deprecated: false
      responses:
        "200":
          description: a list of Container objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Container"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /edge/logs:
    get:
      operationId: getEdgeLogs
      tags:
      - edge
      summary: list log files
      description: list log files
      deprecated: false
      responses:
        "200":
          description: a list of EdgeFile objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EdgeFile"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: mode
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Discovery Mode (default is "auto")
      - name: allow
        in: query
        required: false
        schema:
          type: string
          example: string
        description: query array[string] optional List of allowed-filename wildcard patterns
      - name: path
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Search directory for "manual" mode
      - name: depth
        in: query
        required: false
        schema:
          type: number
          example: 123.45
        description: Search depth for "manual" mode
  "/edge/processes/{pid}":
    get:
      operationId: getEdgeProcessesByPid
      tags:
      - edgeProcesses
      - edge
      summary: Get details of a process running on the edge host
      description: Get details of a process running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of Process objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Process"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: pid
        in: path
        required: true
        schema:
          type: string
          example: string
        description: PID of the process
  /edge/processes:
    get:
      operationId: getEdgeProcesses
      tags:
      - edgeProcesses
      - edge
      summary: Get a detailed list of processes running on the edge host
      description: Get a detailed list of processes running on the edge host
      deprecated: false
      responses:
        "200":
          description: a list of Process objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Process"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /functions:
    get:
      operationId: listFunction
      tags: &a165
      - functions
      summary: Get a list of Function objects
      description: Get a list of Function objects
      responses: &a166
        "200":
          description: a list of Function objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Function"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/functions/{id}":
    get:
      operationId: getFunctionById
      tags: *a165
      summary: Get Function by ID
      description: Get Function by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a167
          type: string
          example: string
        description: Unique ID to GET
      responses: *a166
  "/p/{pack}/functions":
    get:
      operationId: getFunctionByPack
      tags: *a165
      summary: Get a list of Function objects within a Pack
      description: Get a list of Function objects within a Pack
      responses: *a166
      parameters:
      - name: pack
        in: path
        required: true
        schema: &a168
          type: string
          example: string
        description: pack ID to GET
  "/p/{pack}/functions/{id}":
    get:
      operationId: getFunctionByPackAndId
      tags: *a165
      summary: Get Function by ID within a Pack
      description: Get Function by ID within a Pack
      parameters:
      - name: id
        in: path
        required: true
        schema: *a167
        description: Unique ID to GET for pack
      - name: pack
        in: path
        required: true
        schema: *a168
        description: pack ID to GET
      responses: *a166
  /collectors:
    get:
      operationId: listCollector
      tags: &a169
      - collectors
      summary: Get a list of Collector objects
      description: Get a list of Collector objects
      responses: &a170
        "200":
          description: a list of Collector objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Collector"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/collectors/{id}":
    get:
      operationId: getCollectorById
      tags: *a169
      summary: Get Collector by ID
      description: Get Collector by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Unique ID to GET
      responses: *a170
  /executors:
    get:
      operationId: listExecutor
      tags: &a171
      - executors
      summary: Get a list of Executor objects
      description: Get a list of Executor objects
      responses: &a172
        "200":
          description: a list of Executor objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Executor"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/executors/{id}":
    get:
      operationId: getExecutorById
      tags: *a171
      summary: Get Executor by ID
      description: Get Executor by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Unique ID to GET
      responses: *a172
  "/m/{groupId}/system/projects":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: listProject
      tags: &a173
      - projects
      summary: Get a list of Project objects
      description: Get a list of Project objects
      responses: &a174
        "200":
          description: a list of Project objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProjectConfig"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Project#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      operationId: createProject
      tags: *a173
      summary: Create Project
      description: Create Project
      requestBody:
        description: New Project object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectConfig"
      responses: *a174
  "/m/{groupId}/system/projects/{id}":
    get:
      x-speakeasy-entity-operation: Project#read
      operationId: getProjectById
      tags: *a173
      summary: Get Project by ID
      description: Get Project by ID
      parameters:
      - name: id
        in: path
        required: true
        schema: &a175
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a174
    patch:
      x-speakeasy-entity-operation: Project#update
      operationId: updateProjectById
      tags: *a173
      summary: Update Project
      description: Update Project
      parameters:
      - name: id
        in: path
        required: true
        schema: *a175
        description: Unique ID to PATCH
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      requestBody:
        description: Project object to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectConfig"
      responses: *a174
    delete:
      x-speakeasy-entity-operation: Project#delete
      operationId: deleteProjectById
      tags: *a173
      summary: Delete Project
      description: Delete Project
      parameters:
      - name: id
        in: path
        required: true
        schema: *a175
        description: Unique ID to DELETE
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a174
  "/system/projects/{id}/acl":
    get:
      operationId: getProjectAclById
      responses: &a179
        "200":
          description: a list of UserAccessControlList objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserAccessControlList"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401": &a176
          description: Unauthorized
        "500": &a177
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema: *a175
        description: Unique ID for ACL Get
      description: List accesses to Project granted to users
      summary: Get Project ACL
      tags: &a178
      - projects
      - users ACL
  "/system/projects/{id}/acl/apply":
    post:
      operationId: createProjectAclApplyById
      requestBody: &a180
        description: AccessControlSchema object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccessControlSchema"
      responses: &a181
        "200":
          description: N/A
        "401": *a176
        "500": *a177
      parameters:
      - name: id
        in: path
        required: true
        schema: *a175
        description: Unique ID for ACL Create
      description: Add/remove accesses to Project for users
      summary: Modify Project ACL
      tags: *a178
  "/system/projects/{id}/acl/teams":
    get:
      operationId: getProjectAclTeamsById
      responses: *a179
      parameters:
      - name: id
        in: path
        required: true
        schema: *a175
        description: Unique ID for ACL Teams Get
      description: List accesses to Project granted to Teams
      summary: Get Project Teams
      tags: &a182
      - projects
      - teams ACL
  "/system/projects/{id}/acl/teams/apply":
    post:
      operationId: createProjectAclTeamsApplyById
      requestBody: *a180
      responses: *a181
      parameters:
      - name: id
        in: path
        required: true
        schema: *a175
        description: Unique ID for ACL Teams Create
      description: Add/remove accesses to Project for Teams
      summary: Modify Project Teams ACL
      tags: *a182
  "/system/projects/{projectId}/destinations":
    get:
      operationId: getProjectDestinationsByProjectId
      tags:
      - projects
      summary: Lists destinations associated with this project.
      description: Lists destinations associated with this project.
      deprecated: false
      responses:
        "200":
          description: a list of ProjectDestination objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProjectDestination"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
  "/m/{groupId}/system/subscriptions":
    get:
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: disabled
        in: query
        required: false
        schema:
          type: boolean
          example: true
        description: Project enabled
      - name: description
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Project description
      - name: filter
        in: query
        required: false
        schema:
          type: string
          example: string
        description: filter
      - name: pipeline
        in: query
        required: false
        schema:
          type: string
          example: string
        description: pipeline to be used
      operationId: listSubscription
      tags: &a183
      - subscriptions
      summary: Get a list of Subscription objects
      description: Get a list of Subscription objects
      responses: &a184
        "200":
          description: a list of Subscription objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      x-speakeasy-entity-operation: Subscription#create
      parameters:
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      - name: disabled
        in: query
        required: false
        schema:
          type: boolean
          example: true
        description: Project Id
      - name: description
        in: query
        required: false
        schema:
          type: string
          example: string
        description: Project description
      - name: filter
        in: query
        required: false
        schema:
          type: string
          example: string
        description: filter
      - name: pipeline
        in: query
        required: true
        schema:
          type: string
          example: string
        description: pipeline to be used
      - name: id
        in: query
        required: true
        schema:
          type: string
          example: string
        description: pipeline to be used
      operationId: createSubscription
      tags:
      - subscriptions
      summary: Create subscription
      description: Create subscription
      deprecated: false
      responses:
        "200":
          description: a list of Subscription objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: Subscription object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subscription"
  "/m/{groupId}/system/subscriptions/{id}":
    get:
      x-speakeasy-entity-operation: Subscription#read
      operationId: getSubscriptionById
      tags: *a183
      summary: Get Subscription by ID
      description: Get Subscription by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Unique ID to GET
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
      responses: *a184
    patch:
      x-speakeasy-entity-operation: Subscription#update
      operationId: updateSubscriptionById
      tags:
      - subscriptions
      summary: Update subscription
      description: Update subscription
      deprecated: false
      responses:
        "200":
          description: a list of Subscription objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Subscription ID
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
    delete:
      x-speakeasy-entity-operation: Subscription#delete
      operationId: deleteSubscriptionById
      tags:
      - subscriptions
      summary: Delete subscription
      description: Delete subscription
      deprecated: false
      responses:
        "200":
          description: a list of Subscription objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Subscription ID
      - name: groupId
        in: path
        required: true
        description: The consumer group to which this instance belongs. Defaults to 'Cribl'.
        schema:
          type: string
          example: string
  "/system/projects/{projectId}/subscriptions":
    get:
      operationId: getSubscriptionByProjectId
      tags:
      - projects
      - subscriptions
      summary: Get the subscriptions associated with the project
      description: Get the subscriptions associated with the project
      deprecated: false
      responses:
        "200":
          description: a list of Subscription objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Subscription"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Project Id
  "/master/groups/{id}/configVersion":
    get:
      x-speakeasy-entity-operation: ConfigVersion#read
      operationId: getGroupsConfigVersionById
      tags:
      - groups
      summary: Get effective bundle version for given Group
      description: Get effective bundle version for given Group
      deprecated: false
      responses:
        "200":
          description: a list of string objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      type: string
                      example: string
                    example:
                    - string
                example:
                  count: 123
                  items:
                  - string
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group ID
  "/products/{product}/groups":
    post:
      x-speakeasy-entity-operation: Group#create
      operationId: createProductsGroupsByProduct
      tags:
      - groups
      summary: Create a Fleet or Worker Group
      description: Create a Fleet or Worker Group
      deprecated: false
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Group"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        description: ConfigGroup object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigGroup"
      parameters:
      - name: product
        in: path
        required: true
        schema:
          type: string
          enum:
          - stream
          - edge
          example: stream
        description: Cribl Product
    get:
      operationId: getProductsGroupsByProduct
      tags:
      - groups
      summary: Get a list of ConfigGroup objects
      description: Get a list of ConfigGroup objects
      deprecated: false
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Group"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: product
        in: path
        required: true
        schema:
          type: string
          enum:
          - stream
          - edge
          example: stream
        description: Cribl Product
  "/master/groups/{id}":
    get:
      x-speakeasy-entity-operation: Group#get
      operationId: getGroupsById
      tags:
      - groups
      summary: Get a specific ConfigGroup object
      description: Get a specific ConfigGroup object
      deprecated: false
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Group"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group id
      - name: fields
        in: query
        required: false
        schema:
          type: string
          example: string
        description: "fields to add to results: git.commit, git.localChanges, git.log"
    patch:
      operationId: updateGroupsById
      tags:
      - groups
      summary: Update a specific ConfigGroup object
      description: Update a specific ConfigGroup object
      x-speakeasy-entity-operation: Group#update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group id
      responses:
        '200':
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count_total:
                    type: integer
                    description: number of items present in the items array
                    x-speakeasy-ignore: true
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
                    example:
                    - 
                example:
                  count_total: 123
                  items:
                  - 
    delete:
      operationId: deleteGroupsById
      tags:
      - groups
      summary: Delete a specific ConfigGroup object
      description: Delete a specific ConfigGroup object
      x-speakeasy-entity-operation: Group#delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group id
      responses:
        "200":
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Group"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
  "/products/{product}/groups/{id}/acl/teams":
    get:
      operationId: getProductsGroupsAclTeamsByProductAndId
      tags:
      - teams
      summary: ACL of team with permissions for resources in this Group
      description: ACL of team with permissions for resources in this Group
      deprecated: false
      responses:
        "200":
          description: a list of TeamAccessControlList objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamAccessControlList"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: product
        in: path
        required: true
        schema:
          type: string
          enum:
          - stream
          - edge
          example: stream
        description: Cribl Product
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group ID
      - name: type
        in: query
        required: false
        schema:
          type: string
          enum:
          - groups
          - datasets
          - dataset-providers
          - projects
          - dashboards
          - macros
          example: groups
        description: resource type by which to filter access levels
  "/master/groups/{id}/acl":
    get:
      operationId: getGroupsAclById
      tags:
      - groups
      - users ACL
      summary: ACL of members with permissions for resources in this Group
      description: ACL of members with permissions for resources in this Group
      deprecated: false
      responses:
        "200":
          description: a list of UserAccessControlList objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    x-speakeasy-ignore: true
                    type: integer
                    description: number of items present in the items array
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserAccessControlList"
                    example:
                    - 
                example:
                  count: 123
                  items:
                  - 
        "401":
          description: Unauthorized
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group id
      - name: type
        in: query
        required: false
        schema:
          type: string
          enum:
          - groups
          - datasets
          - dataset-providers
          - projects
          - dashboards
          - macros
          example: groups
        description: resource type by which to filter access levels
  /master/groups/{id}/deploy:
    patch:
      operationId: updateGroupsDeployById
      tags:
      - groups
      summary: Deploy commits for a Fleet or Worker Group
      description: Deploy commits for a Fleet or Worker Group
      x-speakeasy-entity-operation: Deploy#create
      responses:
        '200':
          description: a list of ConfigGroup objects
          content:
            application/json:
              schema:
                type: object
                properties:
                  count_total:
                    type: integer
                    description: number of items present in the items array
                    x-speakeasy-ignore: true
                    example: 123
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfigGroup'
                    example:
                    - 
                example:
                  count_total: 123
                  items:
                  - 
        '401':
          description: Unauthorized
        '500':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        description: DeployRequest object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployRequest'
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          example: string
        description: Group ID
servers:
- url: https://{workspaceId}-{organizationId}.{cloudDomain}
  x-speakeasy-server-id: cloud
  variables:
    workspaceId:
      default: main
      description: The Workspace name
    organizationId:
      default: ian
      description: The Organization ID
    cloudDomain:
      default: cribl.cloud
      description: Cribl Cloud domain name
